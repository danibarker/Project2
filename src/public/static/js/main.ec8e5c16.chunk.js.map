{"version":3,"sources":["images/home.png","images/title.png","components/NavBar.js","requests/gets.js","requests/posts.js","components/SearchMovie.js","components/Movielist.js","components/MovieInfo.js","components/AddWarning.js","components/Login.js","components/SignUp.js","components/Thanks.js","components/Admin.js","App.js","index.js"],"names":["module","exports","NavBar","setCurrentPage","className","Box","display","p","bgcolor","style","width","margin","cursor","src","logo","onClick","titleImage","height","justifyContent","padding","fontSize","paddingLeft","paddingRight","paddingTop","paddingBottom","serverURL","getWarnings","movieID","a","fetch","response","json","result","console","log","searchTMDB","searchValue","suggestions","method","results","forEach","movie","length","push","release_date","title","original_title","id","getTMDB","tmdb","data","getPopular","items","getAllResource","type","resource","getMovie","tmdbID","warnings","warning","headers","body","JSON","stringify","userID","categoryID","frequencyID","typeID","severityID","addResource","newResource","value","removeResource","addMovie","movieName","res","_id","addedMovie","SearchMovie","setPage","setMovie","useState","setResults","text","onChange","event","getResults","target","placeholder","map","key","split","MovieList","useEffect","fetchItems","setItems","popularMovies","flexWrap","poster_path","alt","average","nums","reduce","b","ViewMovieInfo","movieTitle","setWarnings","warningModelData","setWarningModelData","movieDesc","setMovieDesc","findInfoFromID","attr","item","getWarningModelData","categories","frequencies","types","severities","getDescription","desc","overview","getWarningData","warningData","getData","warningLabelsfromValues","frequency","severity","warningTotals","freq","sev","Object","keys","includes","warningAverages","category","Math","round","right","top","marginBottom","border","indexOf","data-title","AddWarning","findValueFromID","pageData","getPageData","setPageData","unchosenError","setUnchosenError","setCategory","setFrequency","setType","setSeverity","comment","setComment","concat","color","createNewWarning","Login","username","setUsername","password","setPassword","Container","Row","Col","md","lg","xl","CardGroup","Card","CardBody","Form","InputGroup","Input","e","Button","Accept","then","Response","Status","alert","props","history","block","SignUp","Thanks","setTimeout","pageToShow","adminType","setAdminType","Category","setCategories","newCategory","setNewCategory","loading","setLoading","currentCategories","createNewCategory","deleteCategory","deleteTitle","class","Frequency","setFrequencies","newFrequency","setNewFrequency","newValue","setNewValue","currentFrequencies","createNewFrequency","deleteFrequency","Type","setTypes","newType","setNewType","currentTypes","createNewType","deleteType","Severity","setSeverities","newSeverity","setNewSeverity","currentSeverities","createNewSeverity","deleteSeverity","App","currentPage","selectedMovie","setSelectedMovie","Home","Movielist","Admin","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2GAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,8MCK5B,SAASC,EAAT,GAAqC,IAAD,EAAlBC,EAAkB,EAAlBA,eAC/B,OACE,oCACE,yBAAKC,UAAU,UACb,kBAACC,EAAA,EAAD,CAAKC,QAAQ,OAAOC,EAAG,EAAGC,QAAQ,oBAChC,yBAAKC,MAAO,CAACC,MAAM,MAAMC,OAAO,SAC9B,yBACEF,MAAO,CAAEG,OAAO,UAAWF,MAAO,MAAOC,OAAO,QAChDD,MAAM,OACNG,IAAKC,IACLP,EAAG,EACHQ,QAAS,WACPZ,EAAe,kBAIrB,yBAAKM,MAAO,CAACC,MAAM,MAASC,OAAO,SACjC,yBACEE,IAAKG,IACLP,MAAO,CAAEC,MAAO,MAAOO,OAAQ,OAAQN,OAAO,WAGlD,yBAAKF,MAAO,CAACC,MAAM,MAEzBJ,QAAS,OACTY,eAAgB,aACR,+BACET,MAAO,CAAEC,MAAO,OAAQO,OAAQ,OAAQE,QAAS,eAEnDf,UAAU,mBAHV,sBAGmC,CAAEgB,SAAU,MAAOC,YAAY,MAAMC,aAAa,MAAMC,WAAW,MAAMC,cAAc,QAH1H,yBAIa,WACPrB,EAAe,aALrB,kB,2BC/BNsB,EAAY,wBAKX,SAAeC,EAAtB,kC,4CAAO,WAA2BC,GAA3B,iBAAAC,EAAA,+EAEwBC,MACnBJ,EAAY,yBAA2BE,GAH5C,cAEOG,EAFP,gBAKsBA,EAASC,OAL/B,cAKOC,EALP,yBAOQA,GAPR,kCASCC,QAAQC,IAAR,MATD,2D,sBAcA,SAAeC,EAAtB,kC,4CAAO,WAA0BC,GAA1B,mBAAAR,EAAA,6DACHK,QAAQC,IAAI,cAAeE,GACvBC,EAAc,GAFf,kBAIwBR,MACnBJ,EAAY,+BAAiCW,EAC7C,CACIE,OAAQ,QAPjB,cAIOR,EAJP,gBAUsBA,EAASC,OAV/B,QAUOC,EAVP,QAYYO,SACPP,EAAOO,QAAQC,SAAQ,SAACC,GAChBJ,EAAYK,OAAS,GACrBL,EAAYM,KAAK,CAAEC,aAAcH,EAAMG,aAAcC,MAAOJ,EAAMK,eAAgBC,GAAIN,EAAMM,QAfzG,kDAoBCd,QAAQC,IAAR,MApBD,iCAsBIG,GAtBJ,2D,sBAwBA,SAAeW,EAAtB,kC,4CAAO,WAAuBC,GAAvB,iBAAArB,EAAA,6DACHK,QAAQC,IAAIe,GADT,SAEgBpB,MAAMJ,EAAY,uBAAyBwB,GAF3D,cAEGC,EAFH,gBAGiBA,EAAKnB,OAHtB,cAGGU,EAHH,yBAIIA,GAJJ,4C,sBAMA,SAAeU,IAAtB,+B,4CAAO,8BAAAvB,EAAA,sEACgBC,MAAMJ,EAAY,uBADlC,cACGyB,EADH,gBAGiBA,EAAKnB,OAHtB,cAGGqB,EAHH,yBAIIA,EAAMb,SAJV,4C,sBAOA,SAAec,EAAtB,kC,4CAAO,WAA8BC,GAA9B,iBAAA1B,EAAA,sEACoBC,MAAMJ,EAAS,eAAW6B,IAD9C,cACGxB,EADH,gBAEoBA,EAASC,OAF7B,cAEGwB,EAFH,yBAGIA,GAHJ,4C,sBAkBA,SAAeC,EAAtB,kC,4CAAO,WAAwBC,GAAxB,iBAAA7B,EAAA,sEACoBC,MAAMJ,EAAS,qBAAiBgC,IADpD,cACG3B,EADH,gBAEoBA,EAASC,OAF7B,cAEGwB,EAFH,yBAGIA,GAHJ,4C,kCCxED9B,EAAY,wB,4CAEX,WAAgCiC,GAAhC,mBAAA9B,EAAA,oEACe8B,GADf,IACL,2BAASC,EAAqB,QAC5B9B,MAAMJ,EAAY,sBAAuB,CACvCa,OAAQ,OACRsB,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBJ,QAAS,CACPK,OAAQL,EAAQK,OAChBrC,QAASgC,EAAQhC,QACjBsC,WAAYN,EAAQM,WACpBC,YAAaP,EAAQO,YACrBC,OAAQR,EAAQQ,OAChBC,WAAYT,EAAQS,gBAZvB,0E,sBAmBA,SAAeC,EAAtB,oC,4CAAO,WAA2Bf,EAAMgB,GAAjC,eAAA1C,EAAA,sDAGHsB,EADW,aAATI,EACKQ,KAAKC,UAAU,CAAElB,MAAOyB,EAAYzB,QAEpCiB,KAAKC,UAAU,CACpBlB,MAAOyB,EAAYzB,MACnB0B,MAAOD,EAAYC,QAGvB1C,MAAMJ,EAAS,eAAW6B,EAAX,WAA0B,CACvChB,OAAQ,OACRsB,QAAS,CAAE,eAAgB,oBAC3BC,KAAMX,IAbH,4C,sBAiBA,SAAesB,EAAtB,oC,4CAAO,WAA8BlB,EAAMgB,GAApC,eAAA1C,EAAA,sDAGLsB,EAAOY,KAAKC,UAAU,CAAElB,MAAOyB,EAAYzB,QAE3ChB,MAAMJ,EAAS,eAAW6B,EAAX,WAA0B,CACvChB,OAAQ,OACRsB,QAAS,CAAE,eAAgB,oBAC3BC,KAAMX,IARH,4C,sBAwBA,SAAeuB,EAAtB,oC,4CAAO,WAAwBhB,EAAQiB,GAAhC,qBAAA9C,EAAA,+EAGe4B,EAASC,GAHxB,cAGGkB,EAHH,yBAIIA,EAAIC,KAJR,uCAMG9C,EAAWD,MAAM,yCAA0C,CAC/DS,OAAQ,OACRsB,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAElB,MAAO6B,EAAWzB,KAAMQ,MAT9C,UAWgB3B,EAXhB,eAWGoB,EAXH,iBAYsBA,EAAKnB,OAZ3B,eAYG8C,EAZH,yBAcIA,EAAWD,KAdf,0D,sBC1DQ,SAASE,EAAT,GAA6C,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SAAY,EAEzBC,mBAAS,IAFgB,mBAEhD1C,EAFgD,KAEvC2C,EAFuC,iDAIvD,WAA0BC,GAA1B,eAAAvD,EAAA,sEAC4BO,EAAWgD,GADvC,OACQ9C,EADR,OAEIJ,QAAQC,IAAIG,GACZ6C,EAAW7C,GAHf,4CAJuD,sBASvD,OACI,yBAAKU,GAAG,aACJ,2BACIA,GAAG,QACHO,KAAK,OACL8B,SAAU,SAACC,IAdgC,oCAevCC,CAAWD,EAAME,OAAOhB,QAE5BiB,YAAY,WAEfjD,EAAQkD,KAAI,SAACzD,GAAD,OACT,wBAAI0D,IAAK1D,EAAOe,GAAIhC,QAAO,sBAAE,4BAAAa,EAAA,sEACR6C,EAASzC,EAAOe,GAAIf,EAAOa,OADnB,OACnBE,EADmB,OAEzBiC,EAAS,CAAE/B,KAAMjB,EAAOe,GAAIF,MAAOb,EAAOa,MAAOE,GAAIA,IACrDgC,EAAQ,aAHiB,4CAK1B/C,EAAOa,MALV,KAKmBb,EAAOY,aAAa+C,MAAM,KAAK,GALlD,SC2BDC,MA/Cf,YAA2C,IAAtBZ,EAAqB,EAArBA,SAAUD,EAAW,EAAXA,QAC7Bc,qBAAU,WACRC,MACC,IAHqC,MAMdb,mBAAS,IANK,mBAMjC7B,EANiC,KAM1B2C,EAN0B,KAQlCD,EAAU,uCAAG,4BAAAlE,EAAA,sEACSuB,IADT,OACb6C,EADa,OAEjBD,EAASC,GAFQ,2CAAH,qDAIhB,OACE,kBAAC3F,EAAA,EAAD,CAAK4F,SAAS,OAAO3F,QAAQ,QAC3B,yBAAKF,UAAU,WACZgD,EAAMqC,KAAI,SAAClD,GAAD,OACT,kBAAClC,EAAA,EAAD,CAAMqF,IAAKnD,EAAQM,MAAOE,GAAG,YAC3B,6BACE,yBAAK3C,UAAU,aACb,yBAAKA,UAAU,mBACb,4BACE,yBAAKW,QAAS,kBAAMiE,EAASzC,EAAQM,SAClCN,EAAQM,UAKjB,yBACE9B,QAAO,sBAAE,4BAAAa,EAAA,sEACU6C,EAASlC,EAAQQ,GAAIR,EAAQM,OADvC,OACDE,EADC,OAEGiC,EAAS,CAAE/B,KAAMV,EAAQQ,GAAIF,MAAON,EAAQM,MAAOE,GAAIA,IACjEgC,EAAQ,aAHD,2CAKTlE,IACE,iDACA0B,EAAQ2D,YAEVC,IAAI,gBCtCpB,SAASC,EAAQC,GACf,OAAOA,EAAKC,QAAO,SAAC1E,EAAG2E,GAAJ,OAAU3E,EAAI2E,KAAKF,EAAK3D,OAE9B,SAAS8D,EAAT,GAAuE,IAA9CrG,EAA6C,EAA7CA,eAAgB8C,EAA6B,EAA7BA,KAAMtB,EAAuB,EAAvBA,QAAS8E,EAAc,EAAdA,WAAc,EACnDxB,mBAAS,IAD0C,mBAC5EvB,EAD4E,KAClEgD,EADkE,OAEnCzB,qBAFmC,mBAE5E0B,EAF4E,KAE1DC,EAF0D,OAG/C3B,qBAH+C,mBAG1E4B,EAH0E,KAG/DC,EAH+D,KAI7EC,EAAiB,SAACzD,EAAMP,EAAIiE,GAAU,IAAD,gBACxBL,EAAiBrD,IADO,IACzC,2BAAyC,CAAC,IAAjC2D,EAAgC,QACvC,GAAIA,EAAKrC,MAAQ7B,EACf,OAAOkE,EAAKD,IAHyB,gCAQrCE,EAAmB,uCAAG,kCAAAtF,EAAA,sEACDyB,EAAe,cADd,cACpB8D,EADoB,gBAEA9D,EAAe,eAFf,cAEpB+D,EAFoB,gBAGN/D,EAAe,SAHT,cAGpBgE,EAHoB,iBAIDhE,EAAe,cAJd,QAIpBiE,EAJoB,OAK1BV,EAAoB,CAClBO,WAAYA,EACZC,YAAaA,EACbC,MAAOA,EACPC,WAAYA,IATY,4CAAH,qDAYjBC,EAAc,uCAAG,4BAAA3F,EAAA,sEACAoB,EAAQC,GADR,OACbuE,EADa,OAEnBvF,QAAQC,IAAIsF,GACZV,EAAaU,EAAKC,UAHC,2CAAH,qDAKhBC,EAAc,uCAAG,4BAAA9F,EAAA,sEACKF,EAAYC,GADjB,OACfgG,EADe,OAErBjB,EAAYiB,GAFS,2CAAH,qDAgBpB,GATA9B,qBAAU,YACK,uCAAG,sBAAAjE,EAAA,sEACR8F,IADQ,uBAENR,IAFM,uBAGNK,IAHM,2CAAH,qDAKbK,KACC,KAEEjB,EACH,OAAO,0CAIT,IAAMkB,EAA0B,CAC9BT,YAAa,GACbC,MAAO,GACPC,WAAY,IAEdX,EAAiBS,YAAY5E,SAAQ,SAACsF,GACpCD,EAAwBT,YAAYU,EAAUvD,OAASuD,EAAUjF,SAEnE8D,EAAiBU,MAAM7E,SAAQ,SAACc,GAC9BuE,EAAwBR,MAAM/D,EAAKiB,OAASjB,EAAKT,SAEnD8D,EAAiBW,WAAW9E,SAAQ,SAACuF,GACnCF,EAAwBP,WAAWS,EAASxD,OAASwD,EAASlF,SAEhE,IAAMmF,EAAgB,GAOtBtE,EAASlB,SAAQ,SAACmB,GAChB,IAAMsE,EAAOlB,EAAe,cAAepD,EAAQO,YAAa,SAC1DgE,EAAMnB,EAAe,aAAcpD,EAAQS,WAAY,SACvDd,EAAOyD,EAAe,QAASpD,EAAQQ,OAAQ,SACjDgE,OAAOC,KAAKJ,GAAeK,SAAS1E,EAAQM,aAC9C+D,EAAcrE,EAAQM,YAAtB,YAAiDtB,KAAKsF,GACtDD,EAAcrE,EAAQM,YAAtB,WAAgDtB,KAAKuF,GACrDF,EAAcrE,EAAQM,YAAtB,MAA2CtB,KAAKW,IAEhD0E,EAAcrE,EAAQM,YAAc,CAClCmD,YAAa,CAACa,GACdX,WAAY,CAACY,GACbb,MAAO,CAAC/D,OAKd,IAAMgF,EAAkB,GAaxB,OAZAH,OAAOC,KAAKJ,GAAexF,SAAQ,SAAC+F,GAClCD,EAAgB3F,KAAK,CACnB4F,SAAUxB,EAAe,aAAcwB,EAAU,SACjDT,UAAWU,KAAKC,MAAMrC,EAAQ4B,EAAcO,GAAUnB,cACtD9D,KAAMkF,KAAKC,MAAMrC,EAAQ4B,EAAcO,GAAUlB,QACjDU,SAAUS,KAAKC,MACbrC,EAAQ4B,EAAcO,GAAUjB,kBAOpC,oCACM,yBAAKlH,UAAU,+DAEjB,4BAAKqG,GAFH,IAEoB,yBAAKhG,MAAO,CAAEiI,MAAM,MAAOC,IAAK,MAAOC,aAAa,QAAU7F,GAAG,aAAa8D,GACpG,yCACA,2BAAOgC,OAAO,KACZ,+BACE,4BACE,wCACA,wCACA,yCACA,sCAGJ,+BACaP,EAAgB7C,KAAI,SAAC9B,GAAD,OACjB,wBAAI+B,IAAK4C,EAAgBQ,QAAQnF,IAC3C,wBAAIoF,aAAW,YAAYpF,EAAQ4E,UACnC,wBAAIQ,aAAW,YAAYlB,EAAwBP,WAAW3D,EAAQoE,WACtE,wBAAIgB,aAAW,aAAalB,EAAwBT,YAAYzD,EAAQmE,YACxE,wBAAIiB,aAAW,QAAQlB,EAAwBR,MAAM1D,EAAQL,cAOvE,yBAAKlD,UAAU,6CACb,4BAAQA,UAAU,kBAAkBW,QAAS,WAC3CZ,EAAe,gBADjB,iBCnIO,SAAS6I,EAAT,GAKX,IAJA7I,EAID,EAJCA,eACA6D,EAGD,EAHCA,OACArC,EAED,EAFCA,QACA8E,EACD,EADCA,WAEMwC,EAAkB,SAAC3F,EAAMP,GAC3Bd,QAAQC,IAAI,OAAQoB,EAAM,KAAMP,GADE,oBAEjBmG,EAAS5F,IAFQ,IAElC,2BAAiC,CAAC,IAAzB2D,EAAwB,QAC7B,GAAIA,EAAKrC,MAAQ7B,EACb,OAAOkE,EAAKpE,OAJc,gCAShCsG,EAAW,uCAAG,kCAAAvH,EAAA,sEACSyB,EAAe,cADxB,cACV8D,EADU,gBAEU9D,EAAe,eAFzB,cAEV+D,EAFU,gBAGI/D,EAAe,SAHnB,cAGVgE,EAHU,iBAIShE,EAAe,cAJxB,QAIViE,EAJU,OAKhB8B,EAAY,CACRjC,WAAYA,EACZC,YAAaA,EACbC,MAAOA,EACPC,WAAYA,IATA,4CAAH,qDAVlB,EAsB2CrC,oBAAS,GAtBpD,mBAsBQoE,EAtBR,KAsBuBC,EAtBvB,OAuBiCrE,qBAvBjC,mBAuBQiE,EAvBR,KAuBkBE,EAvBlB,OAwBiCnE,mBAAS,IAxB1C,mBAwBQvB,EAxBR,KAwBkBgD,EAxBlB,OAyBiCzB,mBAAS,IAzB1C,mBAyBQsD,EAzBR,KAyBkBgB,EAzBlB,OA0BmCtE,mBAAS,IA1B5C,mBA0BQ6C,EA1BR,KA0BmB0B,EA1BnB,OA2ByBvE,mBAAS,IA3BlC,mBA2BQ3B,EA3BR,KA2BcmG,EA3Bd,OA4BiCxE,mBAAS,IA5B1C,mBA4BQ8C,EA5BR,KA4BkB2B,EA5BlB,OA6B+BzE,mBAAS,IA7BxC,mBA6BQ0E,EA7BR,KA6BiBC,EA7BjB,KAoCC,OANA/D,qBAAU,YACO,uCAAG,sBAAAjE,EAAA,sEACNuH,IADM,2CAAH,qDAGbvB,KACD,IACEsB,EAID,yBAAK9I,UAAU,mCACX,6BAAK,gDAAsBqG,IAC3B,6BACA,yBAAKrG,UAAU,UACX,4BACIA,UAAU,uBACVgF,SAAU,SAACC,GACPkE,EAAYlE,EAAME,OAAOhB,SAG7B,qDACC2E,EAAS/B,WAAW1B,KAAI,SAAC8C,GAAD,OACrB,4BAAQ7C,IAAK6C,EAAS3D,IAAKL,MAAOgE,EAAS3D,KACtC2D,EAAS1F,WAItB,4BACIzC,UAAU,uBACVgF,SAAU,SAACC,GACPmE,EAAanE,EAAME,OAAOhB,SAG9B,sDACC2E,EAAS9B,YAAY3B,KAAI,SAACqC,GAAD,OACtB,4BAAQpC,IAAKoC,EAAUlD,IAAKL,MAAOuD,EAAUlD,KACxCkD,EAAUjF,WAKvB,4BACIzC,UAAU,uBACVgF,SAAU,SAACC,GACPoE,EAAQpE,EAAME,OAAOhB,SAGzB,iDACC2E,EAAS7B,MAAM5B,KAAI,SAACnC,GAAD,OAChB,4BAAQoC,IAAKpC,EAAKsB,IAAKL,MAAOjB,EAAKsB,KAC9BtB,EAAKT,WAKlB,4BACIzC,UAAU,uBACVgF,SAAU,SAACC,GACPqE,EAAYrE,EAAME,OAAOhB,SAG7B,qDACC2E,EAAS5B,WAAW7B,KAAI,SAACsC,GAAD,OACrB,4BAAQrC,IAAKqC,EAASnD,IAAKL,MAAOwD,EAASnD,KACtCmD,EAASlF,WAKtB,8BACIE,GAAG,aACHyC,YAAY,sBACZJ,SAAU,SAACC,GACPuE,EAAWvE,EAAME,OAAOhB,UAIhC,6BAEA,4BAAQnE,UAAU,kBACdW,QAAS,WACDwH,GAAYT,GAAaxE,GAAQyE,GACjCuB,GAAiB,GACjB5C,EACIhD,EAASmG,OAAO,CACZ,CACI7F,OAAQA,EACRrC,QAASA,EACTsC,WAAYsE,EACZrE,YAAa4D,EACb3D,OAAQb,EACRc,WAAY2D,EACZ4B,QAASA,OAKrBL,GAAiB,KAlB7B,qBAyBHD,EACG,yBAAK5I,MAAO,CAAEqJ,MAAO,QAArB,4CAGA,KAEJ,6BACA,yBAAK1J,UAAU,QACX,4BAAQA,UAAY,kBAChBW,QAAS,YJvJtB,SAAP,2BIwJwBgJ,CAAiBrG,GACjBvD,EAAe,YAHvB,sBASJ,6BACA,yBAAKC,UAAU,sBACX,2BAAOA,UAAU,SAASyI,OAAO,KAC7B,+BACI,4BACI,wCACA,yCACA,oCACA,wCACA,yCAIPnF,EAAShB,OAAS,EACf,+BACKgB,EAAS+B,KAAI,SAACwB,GAAD,OACV,wBAAIvB,IAAK,MAAQhC,EAASoF,QAAQ7B,IAC9B,wBACI8B,aAAW,WACXrD,IAAK,IAAMhC,EAASoF,QAAQ7B,IAE3BgC,EACG,aACAhC,EAAKhD,aAGb,wBACI8E,aAAW,YACXrD,IAAK,IAAMhC,EAASoF,QAAQ7B,IAE3BgC,EACG,cACAhC,EAAK/C,cAGb,wBACI6E,aAAW,OACXrD,IAAK,IAAMhC,EAASoF,QAAQ7B,IAE3BgC,EAAgB,QAAShC,EAAK9C,SAEnC,wBACI4E,aAAW,WACXrD,IAAK,IAAMhC,EAASoF,QAAQ7B,IAE3BgC,EACG,aACAhC,EAAK7C,aAGb,wBACI2E,aAAW,UACXrD,IAAK,KAAOhC,EAASoF,QAAQ7B,IAE5BA,EAAK0C,cAKtB,MAGR,6BACA,+BAjLD,2C,qFC9CA,SAASK,GAAT,GAAkC,IAAD,OAAjB7J,EAAiB,EAAjBA,eAAiB,EACd8E,mBAAS,IADK,mBACvCgF,EADuC,KAC7BC,EAD6B,OAEdjF,mBAAS,IAFK,mBAEvCkF,EAFuC,KAE7BC,EAF6B,KAiC5C,OACE,yBAAKhK,UAAU,mCACb,kBAACiK,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKlK,UAAU,0BACb,kBAACmK,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACpB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMxK,UAAU,OACd,kBAACyK,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KAEE,yBACE1K,UAAU,aACVK,MAAO,IAEP,kBAACsK,EAAA,EAAD,CAAY3K,UAAU,QACpB,kBAAC4K,EAAA,EAAD,CACE1H,KAAK,OACL8B,SAAU,SAAC6F,GA7Cd,IAAC5F,IA6CiC4F,EAAE1F,OAAOhB,MA5ChE2F,EAAa7E,EAAME,OAAOhB,QA6CFiB,YAAY,iBAGhB,kBAACuF,EAAA,EAAD,CAAY3K,UAAU,QACpB,kBAAC4K,EAAA,EAAD,CACE1H,KAAK,WACL8B,SAAU,SAAC6F,GAjDd,IAAC5F,IAiDiC4F,EAAE1F,OAAOhB,MAhDhE6F,EAAa/E,EAAME,OAAOhB,QAiDFiB,YAAY,oBAGhB,kBAAC0F,GAAA,EAAD,CAAQnK,QAlDhB,WAEZc,MAAM,mCAAoC,CACxCS,OAAQ,OACRsB,QAAS,CACPuH,OAAQ,mBACR,eAAgB,oBAElBtH,KAAMC,KAAKC,UAAU,CACnBkG,SAAUA,EACVE,SAAUA,MAGXiB,MAAK,SAACC,GAAD,OAAcA,EAAStJ,UAC5BqJ,MAAK,SAACpJ,GACLC,QAAQC,IAAIF,GACS,WAAjBA,EAAOsJ,OAAqBC,MAAM,gBACjC,EAAKC,MAAMC,QAAQ9I,KAAK,kBAiCWmH,MAAM,UAAU4B,OAAK,GAA7C,WAKJ,6BACA,4BAAQ3K,QAAS,WAAKZ,EAAe,YAArC,4BC5DHwL,OARjB,WACI,OACE,6BACI,mDCFK,SAASC,GAAT,GAAqC,IAAnBzL,EAAkB,EAAlBA,eAM7B,OALA0F,qBAAU,WACNgG,YAAW,WACP1L,EAAe,gBAChB,QAEA,gECJI,mBAAwB,EAArBA,eAAsB,IAElC2L,EAFiC,EACH7G,mBAAS,WAAY,YAAa,OAAQ,YADvC,mBAC9B8G,EAD8B,KACnBC,EADmB,KAYrC,MATiB,YAAbD,EACFD,EAAa,kBAAC,GAAD,MACU,aAAbC,EACVD,EAAa,kBAAC,GAAD,MACS,QAAbC,EACTD,EAAa,kBAAC,GAAD,MACS,YAAbC,IACTD,EAAa,kBAAC,GAAD,OAGb,6BACE,4BACE1G,SAAU,SAAC6F,GACTe,EAAaf,EAAE1F,OAAOhB,SAGxB,4CACA,6CACA,wCACA,6CAEDuH,IAKDG,GAAW,WAAO,IAAD,EACehH,qBADf,mBACdkC,EADc,KACF+E,EADE,OAEiBjH,qBAFjB,mBAEdkH,EAFc,KAEDC,EAFC,OAGSnH,oBAAS,GAHlB,mBAGdoH,EAHc,KAGLC,EAHK,KAIrBzG,qBAAU,YACK,uCAAG,sBAAAjE,EAAA,sEACRuH,IADQ,2CAAH,qDAGbvB,KACC,IAEH,IAAMuB,EAAW,uCAAG,4BAAAvH,EAAA,sEACcyB,EAAe,cAD7B,OACZkJ,EADY,OAElBL,EAAcK,GAFI,2CAAH,qDAKXC,EAAiB,uCAAG,sBAAA5K,EAAA,6DACxB0K,GAAW,GADa,SAElBjI,EAAY,WAAY,CAAExB,MAAOsJ,IAFf,OAGxBN,YAAW,WACT1C,IACAmD,GAAW,KACV,KANqB,2CAAH,qDASjBG,EAAc,uCAAG,WAAOC,GAAP,SAAA9K,EAAA,6DACrB0K,GAAW,GADU,SAEf9H,EAAe,WAAY,CAAE3B,MAAO6J,IAFrB,OAGrBb,YAAW,WACT1C,IACAmD,GAAW,KACV,KANkB,2CAAH,sDAQpB,OAAID,EACK,yBAAKxL,IAAI,uEAEbsG,EAIH,6BACE,4BACE,6BACGA,EAAW1B,KAAI,SAAC8C,GAAD,OACd,4BAAKA,EAAS1F,MAAd,IAAqB,4BAAQ9B,QAAS,kBAAM0L,EAAelE,EAAS1F,QAAQ8J,MAAM,aAA7D,kBAI3B,6BACE,wCACA,mCACA,2BACEvH,SAAU,SAAC6F,GACTmB,EAAenB,EAAE1F,OAAOhB,QAE1BiB,YAAY,uBAEd,4BAAQzE,QAASyL,EAAmBG,MAAM,aAA1C,YApBG,yDA8BLC,GAAY,WAAO,IAAD,EACgB3H,qBADhB,mBACfmC,EADe,KACFyF,EADE,OAEkB5H,qBAFlB,mBAEf6H,EAFe,KAEDC,EAFC,OAGU9H,qBAHV,mBAGf+H,EAHe,KAGLC,EAHK,OAIQhI,oBAAS,GAJjB,mBAIfoH,EAJe,KAINC,EAJM,KAKtBzG,qBAAU,YACK,uCAAG,sBAAAjE,EAAA,sEACRuH,IADQ,2CAAH,qDAGbvB,KACC,IAEH,IAAMuB,EAAW,uCAAG,4BAAAvH,EAAA,sEACeyB,EAAe,eAD9B,OACZ6J,EADY,OAElBL,EAAeK,GAFG,2CAAH,qDAKXC,EAAkB,uCAAG,sBAAAvL,EAAA,6DACzB0K,GAAW,GADc,SAEnBjI,EAAY,YAAa,CAAExB,MAAOiK,EAAcvI,MAAOyI,IAFpC,OAGzBnB,YAAW,WACT1C,IACAmD,GAAW,KACV,KANsB,2CAAH,qDASlBc,EAAe,uCAAG,WAAOV,GAAP,SAAA9K,EAAA,6DACtB0K,GAAW,GADW,SAEhB9H,EAAe,YAAa,CAAE3B,MAAO6J,IAFrB,OAGtBb,YAAW,WACT1C,IACAmD,GAAW,KACV,KANmB,2CAAH,sDAQrB,OAAID,EACK,yBAAKxL,IAAI,uEAEbuG,EAIH,6BACE,4BACE,6BACGA,EAAY3B,KAAI,SAACqC,GAAD,OACf,4BAAKA,EAAUjF,MAAf,IAAsB,4BAAQ9B,QAAS,kBAAMqM,EAAgBtF,EAAUjF,QAAQ8J,MAAM,aAA/D,kBAI5B,6BACE,yCACA,mCACA,2BACEvH,SAAU,SAAC6F,GACT8B,EAAgB9B,EAAE1F,OAAOhB,QAE3BiB,YAAY,wBAEd,2BACEJ,SAAU,SAAC6F,GACTgC,EAAYhC,EAAE1F,OAAOhB,QAEvBiB,YAAY,wBAId,4BAAQzE,QAASoM,EAAoBR,MAAM,aAA3C,YA5BG,yDAsCLU,GAAO,WAAO,IAAD,EACSpI,qBADT,mBACVoC,EADU,KACHiG,EADG,OAEarI,qBAFb,mBAEVsI,EAFU,KAEDC,EAFC,OAGevI,qBAHf,mBAGV+H,EAHU,KAGAC,EAHA,OAIahI,oBAAS,GAJtB,mBAIVoH,EAJU,KAIDC,EAJC,KAKjBzG,qBAAU,YACK,uCAAG,sBAAAjE,EAAA,sEACRuH,IADQ,2CAAH,qDAGbvB,KACC,IAEH,IAAMuB,EAAW,uCAAG,4BAAAvH,EAAA,sEACSyB,EAAe,SADxB,OACZoK,EADY,OAElBH,EAASG,GAFS,2CAAH,qDAKXC,EAAa,uCAAG,sBAAA9L,EAAA,6DACpB0K,GAAW,GADS,SAEdjI,EAAY,OAAQ,CAAExB,MAAO0K,EAAShJ,MAAOyI,IAF/B,OAGpBnB,YAAW,WACT1C,IACAmD,GAAW,KACV,KANiB,2CAAH,qDASbqB,EAAU,uCAAG,WAAOjB,GAAP,SAAA9K,EAAA,6DACjB0K,GAAW,GADM,SAEX9H,EAAe,OAAQ,CAAE3B,MAAO6J,IAFrB,OAGjBb,YAAW,WACT1C,IACAmD,GAAW,KACV,KANc,2CAAH,sDAQhB,OAAID,EACK,yBAAKxL,IAAI,uEAEbwG,EAIH,6BACE,4BACE,6BACGA,EAAM5B,KAAI,SAACnC,GAAD,OACT,4BAAKA,EAAKT,MAAV,IAAiB,4BAAQ9B,QAAS,kBAAM4M,EAAWrK,EAAKT,QAAQ8J,MAAM,aAArD,kBAIvB,6BACE,oCACA,mCACA,2BACEvH,SAAU,SAAC6F,GACTuC,EAAWvC,EAAE1F,OAAOhB,QAEtBiB,YAAY,mBAEd,2BACEJ,SAAU,SAAC6F,GACTgC,EAAYhC,EAAE1F,OAAOhB,QAEvBiB,YAAY,mBAId,4BAAQzE,QAAS2M,EAAef,MAAM,aAAtC,YA5BG,yDAqCLiB,GAAW,WAAO,IAAD,EACe3I,qBADf,mBACdqC,EADc,KACFuG,EADE,OAEiB5I,qBAFjB,mBAEd6I,EAFc,KAEDC,EAFC,OAGW9I,qBAHX,mBAGd+H,EAHc,KAGJC,EAHI,OAIShI,oBAAS,GAJlB,mBAIdoH,EAJc,KAILC,EAJK,KAKrBzG,qBAAU,YACK,uCAAG,sBAAAjE,EAAA,sEACRuH,IADQ,2CAAH,qDAGbvB,KACC,IAEH,IAAMuB,EAAW,uCAAG,4BAAAvH,EAAA,sEACcyB,EAAe,cAD7B,OACZ2K,EADY,OAElBH,EAAcG,GAFI,2CAAH,qDAKXC,EAAiB,uCAAG,sBAAArM,EAAA,6DACxB0K,GAAW,GADa,SAElBjI,EAAY,WAAY,CAAExB,MAAOiL,EAAavJ,MAAOyI,IAFnC,OAGxBnB,YAAW,WACT1C,IACAmD,GAAW,KACV,KANqB,2CAAH,qDASjB4B,EAAc,uCAAG,WAAOxB,GAAP,SAAA9K,EAAA,6DACrB0K,GAAW,GADU,SAEf9H,EAAe,WAAY,CAAE3B,MAAO6J,IAFrB,OAGrBb,YAAW,WACT1C,IACAmD,GAAW,KACV,KANkB,2CAAH,sDAQpB,OAAID,EACK,yBAAKxL,IAAI,uEAEbyG,EAIH,6BACE,4BACE,6BACGA,EAAW7B,KAAI,SAACsC,GAAD,OACd,4BAAKA,EAASlF,MAAd,IAAqB,4BAAQ9B,QAAS,kBAAMmN,EAAenG,EAASlF,QAAQ8J,MAAM,aAA7D,kBAI3B,6BACE,wCACA,mCACA,2BACEvH,SAAU,SAAC6F,GACT8C,EAAe9C,EAAE1F,OAAOhB,QAE1BiB,YAAY,uBAEd,2BACEJ,SAAU,SAAC6F,GACTgC,EAAYhC,EAAE1F,OAAOhB,QAEvBiB,YAAY,uBAId,4BAAQzE,QAASkN,EAAmBtB,MAAM,aAA1C,YA5BG,yDCtRI,SAASwB,KAAO,IAAD,EACUlJ,mBAAS,cADnB,mBACrBmJ,EADqB,KACRjO,EADQ,OAEc8E,mBAAS,CAACpC,MAAO,gBAAiBE,GAAG,2BAA4BE,KAAK,KAFpF,mBAErBoL,EAFqB,KAENC,EAFM,OAGYrJ,mBAAS,IAHrB,mBAIpBsJ,GAJoB,UAIb,WAGT,OAFAtM,QAAQC,IAAImM,EAAc3L,QAElB0L,GACJ,IAAK,SACD,OACI,oCACI,kBAACxC,GAAD,CAAQzL,eAAgBA,KAGpC,IAAK,SACD,OACI,6BACI,4BACIY,QAAS,WACLZ,EAAe,gBAFvB,8BAOA,6BACA,4BACIY,QAAS,WACLZ,EAAe,iBAFvB,6BAOA,6BACA,4BACIY,QAAS,WACLZ,EAAe,eAFvB,8BAOA,6BACA,4BACIY,QAAS,WACLZ,EAAe,YAFvB,2BAOA,6BACA,4BACIY,QAAS,WACLZ,EAAe,YAFvB,2BAOA,6BACA,4BACIY,QAAS,WACLZ,EAAe,WAFvB,yBAOA,8BAIZ,IAAK,aACD,OACI,kBAAC6I,EAAD,CACI7I,eAAgBA,EAEhBsG,WAAY4H,EAAcxL,MAC1BlB,QAAS0M,EAActL,GACvBiB,OAAQ,6BAIpB,IAAK,aACD,OACI,yBAAK5D,UAAU,OACX,kBAAC,EAAD,CAAW2E,QAAS5E,EAAgB6E,SAAUsJ,IAE9C,kBAACE,EAAD,CAAWzJ,QAAS5E,EAAgB6E,SAAUsJ,KAI1D,IAAK,YACD,OACI,6BACI,kBAAC9H,EAAD,CAAevD,KAAMoL,EAAcpL,KAAM9C,eAAgBA,EAAgBsG,WAAY4H,EAAcxL,MAAOlB,QAAS0M,EAActL,MAI7I,IAAK,SACD,OAAO,kBAACiH,GAAD,CAAO7J,eAAgBA,IAElC,IAAK,SACD,OAAO,kBAAC,GAAD,MAEX,IAAK,QACD,OAAO,kBAACsO,GAAD,MAEX,QACI,OAAO,wCAGnB,OACI,oCAEI,kBAACvO,EAAD,CAAQC,eAAgBA,IACxB,kBAACoO,EAAD,OCvHZG,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.ec8e5c16.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/home.7341615b.png\";","module.exports = __webpack_public_path__ + \"static/media/title.373e8623.png\";","import React from \"react\";\r\nimport \"../css/App.css\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport logo from \"../images/home.png\";\r\nimport titleImage from \"../images/title.png\";\r\nexport default function NavBar({ setCurrentPage }) {\r\n  return (\r\n    <>\r\n      <div className=\"navBar\">\r\n        <Box display=\"flex\" p={1} bgcolor=\"background.paper\">\r\n          <div style={{width:\"10%\",margin:\"auto\"}}>\r\n            <img\r\n              style={{ cursor:\"pointer\", width: \"90%\", margin:\"0 5%\"}}\r\n              width=\"20px\"\r\n              src={logo}\r\n              p={1}\r\n              onClick={() => {\r\n                setCurrentPage(\"Navigation\");\r\n              }}\r\n            ></img>\r\n          </div>\r\n          <div style={{width:\"70%\"  , margin:\"auto\" }}>\r\n            <img\r\n              src={titleImage}\r\n              style={{ width: \"90%\", height: \"auto\", margin:\"0 5%\" }}\r\n            ></img>\r\n          </div>\r\n          <div style={{width:\"10%\",\r\n    \r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\"}}>\r\n            <button\r\n              style={{ width: \"100%\", height: \"auto\", padding: \"0 20% 0 20%\" }}\r\n              \r\n            className=\"btn btn-success\" style={{ fontSize: \"2vw\", paddingLeft:\"5px\",paddingRight:\"5px\",paddingTop:\"0px\",paddingBottom:\"0px\"}}\r\n                onClick={() => {\r\n                  setCurrentPage(\"SignIn\");\r\n                }}\r\n              >\r\n                Sign in\r\n              </button>\r\n            \r\n          </div>\r\n        </Box>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","const serverURL = \"http://localhost:8000\"; //commment this line out for npm run build\r\n// const serverURL = '' //comment this line out for npm run start\r\n// Warnings\r\n\r\n//get by movie ID\r\nexport async function getWarnings(movieID) {\r\n    try {\r\n        const response = await fetch(\r\n            serverURL + \"/api/warnings?movieID=\" + movieID\r\n        );\r\n        const result = await response.json();\r\n\r\n        return result;\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\n// Search TMDB\r\nexport async function searchTMDB(searchValue) {\r\n    console.log(\"searchvalue\", searchValue);\r\n    let suggestions = [];\r\n    try {\r\n        const response = await fetch(\r\n            serverURL + \"/tmdb/findMovie?searchValue=\" + searchValue,\r\n            {\r\n                method: \"GET\",\r\n            }\r\n        );\r\n        const result = await response.json();\r\n\r\n        if (result.results) {\r\n            result.results.forEach((movie) => {\r\n                if (suggestions.length < 6) {\r\n                    suggestions.push({ release_date: movie.release_date, title: movie.original_title, id: movie.id });\r\n                }\r\n            });\r\n        }\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n    return suggestions;\r\n}\r\nexport async function getTMDB(tmdb) {\r\n    console.log(tmdb)\r\n    const data = await fetch(serverURL + \"/tmdb/getMovie?tmdb=\" + tmdb)\r\n    const movie = await data.json();\r\n    return movie\r\n}\r\nexport async function getPopular() {\r\n    const data = await fetch(serverURL + \"/tmdb/popularMovies\");\r\n\r\n    const items = await data.json();\r\n    return items.results;\r\n}\r\n\r\nexport async function getAllResource(type) {\r\n    const response = await fetch(serverURL + `/api/${type}`)\r\n    const resource = await response.json();\r\n    return resource\r\n}\r\n\r\nexport async function getOneResourceByID(type, id) {\r\n    const response = await fetch(serverURL + `/api/${type}/${id}`)\r\n    const resource = await response.json();\r\n    return resource\r\n}\r\n\r\nexport async function getUser(userName) {\r\n    const response = await fetch(serverURL + `/api/user/${userName}`)\r\n    const resource = await response.json();\r\n    return resource\r\n}\r\n\r\nexport async function getMovie(tmdbID) {\r\n    const response = await fetch(serverURL + `/api/movie/${tmdbID}`)\r\n    const resource = await response.json();\r\n    return resource\r\n}","import { getMovie } from \"./gets\";\r\n\r\nconst serverURL = \"http://localhost:8000\"; // comment this line for npm run build\r\n// const serverURL = '' // comment this line for npm run start\r\nexport async function createNewWarning(warnings) {\r\n  for (let warning of warnings) {\r\n    fetch(serverURL + \"/api/warning/create\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        warning: {\r\n          userID: warning.userID,\r\n          movieID: warning.movieID,\r\n          categoryID: warning.categoryID,\r\n          frequencyID: warning.frequencyID,\r\n          typeID: warning.typeID,\r\n          severityID: warning.severityID,\r\n        },\r\n      }),\r\n    });\r\n  }\r\n}\r\n\r\nexport async function addResource(type, newResource) {\r\n  let data;\r\n  if (type === \"category\") {\r\n    data = JSON.stringify({ title: newResource.title });\r\n  } else {\r\n    data = JSON.stringify({\r\n      title: newResource.title,\r\n      value: newResource.value,\r\n    });\r\n  }\r\n  fetch(serverURL + `/api/${type}/create`, {\r\n    method: \"post\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: data,\r\n  });\r\n}\r\n\r\nexport async function removeResource(type, newResource) {\r\n  let data;\r\n\r\n  data = JSON.stringify({ title: newResource.title });\r\n\r\n  fetch(serverURL + `/api/${type}/delete`, {\r\n    method: \"post\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: data,\r\n  });\r\n}\r\n\r\nexport async function addUser(newUsername, newEmail, newPassword) {\r\n  fetch(serverURL + \"/api/user/create\", {\r\n    method: \"post\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      username: newUsername,\r\n      email: newEmail,\r\n      password: newPassword,\r\n    }),\r\n  });\r\n}\r\n\r\nexport async function addMovie(tmdbID, movieName) {\r\n  // check if movie is in database already\r\n  try {\r\n    const res = await getMovie(tmdbID);\r\n    return res._id;\r\n  } catch {\r\n    const response = fetch(\"http://localhost:8000/api/movie/create\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ title: movieName, tmdb: tmdbID }),\r\n    });\r\n    const data = await response;\r\n    const addedMovie = await data.json();\r\n\r\n    return addedMovie._id;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"../css/App.css\";\r\nimport { useState } from \"react\";\r\nimport { searchTMDB } from \"../requests/gets\";\r\nimport { addMovie } from \"../requests/posts\";\r\n\r\nexport default function SearchMovie({ setPage, setMovie }) {\r\n   \r\n    const [results, setResults] = useState([]);\r\n\r\n    async function getResults(text) {\r\n        let suggestions = await searchTMDB(text);\r\n        console.log(suggestions)\r\n        setResults(suggestions);\r\n    }\r\n    return (\r\n        <div id=\"notebooks\">\r\n            <input\r\n                id=\"query\"\r\n                type=\"text\"\r\n                onChange={(event) => {\r\n                    getResults(event.target.value);\r\n                }}\r\n                placeholder=\"Search\"\r\n            />\r\n            {results.map((result) => (\r\n                <li key={result.id} onClick={async () => {\r\n                    const id = await addMovie(result.id, result.title)\r\n                    setMovie({ tmdb: result.id, title: result.title, id: id })\r\n                    setPage(\"MovieInfo\")\r\n                }\r\n                }>{result.title} ({result.release_date.split('-')[0]})</li>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../css/App.css\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { getPopular } from \"../requests/gets\";\r\nimport { addMovie } from \"../requests/posts\";\r\n\r\nfunction MovieList({ setMovie, setPage }) {\r\n  useEffect(() => {\r\n    fetchItems();\r\n  }, []);\r\n  // useEffect ==> it only going to run when the component mounts\r\n\r\n  const [items, setItems] = useState([]);\r\n\r\n  const fetchItems = async () => {\r\n    let popularMovies = await getPopular();\r\n    setItems(popularMovies);\r\n  };\r\n  return (\r\n    <Box flexWrap=\"wrap\" display=\"flex\">\r\n      <div className=\"MovList\">\r\n        {items.map((results) => (\r\n          <Box  key={results.title} id=\"BoxStyle\">\r\n            <div>\r\n              <div className=\"container\">\r\n                <div className=\"vertical-center\">\r\n                  <h4>\r\n                    <div onClick={() => setMovie(results.title)}>\r\n                      {results.title}\r\n                    </div>\r\n                  </h4>\r\n                </div>\r\n              </div>\r\n              <img\r\n                onClick={async () => {\r\n                  const id = await addMovie(results.id, results.title);\r\n                            setMovie({ tmdb: results.id, title: results.title, id: id })\r\n                  setPage(\"MovieInfo\");\r\n                }}\r\n                src={\r\n                  \" https://image.tmdb.org/t/p/w220_and_h330_face\" +\r\n                  results.poster_path\r\n                }\r\n                alt=\"no \"\r\n              />\r\n            </div>\r\n          </Box>\r\n        ))}\r\n      </div>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default MovieList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../css/App.css\";\r\nimport { getWarnings, getTMDB } from \"../requests/gets\";\r\n\r\nimport { getAllResource } from \"../requests/gets\";\r\nfunction average(nums) {\r\n  return nums.reduce((a, b) => a + b) / nums.length;\r\n}\r\nexport default function ViewMovieInfo({ setCurrentPage, tmdb, movieID, movieTitle }) {\r\n  const [warnings, setWarnings] = useState([]);\r\n  const [warningModelData, setWarningModelData] = useState();\r\n    const [movieDesc, setMovieDesc] = useState();\r\n  const findInfoFromID = (type, id, attr) => {\r\n    for (let item of warningModelData[type]) {\r\n      if (item._id === id) {\r\n        return item[attr];\r\n      }\r\n    }\r\n  };\r\n  // Get all categories,freq,etc from database\r\n  const getWarningModelData = async () => {\r\n    const categories = await getAllResource(\"categories\");\r\n    const frequencies = await getAllResource(\"frequencies\");\r\n    const types = await getAllResource(\"types\");\r\n    const severities = await getAllResource(\"severities\");\r\n    setWarningModelData({\r\n      categories: categories,\r\n      frequencies: frequencies,\r\n      types: types,\r\n      severities: severities,\r\n    });\r\n    };\r\n    const getDescription = async () => {\r\n        const desc = await getTMDB(tmdb);\r\n        console.log(desc)\r\n        setMovieDesc(desc.overview);\r\n    }\r\n  const getWarningData = async () => {\r\n    const warningData = await getWarnings(movieID);\r\n    setWarnings(warningData);\r\n  };\r\n\r\n  //    const category = findInfoFromID('categories', warning.categoryID, 'title')\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      await getWarningData();\r\n        await getWarningModelData();\r\n        await getDescription()\r\n    };\r\n    getData();\r\n  }, []);\r\n  \r\n  if (!warningModelData) {\r\n    return <h1>Loading...</h1>;\r\n  }\r\n  // lookup table of sorts, to convert a value into a title\r\n  // possibly change to just be a function\r\n  const warningLabelsfromValues = {\r\n    frequencies: {},\r\n    types: {},\r\n    severities: {},\r\n  };\r\n  warningModelData.frequencies.forEach((frequency) => {\r\n    warningLabelsfromValues.frequencies[frequency.value] = frequency.title;\r\n  });\r\n  warningModelData.types.forEach((type) => {\r\n    warningLabelsfromValues.types[type.value] = type.title;\r\n  });\r\n  warningModelData.severities.forEach((severity) => {\r\n    warningLabelsfromValues.severities[severity.value] = severity.title;\r\n  });\r\n  const warningTotals = {};\r\n\r\n  /* Will create an object with all of the warnings accumulated together: eg:\r\n  {violence: {frequencies: [1,1,2,3,2], sev: [1,2,4,5,2], type: [1,2,3,4,5]},\r\n  blood: etc.....}\r\n  */\r\n  \r\n  warnings.forEach((warning) => {\r\n    const freq = findInfoFromID(\"frequencies\", warning.frequencyID, \"value\");\r\n    const sev = findInfoFromID(\"severities\", warning.severityID, \"value\");\r\n    const type = findInfoFromID(\"types\", warning.typeID, \"value\");\r\n    if (Object.keys(warningTotals).includes(warning.categoryID)) {\r\n      warningTotals[warning.categoryID][\"frequencies\"].push(freq);\r\n      warningTotals[warning.categoryID][\"severities\"].push(sev);\r\n      warningTotals[warning.categoryID][\"types\"].push(type);\r\n    } else {\r\n      warningTotals[warning.categoryID] = {\r\n        frequencies: [freq],\r\n        severities: [sev],\r\n        types: [type],\r\n      };\r\n    }\r\n  });\r\n  /*turning those lists of freq,types,sevs into a single number from the average */\r\n  const warningAverages = [];\r\n  Object.keys(warningTotals).forEach((category) => {\r\n    warningAverages.push({\r\n      category: findInfoFromID(\"categories\", category, \"title\"),\r\n      frequency: Math.round(average(warningTotals[category].frequencies)),\r\n      type: Math.round(average(warningTotals[category].types)),\r\n      severity :Math.round(\r\n        average(warningTotals[category].severities)\r\n      )\r\n    });\r\n  });\r\n  \r\n\r\n  return (\r\n    <>\r\n          <div className=\"collapsible-tables pageContainer threeQuartersPageContainer\">\r\n             \r\n        <h2>{movieTitle}</h2> <div style={{ right:\"60%\", top: \"20%\", marginBottom:\"10px\" }} id=\"movieDesc\">{movieDesc}</div>\r\n        <h3>Warnings:</h3>\r\n        <table border=\"2\">\r\n          <thead>\r\n            <tr>\r\n              <th>Category</th>\r\n              <th>Severity</th>\r\n              <th>Frequency</th>\r\n              <th>Type</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n                      {warningAverages.map((warning) => (\r\n                          <tr key={warningAverages.indexOf(warning)}>\r\n                <td data-title=\"Category\">{warning.category}</td>\r\n                <td data-title=\"Severity\">{warningLabelsfromValues.severities[warning.severity]}</td>\r\n                <td data-title=\"Frequency\">{warningLabelsfromValues.frequencies[warning.frequency]}</td>\r\n                <td data-title=\"Type\">{warningLabelsfromValues.types[warning.type]}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <div className=\"pageContainer warningPageContainer-Bottom\">\r\n        <button className=\"btn btn-success\" onClick={() => {\r\n          setCurrentPage('AddWarning')\r\n        }}>Add warning</button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../css/App.css\";\r\nimport { getAllResource } from \"../requests/gets\";\r\nimport { createNewWarning } from \"../requests/posts\";\r\n\r\n// Example of an adding warning using different categories\r\n\r\nexport default function AddWarning({\r\n    setCurrentPage,\r\n    userID,\r\n    movieID,\r\n    movieTitle,\r\n}) {\r\n    const findValueFromID = (type, id) => {\r\n        console.log(\"type\", type, \"id\", id);\r\n        for (let item of pageData[type]) {\r\n            if (item._id === id) {\r\n                return item.title;\r\n            }\r\n        }\r\n    };\r\n\r\n    const getPageData = async () => {\r\n        const categories = await getAllResource(\"categories\");\r\n        const frequencies = await getAllResource(\"frequencies\");\r\n        const types = await getAllResource(\"types\");\r\n        const severities = await getAllResource(\"severities\");\r\n        setPageData({\r\n            categories: categories,\r\n            frequencies: frequencies,\r\n            types: types,\r\n            severities: severities,\r\n        });\r\n    };\r\n    const [unchosenError, setUnchosenError] = useState(false);\r\n    const [pageData, setPageData] = useState();\r\n    const [warnings, setWarnings] = useState([]);\r\n    const [category, setCategory] = useState(\"\");\r\n    const [frequency, setFrequency] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n    const [severity, setSeverity] = useState(\"\");\r\n    const [comment, setComment] = useState(\"\");\r\n    useEffect(() => {\r\n        const getData = async () => {\r\n            await getPageData();\r\n        };\r\n        getData();\r\n    }, []);\r\n    if (!pageData) {\r\n        return <div>Loading...</div>;\r\n    }\r\n    return (\r\n        <div className=\"pageContainer fullPageContainer\">\r\n            <div><h2>Add a warning to {movieTitle}</h2></div>\r\n            <br></br>\r\n            <div className=\"ptther\">\r\n                <select\r\n                    className=\"add-warning-dropdown\"\r\n                    onChange={(event) => {\r\n                        setCategory(event.target.value);\r\n                    }}\r\n                >\r\n                    <option>Choose a category</option>\r\n                    {pageData.categories.map((category) => (\r\n                        <option key={category._id} value={category._id}>\r\n                            {category.title}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n                <select\r\n                    className=\"add-warning-dropdown\"\r\n                    onChange={(event) => {\r\n                        setFrequency(event.target.value);\r\n                    }}\r\n                >\r\n                    <option>Choose a frequency</option>\r\n                    {pageData.frequencies.map((frequency) => (\r\n                        <option key={frequency._id} value={frequency._id}>\r\n                            {frequency.title}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n\r\n                <select\r\n                    className=\"add-warning-dropdown\"\r\n                    onChange={(event) => {\r\n                        setType(event.target.value);\r\n                    }}\r\n                >\r\n                    <option>Choose a Type</option>\r\n                    {pageData.types.map((type) => (\r\n                        <option key={type._id} value={type._id}>\r\n                            {type.title}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n\r\n                <select\r\n                    className=\"add-warning-dropdown\"\r\n                    onChange={(event) => {\r\n                        setSeverity(event.target.value);\r\n                    }}\r\n                >\r\n                    <option>Choose a Severity</option>\r\n                    {pageData.severities.map((severity) => (\r\n                        <option key={severity._id} value={severity._id}>\r\n                            {severity.title}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n                \r\n                <textarea\r\n                    id=\"commentBox\"\r\n                    placeholder=\"Additional comments\"\r\n                    onChange={(event) => {\r\n                        setComment(event.target.value);\r\n                    }}\r\n                />\r\n\r\n                <br />\r\n\r\n                <button className=\"btn btn-success\"\r\n                    onClick={() => {\r\n                        if (category && frequency && type && severity) {\r\n                            setUnchosenError(false);\r\n                            setWarnings(\r\n                                warnings.concat([\r\n                                    {\r\n                                        userID: userID,\r\n                                        movieID: movieID,\r\n                                        categoryID: category,\r\n                                        frequencyID: frequency,\r\n                                        typeID: type,\r\n                                        severityID: severity,\r\n                                        comment: comment,\r\n                                    },\r\n                                ])\r\n                            );\r\n                        } else {\r\n                            setUnchosenError(true);\r\n                        }\r\n                    }}\r\n                >\r\n                    Add this warning\r\n                </button>\r\n            </div>\r\n            {unchosenError ? (\r\n                <div style={{ color: \"red\" }}>\r\n                    Please choose a value from each dropdown\r\n                </div>\r\n            ) : null}\r\n\r\n            <br />\r\n            <div className=\"part\">\r\n                <button className = \"btn btn-primary\"\r\n                    onClick={() => {\r\n                        createNewWarning(warnings);\r\n                        setCurrentPage(\"Thanks\");\r\n                    }}\r\n                >\r\n                    Send All Warnings\r\n                </button>\r\n            </div>\r\n            <br />\r\n            <div className=\"collapsible-tables\">\r\n                <table className=\"center\" border=\"2\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Category</th>\r\n                            <th>Frequency</th>\r\n                            <th>Type</th>\r\n                            <th>Severity</th>\r\n                            <th>Comment</th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    {warnings.length > 0 ? (\r\n                        <tbody>\r\n                            {warnings.map((item) => (\r\n                                <tr key={\"row\" + warnings.indexOf(item)}>\r\n                                    <td\r\n                                        data-title=\"Category\"\r\n                                        key={\"c\" + warnings.indexOf(item)}\r\n                                    >\r\n                                        {findValueFromID(\r\n                                            \"categories\",\r\n                                            item.categoryID\r\n                                        )}\r\n                                    </td>\r\n                                    <td\r\n                                        data-title=\"Frequency\"\r\n                                        key={\"f\" + warnings.indexOf(item)}\r\n                                    >\r\n                                        {findValueFromID(\r\n                                            \"frequencies\",\r\n                                            item.frequencyID\r\n                                        )}\r\n                                    </td>\r\n                                    <td\r\n                                        data-title=\"Type\"\r\n                                        key={\"t\" + warnings.indexOf(item)}\r\n                                    >\r\n                                        {findValueFromID(\"types\", item.typeID)}\r\n                                    </td>\r\n                                    <td\r\n                                        data-title=\"Severity\"\r\n                                        key={\"s\" + warnings.indexOf(item)}\r\n                                    >\r\n                                        {findValueFromID(\r\n                                            \"severities\",\r\n                                            item.severityID\r\n                                        )}\r\n                                    </td>\r\n                                    <td\r\n                                        data-title=\"Comment\"\r\n                                        key={\"co\" + warnings.indexOf(item)}\r\n                                    >\r\n                                        {item.comment}\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    ) : null}\r\n                </table>\r\n\r\n                <br></br>\r\n                <br></br>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"../css/App.css\";\r\nimport {Button, Card, CardBody, CardGroup, Col, Container, Form, Input, InputGroup, Row} from \"reactstrap\";\r\nexport default function Login({setCurrentPage}) {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  \r\n\r\n  const changeUsername = (event) => {\r\n    setUsername( event.target.value );\r\n  }\r\n  const changePassword = (event) => {\r\n    setPassword( event.target.value );\r\n  }\r\n  const login = ()=> {\r\n    // debugger;\r\n    fetch(\"http://localhost:3000/api/login/\", {\r\n      method: \"post\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        username: username,\r\n        password: password,\r\n      }),\r\n    })\r\n      .then((Response) => Response.json())\r\n      .then((result) => {\r\n        console.log(result);\r\n        if (result.Status == \"Invalid\") alert(\"Invalid User\");\r\n        else this.props.history.push(\"/Dashboard\");\r\n      });\r\n  }\r\n\r\n \r\n    return (\r\n      <div className=\"app flex-row align-items-center\">\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col md=\"9\" lg=\"7\" xl=\"6\">\r\n              <CardGroup>\r\n                <Card className=\"p-2\">\r\n                  <CardBody>\r\n                    <Form>\r\n                      \r\n                      <div\r\n                        className=\"totheRight\"\r\n                        style={{  }}\r\n                      >\r\n                        <InputGroup className=\"mb-3\">\r\n                          <Input\r\n                            type=\"text\"\r\n                            onChange={(e)=>{changeUsername(e.target.value)}}\r\n                            placeholder=\"Enter Email\"\r\n                          />\r\n                        </InputGroup>\r\n                        <InputGroup className=\"mb-4\">\r\n                          <Input\r\n                            type=\"password\"\r\n                            onChange={(e)=>{changePassword(e.target.value)}}\r\n                            placeholder=\"Enter Password\"\r\n                          />\r\n                        </InputGroup>\r\n                        <Button onClick={login} color=\"success\" block>\r\n                          Login\r\n                        </Button>\r\n                      </div>\r\n                    </Form>\r\n                    <br />\r\n                    <button onClick={()=>{setCurrentPage('SignUp')}}>Create an Account</button>\r\n                    \r\n                  </CardBody>\r\n                </Card>\r\n              </CardGroup>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n","import React from \"react\";\r\n\r\nfunction SignUp() {\r\n    return (\r\n      <div>\r\n          <h1>Sign up component</h1>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default SignUp;","import React, { useEffect } from \"react\";\r\nimport \"../css/App.css\";\r\n\r\nexport default function Thanks({ setCurrentPage }) {\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setCurrentPage(\"Navigation\");\r\n        }, 2000);\r\n    });\r\n    return <div>Thank you for your contribution</div>;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { addResource, removeResource } from \"../requests/posts\";\r\nimport { getAllResource } from \"../requests/gets\";\r\n\r\n\r\nexport default ({ setCurrentPage }) => {\r\n  const [adminType, setAdminType] = useState(\"Category\", \"Frequency\", \"Type\", \"Severity\");\r\n  let pageToShow;\r\n  if (adminType == 'Category') {\r\n    pageToShow = <Category />\r\n  }  else if (adminType == 'Frequency') {\r\n    pageToShow = <Frequency />\r\n  } else if (adminType == 'Type') {\r\n    pageToShow = <Type />\r\n  } else if (adminType == 'Severity') {\r\n    pageToShow = <Severity />\r\n  }\r\n  return (\r\n    <div>\r\n      <select\r\n        onChange={(e) => {\r\n          setAdminType(e.target.value);\r\n        }}\r\n      >\r\n        <option>Category</option>\r\n        <option>Frequency</option>\r\n        <option>Type</option>\r\n        <option>Severity</option>\r\n      </select>\r\n      {pageToShow}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Category = () => {\r\n  const [categories, setCategories] = useState();\r\n  const [newCategory, setNewCategory] = useState();\r\n  const [loading, setLoading] = useState(false)\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      await getPageData();\r\n    };\r\n    getData();\r\n  }, []);\r\n\r\n  const getPageData = async () => {\r\n    const currentCategories = await getAllResource(\"categories\");\r\n    setCategories(currentCategories);\r\n  };\r\n\r\n  const createNewCategory = async () => {\r\n    setLoading(true);\r\n    await addResource(\"category\", { title: newCategory});\r\n    setTimeout(() => {\r\n      getPageData();\r\n      setLoading(false)\r\n    }, 2000);\r\n  };\r\n\r\n  const deleteCategory = async (deleteTitle) => {\r\n    setLoading(true);\r\n    await removeResource(\"category\", { title: deleteTitle});\r\n    setTimeout(() => {\r\n      getPageData();\r\n      setLoading(false)\r\n    }, 2000);\r\n  }\r\n  if (loading) {\r\n    return <img src=\"https://gifimage.net/wp-content/uploads/2017/08/spinner-gif-13.gif\" />\r\n  }\r\n  if (!categories) {\r\n    return <h1>Loading, please wait....</h1>;\r\n  }\r\n  return (\r\n    <div>\r\n      <ul>\r\n        <div>\r\n          {categories.map((category) => (\r\n            <li>{category.title} <button onClick={() => deleteCategory(category.title)} class=\"deletebtn\"> Remove </button></li>\r\n          ))}\r\n        </div>\r\n      </ul>\r\n      <div>\r\n        <h1>Category</h1>\r\n        <h2>Add</h2>\r\n        <input\r\n          onChange={(e) => {\r\n            setNewCategory(e.target.value);\r\n          }}\r\n          placeholder=\"New Category Title\"\r\n        />\r\n        <button onClick={createNewCategory} class=\"submitbtn\">Submit</button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\n\r\n// Adding Frequencies\r\n\r\nconst Frequency = () => {\r\n  const [frequencies, setFrequencies] = useState();\r\n  const [newFrequency, setNewFrequency] = useState();\r\n  const [newValue, setNewValue] = useState();\r\n  const [loading, setLoading] = useState(false)\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      await getPageData();\r\n    };\r\n    getData();\r\n  }, []);\r\n\r\n  const getPageData = async () => {\r\n    const currentFrequencies = await getAllResource(\"frequencies\");\r\n    setFrequencies(currentFrequencies);\r\n  };\r\n\r\n  const createNewFrequency = async () => {\r\n    setLoading(true);\r\n    await addResource(\"frequency\", { title: newFrequency, value: newValue});\r\n    setTimeout(() => {\r\n      getPageData();\r\n      setLoading(false)\r\n    }, 2000);\r\n  };\r\n\r\n  const deleteFrequency = async (deleteTitle) => {\r\n    setLoading(true);\r\n    await removeResource(\"frequency\", { title: deleteTitle});\r\n    setTimeout(() => {\r\n      getPageData();\r\n      setLoading(false)\r\n    }, 2000);\r\n  }\r\n  if (loading) {\r\n    return <img src=\"https://gifimage.net/wp-content/uploads/2017/08/spinner-gif-13.gif\" />\r\n  }\r\n  if (!frequencies) {\r\n    return <h1>Loading, please wait....</h1>;\r\n  }\r\n  return (\r\n    <div>\r\n      <ul>\r\n        <div>\r\n          {frequencies.map((frequency) => (\r\n            <li>{frequency.title} <button onClick={() => deleteFrequency(frequency.title)} class=\"deletebtn\"> Remove </button></li>\r\n          ))}\r\n        </div>\r\n      </ul>\r\n      <div>\r\n        <h1>Frequency</h1>\r\n        <h2>Add</h2>\r\n        <input\r\n          onChange={(e) => {\r\n            setNewFrequency(e.target.value);\r\n          }}\r\n          placeholder=\"New Frequency Title\"\r\n        />\r\n        <input\r\n          onChange={(e) => {\r\n            setNewValue(e.target.value);\r\n          }}\r\n          placeholder=\"New Frequency Value\"\r\n        />\r\n\r\n\r\n        <button onClick={createNewFrequency} class=\"submitbtn\">Submit</button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\n\r\n// Adding Type\r\n\r\nconst Type = () => {\r\n  const [types, setTypes] = useState();\r\n  const [newType, setNewType] = useState();\r\n  const [newValue, setNewValue] = useState();\r\n  const [loading, setLoading] = useState(false)\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      await getPageData();\r\n    };\r\n    getData();\r\n  }, []);\r\n\r\n  const getPageData = async () => {\r\n    const currentTypes = await getAllResource(\"types\");\r\n    setTypes(currentTypes);\r\n  };\r\n\r\n  const createNewType = async () => {\r\n    setLoading(true);\r\n    await addResource(\"type\", { title: newType, value: newValue});\r\n    setTimeout(() => {\r\n      getPageData();\r\n      setLoading(false)\r\n    }, 2000);\r\n  };\r\n\r\n  const deleteType = async (deleteTitle) => {\r\n    setLoading(true);\r\n    await removeResource(\"type\", { title: deleteTitle});\r\n    setTimeout(() => {\r\n      getPageData();\r\n      setLoading(false)\r\n    }, 2000);\r\n  }\r\n  if (loading) {\r\n    return <img src=\"https://gifimage.net/wp-content/uploads/2017/08/spinner-gif-13.gif\" />\r\n  }\r\n  if (!types) {\r\n    return <h1>Loading, please wait....</h1>;\r\n  }\r\n  return (\r\n    <div>\r\n      <ul>\r\n        <div>\r\n          {types.map((type) => (\r\n            <li>{type.title} <button onClick={() => deleteType(type.title)} class=\"deletebtn\"> Remove </button></li>\r\n          ))}\r\n        </div>\r\n      </ul>\r\n      <div>\r\n        <h1>Type</h1>\r\n        <h2>Add</h2>\r\n        <input\r\n          onChange={(e) => {\r\n            setNewType(e.target.value);\r\n          }}\r\n          placeholder=\"New Type Title\"\r\n        />\r\n        <input\r\n          onChange={(e) => {\r\n            setNewValue(e.target.value);\r\n          }}\r\n          placeholder=\"New Type Value\"\r\n        />\r\n\r\n\r\n        <button onClick={createNewType} class=\"submitbtn\">Submit</button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\n// Adding Severity\r\n\r\nconst Severity = () => {\r\n  const [severities, setSeverities] = useState();\r\n  const [newSeverity, setNewSeverity] = useState();\r\n  const [newValue, setNewValue] = useState();\r\n  const [loading, setLoading] = useState(false)\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      await getPageData();\r\n    };\r\n    getData();\r\n  }, []);\r\n\r\n  const getPageData = async () => {\r\n    const currentSeverities = await getAllResource(\"severities\");\r\n    setSeverities(currentSeverities);\r\n  };\r\n\r\n  const createNewSeverity = async () => {\r\n    setLoading(true);\r\n    await addResource(\"severity\", { title: newSeverity, value: newValue});\r\n    setTimeout(() => {\r\n      getPageData();\r\n      setLoading(false)\r\n    }, 2000);\r\n  };\r\n\r\n  const deleteSeverity = async (deleteTitle) => {\r\n    setLoading(true);\r\n    await removeResource(\"severity\", { title: deleteTitle});\r\n    setTimeout(() => {\r\n      getPageData();\r\n      setLoading(false)\r\n    }, 2000);\r\n  }\r\n  if (loading) {\r\n    return <img src=\"https://gifimage.net/wp-content/uploads/2017/08/spinner-gif-13.gif\" />\r\n  }\r\n  if (!severities) {\r\n    return <h1>Loading, please wait....</h1>;\r\n  }\r\n  return (\r\n    <div>\r\n      <ul>\r\n        <div>\r\n          {severities.map((severity) => (\r\n            <li>{severity.title} <button onClick={() => deleteSeverity(severity.title)} class=\"deletebtn\"> Remove </button></li>\r\n          ))}\r\n        </div>\r\n      </ul>\r\n      <div>\r\n        <h1>Severity</h1>\r\n        <h2>Add</h2>\r\n        <input\r\n          onChange={(e) => {\r\n            setNewSeverity(e.target.value);\r\n          }}\r\n          placeholder=\"New Severity Title\"\r\n        />\r\n        <input\r\n          onChange={(e) => {\r\n            setNewValue(e.target.value);\r\n          }}\r\n          placeholder=\"New Severity Value\"\r\n        />\r\n\r\n\r\n        <button onClick={createNewSeverity} class=\"submitbtn\">Submit</button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n};","import React, { useState } from \"react\";\r\nimport \"./css/App.css\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport SearchBar from \"./components/SearchMovie\";\r\nimport Movielist from \"./components/Movielist\";\r\nimport ViewMovieInfo from \"./components/MovieInfo\";\r\nimport { getAllResource } from \"./requests/gets\";\r\nimport AddWarning from \"./components/AddWarning\";\r\nimport Login from \"./components/Login\";\r\nimport SignUp from \"./components/SignUp\";\r\nimport Thanks from \"./components/Thanks\";\r\nimport Admin from './components/Admin'\r\nexport default function App() {\r\n    let [currentPage, setCurrentPage] = useState(\"Navigation\");\r\n    let [selectedMovie, setSelectedMovie] = useState({title: 'The Lion King', id:'5fc1e881f7d9654d5c99ad9d', tmdb:\"\"});\r\n    let [resourceList, setResourceList] = useState([]);\r\n    const Home = () => {\r\n        console.log(selectedMovie.length);\r\n\r\n        switch (currentPage) {\r\n            case \"Thanks\":\r\n                return (\r\n                    <>\r\n                        <Thanks setCurrentPage={setCurrentPage} />\r\n                    </>\r\n                );\r\n            case \"Unused\":\r\n                return (\r\n                    <div>\r\n                        <button\r\n                            onClick={() => {\r\n                                setCurrentPage(\"AddWarning\");\r\n                            }}\r\n                        >\r\n                            Go to AddWarning Component\r\n                        </button>\r\n                        <br />\r\n                        <button\r\n                            onClick={() => {\r\n                                setCurrentPage(\"SearchMovie\");\r\n                            }}\r\n                        >\r\n                            Go to Main Page Component\r\n                        </button>\r\n                        <br />\r\n                        <button\r\n                            onClick={() => {\r\n                                setCurrentPage(\"MovieInfo\");\r\n                            }}\r\n                        >\r\n                            Go to Movie Info Component\r\n                        </button>\r\n                        <br />\r\n                        <button\r\n                            onClick={() => {\r\n                                setCurrentPage(\"SignIn\");\r\n                            }}\r\n                        >\r\n                            Go to Sign In Component\r\n                        </button>\r\n                        <br />\r\n                        <button\r\n                            onClick={() => {\r\n                                setCurrentPage(\"SignUp\");\r\n                            }}\r\n                        >\r\n                            Go to Sign Up Component\r\n                        </button>\r\n                        <br />\r\n                        <button\r\n                            onClick={() => {\r\n                                setCurrentPage(\"Admin\");\r\n                            }}\r\n                        >\r\n                            Go to Admin Component\r\n                        </button>\r\n                        <br />\r\n                    </div>\r\n                );\r\n\r\n            case \"AddWarning\":\r\n                return (\r\n                    <AddWarning\r\n                        setCurrentPage={setCurrentPage}\r\n                        \r\n                        movieTitle={selectedMovie.title}\r\n                        movieID={selectedMovie.id}\r\n                        userID={\"5fc68a121262f52c7006d209\"}\r\n                    />\r\n                );\r\n\r\n            case \"Navigation\":\r\n                return (\r\n                    <div className=\"App\">\r\n                        <SearchBar setPage={setCurrentPage} setMovie={setSelectedMovie} />\r\n\r\n                        <Movielist setPage={setCurrentPage} setMovie={setSelectedMovie} />\r\n                    </div>\r\n                );\r\n\r\n            case \"MovieInfo\":\r\n                return (\r\n                    <div>\r\n                        <ViewMovieInfo tmdb={selectedMovie.tmdb} setCurrentPage={setCurrentPage} movieTitle={selectedMovie.title} movieID={selectedMovie.id} />\r\n                    </div>\r\n                );\r\n\r\n            case \"SignIn\":\r\n                return <Login setCurrentPage={setCurrentPage}/>\r\n                \r\n            case \"SignUp\":\r\n                return <SignUp />;\r\n\r\n            case \"Admin\":\r\n                return <Admin />;\r\n\r\n            default:\r\n                return <h1>Error</h1>;\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            \r\n            <NavBar setCurrentPage={setCurrentPage} />\r\n            <Home />\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}