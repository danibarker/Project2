{"version":3,"sources":["components/NavBar.js","requests/gets.js","components/SearchMovie.js","components/Movielist.js","components/MovieDetail.js","components/viewMovieInfo.js","components/addWarning.js","requests/posts.js","components/SignIn.js","components/SignUp.js","components/Thanks.js","App.js","index.js"],"names":["NavBar","state","toggle","Toggle","setState","className","Box","display","p","bgcolor","to","textAlign","flexGrow","Component","searchTMDB","searchValue","a","console","log","suggestions","fetch","method","response","json","result","results","forEach","movie","length","push","original_title","getPopular","data","items","getAllResource","type","resource","SearchMovie","setMovie","useState","setResults","text","id","onChange","event","getResults","target","value","placeholder","map","onClick","MovieList","useEffect","fetchItems","setItems","popularMovies","flexWrap","key","title","src","poster_path","alt","style","width","MovieDetail","match","ViewMovieInfo","movieTitle","movieID","foundCategories","movieWarningsF","category","severity","frequency","reduce","warnings","warning","includes","count","warningsListItems","Object","keys","warn","Math","round","AddWarning","setCurrentPage","userID","findValueFromID","pageData","item","_id","getPageData","categories","frequencies","types","severities","setPageData","unchosenError","setUnchosenError","setWarnings","setCategory","setFrequency","setType","setSeverity","comment","setComment","htmlFor","rows","cols","concat","categoryID","frequencyID","typeID","severityID","color","headers","body","JSON","stringify","createNewWarning","border","indexOf","data-title","SignIn","SignUp","Thanks","setTimeout","App","currentPage","selectedMovie","setSelectedMovie","resourceList","setResourceList","path","exact","component","Movielist","document","getElementById","resources","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a7b6ff8d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n// import { FaAlignRight } from \"react-icons/fa\";\r\nimport \"../css/App.css\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class NavBar extends Component {\r\n  state = {\r\n    toggle: false,\r\n  };\r\n  Toggle = () => {\r\n    this.setState({ toggle: !this.state.toggle });\r\n  };\r\n  render() {\r\n    \r\n    return (\r\n      <>\r\n        <div className=\"navBar\">\r\n          {/* <button onClick={this.Toggle}>\r\n            <FaAlignRight />\r\n          </button> */}\r\n\r\n          <Box display=\"flex\" p={1} bgcolor=\"background.paper\">\r\n            <Box p={1} bgcolor=\"grey.300\">\r\n              <Link to='/' > Home</Link>\r\n                    </Box>\r\n                    <Box textAlign={'center'} flexGrow={1} p={1}>The Movie Warning Database</Box>\r\n            <Box p={1} bgcolor=\"grey.300\">\r\n              {/* <Link to='/SignIn'> Sign in</Link> */}\r\n            </Box>\r\n            <Box p={1} bgcolor=\"grey.300\">\r\n              {/* <Link to='/signUp'> Sign Up</Link> */}\r\n            </Box>\r\n          </Box>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","// const serverURL = \"http://localhost:3000\";\r\nconst serverURL = ''\r\n// Warnings\r\n\r\n//get by movie ID\r\nexport async function getWarnings(movieID) {\r\n    try {\r\n        const response = await fetch(\r\n            serverURL + \"/warnings/movieID=\" + movieID,\r\n            {\r\n                method: \"GET\",\r\n            }\r\n        );\r\n        const result = await response.json();\r\n\r\n        return result;\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\n// Search TMDB\r\nexport async function searchTMDB(searchValue) {\r\n    console.log(\"searchvalue\", searchValue);\r\n    let suggestions = [];\r\n    try {\r\n        const response = await fetch(\r\n            serverURL + \"/tmdb/findMovie?searchValue=\" + searchValue,\r\n            {\r\n                method: \"GET\",\r\n            }\r\n        );\r\n        const result = await response.json();\r\n\r\n        if (result.results) {\r\n            result.results.forEach((movie) => {\r\n                if (suggestions.length < 6) {\r\n                    suggestions.push(movie.original_title);\r\n                }\r\n            });\r\n        }\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n    return suggestions;\r\n}\r\n\r\nexport async function getPopular() {\r\n    const data = await fetch(serverURL + \"/tmdb/popularMovies\");\r\n\r\n    const items = await data.json();\r\n    return items.results;\r\n}\r\n\r\nexport async function getAllResource(type) {\r\n    const response = await fetch(serverURL + `/api/${type}`)\r\n    const resource = await response.json();\r\n    return resource\r\n}\r\n\r\nexport async function getOneResourceByID(type, id) {\r\n    const response = await fetch(serverURL + `/api/${type}/${id}`)\r\n    const resource = await response.json();\r\n    return resource\r\n}","import React from \"react\";\r\nimport \"../css/App.css\";\r\nimport { useState } from \"react\";\r\nimport { searchTMDB } from \"../requests/gets\";\r\n\r\nexport default function SearchMovie({ setMovie }) {\r\n   \r\n    const [results, setResults] = useState([]);\r\n\r\n    async function getResults(text) {\r\n        let suggestions = await searchTMDB(text);\r\n        console.log(suggestions)\r\n        setResults(suggestions);\r\n    }\r\n    return (\r\n        <div id=\"notebooks\">\r\n            <input\r\n                id=\"query\"\r\n                type=\"text\"\r\n                onChange={(event) => {\r\n                    getResults(event.target.value);\r\n                }}\r\n                placeholder=\"Search\"\r\n            />\r\n            {results.map((movie) => (\r\n                <li onClick={() => setMovie(movie)}>{movie}</li>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../css/App.css\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { getPopular } from \"../requests/gets\";\r\n\r\n\r\nfunction MovieList({ setMovie }) {\r\n    useEffect(() => {\r\n        fetchItems();\r\n    }, []);\r\n    // useEffect ==> it only going to run when the component mounts\r\n\r\n    const [items, setItems] = useState([]);\r\n\r\n    const fetchItems = async () => {\r\n        let popularMovies = await getPopular()\r\n        setItems(popularMovies);\r\n    };\r\n    return (\r\n        <Box flexWrap=\"wrap\" display=\"flex\">\r\n            <div className=\"MovList\">\r\n                {items.map((results) => (\r\n                    <Box id=\"BoxStyle\">\r\n                        <div>\r\n                            <div className=\"container\">\r\n                                <div className=\"vertical-center\">\r\n                                    <h1 key={results.title}>\r\n                                        <div\r\n                                            onClick={() =>\r\n                                                setMovie(results.title)\r\n                                            }\r\n                                        >\r\n                                            {results.title}\r\n                                        </div>\r\n                                    </h1>\r\n                                </div>\r\n                            </div>\r\n                            <img\r\n                                onClick={() => setMovie(results.title)}\r\n                                src={\r\n                                    \" https://image.tmdb.org/t/p/w220_and_h330_face\" +\r\n                                    results.poster_path\r\n                                }\r\n                                alt=\"no \"\r\n                                style={{ width: \"200px\" }}\r\n                            />\r\n                        </div>\r\n                    </Box>\r\n                ))}\r\n            </div>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default MovieList;\r\n","import React from 'react';\r\nimport '../css/App.css';\r\n\r\nfunction MovieDetail ({match}) {\r\n//     useEffect(() => {\r\n//         fetchItem();\r\n//         console.log('this is the match');\r\n//         console.log(match)\r\n//     }, []);\r\n\r\n//     const [item,setItem]= useState({})\r\n\r\n//     //const [item, setItem] = useState({\r\n//     //    images:{}\r\n//     //}); // curly brackets because we will fetch data from an API\r\n\r\n//     const fetchItem = async () => {\r\n//         const fetchItem = await fetch(`\r\n//         https://api.themoviedb.org/3/movie/${match.params.id}?api_key=fb1465a6d4ccc4cd5448d6f97c18f3c1&language=en-US`\r\n//         );\r\n//         const item = await fetchItem.json();\r\n//         setItem(item);\r\n//         console.log('This is the item');\r\n//         console.log(item);\r\n//     };\r\n// // item.name we can get this from the console.log above to see all the properties we can use\r\n// //poster_path image={movie.poster_path} \r\n\r\n// // https://image.tmdb.org/t/p/w600_and_h900_bestv2/\r\n  return (\r\n    <div >\r\n        {/* <div className=\"MovItem\">\r\n         <h1>{item.title}</h1> \r\n        </div>\r\n          <div className=\"image\">\r\n            <img src= {\" https://image.tmdb.org/t/p/w600_and_h900_bestv2\"+item.poster_path} alt=\" \" style={{width: '300px' }} />\r\n            <h3 style={{width: '300px' }}>{item.overview} </h3>\r\n          </div> */}\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieDetail;\r\n","import React from \"react\";\r\nimport \"../css/App.css\";\r\n// import { getAllResource } from \"../requests/gets\";\r\n\r\nexport default function ViewMovieInfo({ movieID }) {\r\n    //const movieWarnings = getWarnings(movieID)\r\n    \r\n    const movieTitle = movieID;\r\n    const movieWarnings = [\r\n        {\r\n            category: \"Animal Death\",\r\n            type: 1,\r\n            severity: 2,\r\n            frequency: 2,\r\n        },\r\n        {\r\n            category: \"Cartoon Violence\",\r\n            type: 1,\r\n            severity: 2,\r\n            frequency: 2,\r\n        },\r\n        {\r\n            category: \"Cartoon Violence\",\r\n            type: 1,\r\n            severity: 2,\r\n            frequency: 2,\r\n        },\r\n        {\r\n            category: \"Cartoon Violence\",\r\n            type: 1,\r\n            severity: 2,\r\n            frequency: 2,\r\n        },\r\n        {\r\n            category: \"Cartoon Violence\",\r\n            type: 1,\r\n            severity: 2,\r\n            frequency: 2,\r\n        },\r\n        {\r\n            category: \"Cartoon Violence\",\r\n            type: 1,\r\n            severity: 2,\r\n            frequency: 2,\r\n        },\r\n        {\r\n            category: \"Cartoon Violence\",\r\n            type: 2,\r\n            severity: 2,\r\n            frequency: 9,\r\n        },\r\n    ];\r\n    let foundCategories = [];\r\n    let movieWarningsF = movieWarnings.reduce((warnings, warning) => {\r\n        if (!foundCategories.includes(warning.category)) {\r\n            foundCategories.push(warning.category);\r\n            warnings[warning.category] = warning;\r\n            warnings[warning.category].count = 1;\r\n            return warnings;\r\n        } else {\r\n            warnings[warning.category].type += warning.type;\r\n            warnings[warning.category].severity += warning.severity;\r\n            warnings[warning.category].frequency += warning.frequency;\r\n            warnings[warning.category].count++;\r\n            return warnings;\r\n        }\r\n    }, {});\r\n\r\n    console.log(movieWarningsF);\r\n    const warningsListItems = Object.keys(movieWarningsF).map((warning) => {\r\n        let warn = movieWarningsF[warning];\r\n        return (\r\n            <li className=\"warningListItem\">\r\n                <div>\r\n                    <strong>{warn.category}:</strong>\r\n                </div>\r\n                <div>\r\n                    Type:\r\n                    <span className=\"red\">\r\n                        {Math.round(warn.type / warn.count)}\r\n                    </span>\r\n                </div>\r\n                <div>\r\n                    Severity:\r\n                    <span className=\"yellow\">\r\n                        {Math.round(warn.severity / warn.count)}\r\n                    </span>\r\n                </div>\r\n                <div>\r\n                    Frequency:\r\n                    <span className=\"green\">\r\n                        {Math.round(warn.frequency / warn.count)}\r\n                    </span>\r\n                </div>\r\n                <div>\r\n                    <button>View user comments</button>\r\n                </div>\r\n            </li>\r\n        );\r\n    });\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"pageContainer threeQuartersPageContainer\">\r\n                <h2>{movieTitle}</h2>\r\n                <h3>Warnings:</h3>\r\n                <ul className=\"warningList\">{warningsListItems}</ul>\r\n            </div>\r\n            <div className=\"pageContainer warningPageContainer-Bottom\">\r\n                <button>Add warning</button>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../css/App.css\";\r\nimport { getAllResource } from \"../requests/gets\";\r\nimport { createNewWarning } from \"../requests/posts\";\r\n\r\n// Example of an adding warning using different categories\r\n\r\nexport default function AddWarning({\r\n    setCurrentPage,\r\n    userID,\r\n    movieID,\r\n    movieTitle,\r\n}) {\r\n    const findValueFromID = (type, id) => {\r\n        console.log('type',type,'id',id)\r\n        for (let item of pageData[type]) {\r\n            if (item._id === id) {\r\n                return item.title;\r\n            }\r\n        }\r\n    };\r\n\r\n    const getPageData = async () => {\r\n        const categories = await getAllResource(\"categories\");\r\n        const frequencies = await getAllResource(\"frequencies\");\r\n        const types = await getAllResource(\"types\");\r\n        const severities = await getAllResource(\"severities\");\r\n        setPageData({\r\n            categories: categories,\r\n            frequencies: frequencies,\r\n            types: types,\r\n            severities: severities,\r\n        });\r\n    };\r\n    const [unchosenError, setUnchosenError] = useState(false);\r\n    const [pageData, setPageData] = useState();\r\n    const [warnings, setWarnings] = useState([]);\r\n    const [category, setCategory] = useState(\"\");\r\n    const [frequency, setFrequency] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n    const [severity, setSeverity] = useState(\"\");\r\n    const [comment, setComment] = useState(\"\");\r\n    useEffect(() => {\r\n        getPageData();\r\n    }, []);\r\n    if (pageData) {\r\n        return (\r\n            <div className=\"pageContainer fullPageContainer\">\r\n                <div>Add a warning to {movieTitle}</div>\r\n                <br></br>\r\n                <div className=\"ptther\">\r\n                    <select\r\n                        className=\"add-warning-dropdown\"\r\n                        onChange={(event) => {\r\n                            setCategory(event.target.value);\r\n                        }}\r\n                    >\r\n                        <option>Choose a category</option>\r\n                        {pageData.categories.map((category) => (\r\n                            <option key={category._id} value={category._id}>\r\n                                {category.title}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                    <select\r\n                        className=\"add-warning-dropdown\"\r\n                        onChange={(event) => {\r\n                             setFrequency(event.target.value);\r\n                        }}\r\n                    >\r\n                        <option>Choose a frequency</option>\r\n                        {pageData.frequencies.map((frequency) => (\r\n                            <option key={frequency._id} value={frequency._id}>\r\n                                {frequency.title}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n\r\n                    <select\r\n                        className=\"add-warning-dropdown\"\r\n                        onChange={(event) => {\r\n                             setType(event.target.value);\r\n                        }}\r\n                    >\r\n                        <option>Choose a Type</option>\r\n                        {pageData.types.map((type) => (\r\n                            <option key={type._id} value={type._id}>\r\n                                {type.title}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n\r\n                    <select\r\n                        className=\"add-warning-dropdown\"\r\n                        onChange={(event) => {\r\n                             setSeverity(event.target.value);\r\n                        }}\r\n                    >\r\n                        <option>Choose a Severity</option>\r\n                        {pageData.severities.map((severity) => (\r\n                            <option key={severity._id} value={severity._id}>\r\n                                {severity.title}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                    <label htmlFor=\"commentBox\">Details:</label>\r\n                    <textarea\r\n                        id=\"commentBox\"\r\n                        rows=\"10\"\r\n                        cols=\"80\"\r\n                        onChange={(event) => {\r\n                             setComment(event.target.value);\r\n                        }}\r\n                    />\r\n\r\n                    <br />\r\n\r\n                    <button\r\n                        onClick={() => {\r\n                            if (category && frequency && type && severity) {\r\n                                setUnchosenError(false);\r\n                                setWarnings(\r\n                                    warnings.concat([\r\n                                        {\r\n                                            userID: userID,\r\n                                            movieID: movieID,\r\n                                            categoryID: category,\r\n                                            frequencyID: frequency,\r\n                                            typeID: type,\r\n                                            severityID: severity,\r\n                                            comment: comment,\r\n                                        },\r\n                                    ])\r\n                                );\r\n                            } else {\r\n                                setUnchosenError(true);\r\n                            }\r\n                        }}\r\n                    >\r\n                        Add this warning\r\n                    </button>\r\n                </div>\r\n                {unchosenError ? (\r\n                    <div style={{ color: \"red\" }}>\r\n                        Please choose a value from each dropdown\r\n                    </div>\r\n                ) : null}\r\n\r\n                <br />\r\n                <div className=\"part\">\r\n                    <button\r\n                        onClick={() => {\r\n                            createNewWarning(warnings);\r\n                            setCurrentPage(\"Thanks\");\r\n                        }}\r\n                    >\r\n                        Send Data\r\n                    </button>\r\n                </div>\r\n                <br />\r\n                <div className=\"collapsible-tables\">\r\n                    <table className=\"center\" border=\"2\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Category</th>\r\n                                <th>Frequency</th>\r\n                                <th>Type</th>\r\n                                <th>Severity</th>\r\n                                <th>Comment</th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        {warnings.length > 0 ? (\r\n                            <tbody>\r\n                                {warnings.map((item) => (\r\n                                    <tr key={'row'+warnings.indexOf(item)}>\r\n                                        <td data-title=\"Category\" key={\"c\" + warnings.indexOf(item)}>\r\n                                            {findValueFromID(\r\n                                                \"categories\",\r\n                                                item.categoryID\r\n                                            )}\r\n                                        </td>\r\n                                        <td data-title=\"Frequency\" key={\"f\" + warnings.indexOf(item)}>\r\n                                            {findValueFromID(\r\n                                                \"frequencies\",\r\n                                                item.frequencyID\r\n                                            )}\r\n                                        </td>\r\n                                        <td data-title=\"Type\" key={\"t\" + warnings.indexOf(item)}>\r\n                                            {findValueFromID(\r\n                                                \"types\",\r\n                                                item.typeID\r\n                                            )}\r\n                                        </td>\r\n                                        <td data-title=\"Severity\" key={\"s\" + warnings.indexOf(item)}>\r\n                                            {findValueFromID(\r\n                                                \"severities\",\r\n                                                item.severityID\r\n                                            )}\r\n                                        </td>\r\n                                        <td data-title=\"Comment\" key={\"co\" + warnings.indexOf(item)}>\r\n                                            {item.comment}\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                                \r\n                            </tbody>\r\n                        ) : (\r\n                            null\r\n                        )}\r\n                    </table>\r\n\r\n                    <br></br>\r\n                    <br></br>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n","// const serverURL = \"http://localhost:3000\"; //\r\nconst serverURL = ''\r\nexport function createNewWarning(warnings){\r\n    for (let warning of warnings) {        \r\n        fetch(serverURL + '/api/warning/create', {                            \r\n            method: 'post',\r\n            headers: {\"Content-Type\": \"application/json\"},   \r\n            body: JSON.stringify({warning:{userID:warning.userID,movieID:warning.movieID, categoryID:warning.categoryID, frequencyID:warning.frequencyID, typeID:warning.typeID,severityID:warning.severityID}})                    \r\n        })\r\n    }\r\n}\r\n\r\nexport function addResource(type,newResource){\r\n    fetch(serverURL + `/api/${type}/create`, {                            \r\n        method: 'post',\r\n        headers: {\"Content-Type\": \"application/json\"},   \r\n        body: JSON.stringify({warning:{title: newResource.title, value: newResource.value}})                    \r\n    })\r\n}\r\n\r\nexport function addUser(newUsername,newEmail,newPassword){\r\n    fetch(serverURL + '/api/user/create', {                            \r\n        method: 'post',\r\n        headers: {\"Content-Type\": \"application/json\"},   \r\n        body: JSON.stringify({username:newUsername, email:newEmail,password:newPassword})                    \r\n    })\r\n}\r\n\r\nexport function addMovie(tmdbId, movieName) {\r\n  fetch(serverURL + '/api/movie/create', {\r\n    method: 'post',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({title: movieName, tmdb: tmdbId})\r\n  })\r\n}\r\n","import React from \"react\";\r\n\r\nfunction SignIn() {\r\n    return (\r\n      <div>\r\n          <h1>Sign in component</h1>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default SignIn;\r\n  ","import React from \"react\";\r\n\r\nfunction SignUp() {\r\n    return (\r\n      <div>\r\n          <h1>Sign up component</h1>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default SignUp;","import React, { useEffect } from \"react\";\r\nimport \"../css/App.css\";\r\n\r\nexport default function Thanks({ setCurrentPage }) {\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setCurrentPage(\"Navigation\");\r\n        }, 2000);\r\n    });\r\n    return <div>Thank you for your contribution</div>;\r\n}\r\n","import React, { useState } from \"react\";\r\n// import { FaAlignRight } from \"react-icons/fa\";\r\nimport \"./css/App.css\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport SearchBar from \"./components/SearchMovie\";\r\n// import SignIn from './components/SignIn';\r\n// import SignUp from './components/SignUp';\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Movielist from \"./components/Movielist\";\r\nimport MovieDetail from \"./components/MovieDetail\";\r\nimport ViewMovieInfo from \"./components/viewMovieInfo\";\r\nimport { getAllResource } from \"./requests/gets\";\r\nimport AddWarning from \"./components/addWarning\";\r\nimport SignIn from \"./components/SignIn\";\r\nimport SignUp from \"./components/SignUp\";\r\nimport Thanks from './components/Thanks'\r\n\r\nexport default function App() {\r\n    let [currentPage, setCurrentPage] = useState('Navigation')\r\n    let [selectedMovie, setSelectedMovie] = useState(\"\");\r\n    let [resourceList, setResourceList]= useState([])\r\n    const Home = () => {\r\n        console.log(selectedMovie.length);\r\n\r\n        switch (currentPage) {\r\n            case \"Thanks\":\r\n                return <><Thanks setCurrentPage={setCurrentPage}/></>\r\n            case \"Navigation\":\r\n                return (<div>\r\n                    <button onClick={() => { setCurrentPage('AddWarning') }}>Go to AddWarning Component</button><br />\r\n                    <button onClick={() => { setCurrentPage('SearchMovie') }}>Go to Main Page Component</button><br />\r\n                    <button onClick={() => { setCurrentPage('MovieInfo') }}>Go to Movie Info Component</button><br />\r\n                    <button onClick={() => { setCurrentPage('SignIn') }}>Go to Sign In Component</button><br />\r\n                    <button onClick={() => { setCurrentPage('SignUp') }}>Go to Sign Up Component</button><br />\r\n                    <button onClick={() => { setCurrentPage('Admin') }}>Go to Admin Component</button><br />\r\n                </div>)\r\n                \r\n            case \"AddWarning\":\r\n                return (<AddWarning setCurrentPage={ setCurrentPage }movieTitle={\"The Lion King\"} movieID={ '5fc1e881f7d9654d5c99ad9d' } userID={'5fc68a121262f52c7006d209'}/>)\r\n                \r\n            case \"SearchMovie\":\r\n                    return (\r\n                        <div className=\"App\">\r\n                            <SearchBar setMovie={setSelectedMovie} />\r\n\r\n                            <Movielist setMovie={setSelectedMovie} />\r\n                        </div>\r\n                );\r\n                \r\n            case \"MovieInfo\":\r\n                    return (\r\n                        <div>\r\n                            <SearchBar setMovie={setSelectedMovie} />\r\n                            <ViewMovieInfo movieID={selectedMovie} />\r\n                            <button onClick={() => setSelectedMovie(\"\")}>\r\n                                Go back to search\r\n                        </button>\r\n                        </div>\r\n                    );\r\n                \r\n            case \"SignIn\":\r\n                return <SignIn />\r\n                \r\n            case \"SignUp\":\r\n                return <SignUp />\r\n                \r\n            case \"Admin\":\r\n                return (<><input id=\"hello\" /><button onClick={async () => {\r\n                 let resources = await getAllResource(document.getElementById('hello').value)\r\n                 setResourceList(resources)\r\n             }}>Get Stuff</button><br />{resourceList.map((resource) => <div>{JSON.stringify(resource)}</div>)}</>);\r\n                \r\n            default:\r\n                return <h1>Error</h1>\r\n        }\r\n            \r\n       \r\n    };\r\n    return (\r\n        <>\r\n            <Router>\r\n                <NavBar />\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={Home} />\r\n                    {/* <Route path= \"/SignIn\"  component={SignIn} />\r\n          <Route path= \"/SignUp\"  component={SignUp} /> */}\r\n                    <Route path=\"/:id\" component={MovieDetail} />\r\n                </Switch>\r\n            </Router>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}