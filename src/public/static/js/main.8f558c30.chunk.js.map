{"version":3,"sources":["components/NavBar.js","requests/gets.js","requests/posts.js","components/SearchMovie.js","components/Movielist.js","components/Comments.js","components/MovieInfo.js","components/AddWarning.js","components/Login.js","components/SignUp.js","components/Thanks.js","components/Admin.js","components/UserProfile.js","App.js","index.js"],"names":["NavBar","currentPage","setCurrentPage","token","window","sessionStorage","getItem","className","Box","display","p","style","onClick","viewBox","fill","xmlns","fillRule","d","visibility","getWarnings","movieID","a","fetch","response","json","result","console","log","searchTMDB","searchValue","suggestions","method","results","forEach","movie","length","push","release_date","title","original_title","id","poster_path","getTMDB","tmdb","data","getPopular","items","getAllResource","type","resource","getMovie","tmdbID","warnings","warning","headers","Headers","request","Request","body","JSON","stringify","userID","categoryID","frequencyID","typeID","severityID","comment","addResource","newResource","value","removeResource","addUser","newUsername","newEmail","newPassword","username","email","password","message","status","Error","checkAdmin","text","isAdmin","updateUser","curUsername","removeUser","addMovie","movieName","res","_id","addedMovie","userLogin","error","SearchMovie","setPage","setMovie","useState","setResults","onChange","event","getResults","target","placeholder","map","key","posterPath","split","MovieList","useEffect","fetchItems","setItems","popularMovies","flexWrap","substr","src","alt","cursor","Comments","setShowComments","commentCategory","position","overflowY","zIndex","backgroundColor","width","left","top","height","borderWidth","borderStyle","borderColor","borderRadius","float","margin","fontSize","color","fontWeight","maxHeight","filter","category","average","nums","reduce","b","ViewMovieInfo","movieTitle","setWarnings","warningModelData","setWarningModelData","movieDesc","setMovieDesc","showComments","setCommentCategory","findInfoFromID","attr","item","getWarningModelData","categories","frequencies","types","severities","getDescription","desc","overview","getWarningData","warningData","getData","warningLabelsfromValues","frequency","severity","warningTotals","freq","sev","Object","keys","includes","hasComments","warningAverages","Math","round","alignItems","right","marginBottom","maxWidth","minWidth","border","indexOf","data-title","justifyContent","marginTop","AddWarning","findValueFromID","pageData","getPageData","setPageData","unchosenError","setUnchosenError","setCategory","setFrequency","setType","setSeverity","setComment","concat","document","getElementById","createNewWarning","Login","setUsername","setPassword","loginFail","setLoginFail","login","setItem","user","Container","Row","Col","md","lg","xl","CardGroup","Card","CardBody","Form","InputGroup","Input","e","changeUsername","changePassword","Button","block","SignUp","setEmail","registerFail","setRegisterFail","register","errMsg","parse","changeEmail","fontStyle","Thanks","setTimeout","textAlign","pageToShow","adminType","setAdminType","Category","setCategories","newCategory","setNewCategory","loading","setLoading","currentCategories","createNewCategory","deleteCategory","deleteTitle","Frequency","setFrequencies","newFrequency","setNewFrequency","newValue","setNewValue","currentFrequencies","createNewFrequency","deleteFrequency","Type","setTypes","newType","setNewType","currentTypes","createNewType","deleteType","User","selectedUser","setSelectedUser","deleted","setDeleted","deletedCount","Severity","setSeverities","newSeverity","setNewSeverity","currentSeverities","createNewSeverity","deleteSeverity","UserProfile","updateFail","setUpdateFail","setLogoutFail","setIsAdmin","check","UncontrolledAlert","changeUser","logoutUser","removeItem","App","selectedMovie","setSelectedMovie","Home","Movielist","Admin","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8f558c30.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../css/App.css\";\r\nimport Box from \"@material-ui/core/Box\";\r\nexport default function NavBar({ currentPage, setCurrentPage }) {\r\n  const token = window.sessionStorage.getItem(\"token\");\r\n  return (\r\n    <>\r\n      <div className=\"navBar\">\r\n        <Box display=\"flex\" p={1}>\r\n          <div className=\"nav-home-div\" style={{}} onClick={() => {\r\n                setCurrentPage(\"Navigation\");\r\n              }} >\r\n            {/* <img\r\n              alt=\"Home\"\r\n              style={{\r\n                cursor: \"pointer\",\r\n                width: \"90%\",\r\n                margin: \"0px 5%\",\r\n                maxHeight: \"35px\",\r\n                maxWidth: \"35px\",\r\n              }}\r\n              width=\"20px\"\r\n              src={logo}\r\n              p={1}\r\n              onClick={() => {\r\n                setCurrentPage(\"Navigation\");\r\n              }}\r\n            ></img> */}\r\n            <svg className=\"nav-home-icon bi bi-house\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n  <path fillRule=\"evenodd\" d=\"M2 13.5V7h1v6.5a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5V7h1v6.5a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 13.5zm11-11V6l-2-2V2.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5z\"/>\r\n  <path fillRule=\"evenodd\" d=\"M7.293 1.5a1 1 0 0 1 1.414 0l6.647 6.646a.5.5 0 0 1-.708.708L8 2.207 1.354 8.854a.5.5 0 1 1-.708-.708L7.293 1.5z\"/>\r\n</svg> <div className=\"nav-home-title\">Home</div>\r\n          </div>\r\n          <div\r\n            className = \"nav-title\"\r\n          >\r\n            {/* <img\r\n              alt=\"The Movie Warning Database\"\r\n              src={titleImage}\r\n              style={{\r\n                width: \"90%\",\r\n                height: \"auto\",\r\n                margin: \"0 5%\",\r\n                maxHeight: \"35\",\r\n                maxWidth: \"400px\",\r\n              }}\r\n            ></img> */}\r\n            The Movie Warning Database\r\n            <sub className=\"nav-title-sub\">-Crowdsourced content warnings-</sub>\r\n          </div>\r\n          <div className=\"nav-user-actions\"\r\n            \r\n          >\r\n            <span\r\n              style={{visibility:token ? \"hidden\" : \"visible\"}}\r\n              className=\"nav-sign-in\"\r\n              onClick={() => {\r\n                \r\n                  setCurrentPage(\"SignIn\");\r\n                \r\n              }}\r\n            >\r\n              {token ? '' : \"Log In\"}\r\n            </span>\r\n            <span\r\n              className=\"nav-sign-up\"\r\n              onClick={() => {\r\n                if (token) {\r\n                  setCurrentPage('UserProfile')\r\n                } else {\r\n                  setCurrentPage(\"SignUp\");\r\n                }\r\n              }}\r\n            >\r\n              {token ? window.sessionStorage.getItem('username') : \"Sign Up\"}\r\n            </span>\r\n          </div>\r\n        </Box>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","//const serverURL = \"http://localhost:8000\"; //commment this line out for npm run build\r\n  const serverURL = '' //comment this line out for npm run start\r\n// Warnings\r\n\r\n//get by movie ID\r\nexport async function getWarnings(movieID) {\r\n    try {\r\n        const response = await fetch(\r\n            serverURL + \"/api/warnings?movieID=\" + movieID\r\n        );\r\n        const result = await response.json();\r\n\r\n        return result;\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\n// Search TMDB\r\nexport async function searchTMDB(searchValue) {\r\n    console.log(\"searchvalue\", searchValue);\r\n    let suggestions = [];\r\n    try {\r\n        const response = await fetch(\r\n            serverURL + \"/tmdb/findMovie?searchValue=\" + searchValue,\r\n            {\r\n                method: \"GET\",\r\n            }\r\n        );\r\n        const result = await response.json();\r\n\r\n        if (result.results) {\r\n            result.results.forEach((movie) => {\r\n                if (suggestions.length < 6) {\r\n                    suggestions.push({ release_date: movie.release_date, title: movie.original_title, id: movie.id, poster_path:movie.poster_path });\r\n                }\r\n            });\r\n        }\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n    return suggestions;\r\n}\r\nexport async function getTMDB(tmdb) {\r\n    console.log(tmdb)\r\n    const data = await fetch(serverURL + \"/tmdb/getMovie?tmdb=\" + tmdb)\r\n    const movie = await data.json();\r\n    return movie\r\n}\r\nexport async function getPopular() {\r\n    const data = await fetch(serverURL + \"/tmdb/popularMovies\");\r\n\r\n    const items = await data.json();\r\n    return items.results;\r\n}\r\n\r\nexport async function getAllResource(type) {\r\n    const response = await fetch(serverURL + `/api/${type}`)\r\n    const resource = await response.json();\r\n    return resource\r\n}\r\n\r\nexport async function getOneResourceByID(type, id) {\r\n    const response = await fetch(serverURL + `/api/${type}/${id}`)\r\n    const resource = await response.json();\r\n    return resource\r\n}\r\n\r\nexport async function getUser(userName) {\r\n    const response = await fetch(serverURL + `/api/user/${userName}`)\r\n    const resource = await response.json();\r\n    return resource\r\n}\r\n\r\nexport async function getMovie(tmdbID) {\r\n    const response = await fetch(serverURL + `/api/movie/${tmdbID}`)\r\n    const resource = await response.json();\r\n    return resource\r\n}","import { getMovie } from \"./gets\";\r\n\r\n//const serverURL = \"http://localhost:8000\"; // comment this line for npm run build\r\n const serverURL = '' // comment this line for npm run start\r\nexport async function createNewWarning(warnings, token) {\r\n  for (let warning of warnings) {\r\n    const headers = new Headers({\r\n      \"Authorization\": `Bearer ${token}`,\r\n      \"Content-Type\": \"application/json\"\r\n    });\r\n    const request = new Request(serverURL+\"/api/warning/create\", {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      body: JSON.stringify({\r\n        warning: {\r\n          userID: warning.userID,\r\n          movieID: warning.movieID,\r\n          categoryID: warning.categoryID,\r\n          frequencyID: warning.frequencyID,\r\n          typeID: warning.typeID,\r\n          severityID: warning.severityID,\r\n          comment:warning.comment\r\n        },\r\n      }),\r\n    });\r\n    fetch(request);\r\n  }\r\n}\r\n\r\nexport async function addResource(type, newResource, token) {\r\n  let data;\r\n  if (type === \"category\") {\r\n    data = JSON.stringify({ title: newResource.title });\r\n  } else {\r\n    data = JSON.stringify({\r\n      title: newResource.title,\r\n      value: newResource.value,\r\n    });\r\n  }\r\n  const headers = new Headers({\r\n    \"Authorization\": `Bearer ${token}`,\r\n    \"Content-Type\": \"application/json\"\r\n  });\r\n  const request = new Request(serverURL+`/api/${type}/create`, {\r\n    method: \"POST\",\r\n    headers: headers,\r\n    body: data,\r\n  });\r\n  fetch(request);\r\n}\r\n\r\nexport async function removeResource(type, newResource, token) {\r\n  let data;\r\n\r\n  data = JSON.stringify({ title: newResource.title });\r\n  const headers = new Headers({\r\n    \"Authorization\": `Bearer ${token}`,\r\n    \"Content-Type\": \"application/json\"\r\n  });\r\n  const request = new Request(serverURL + `/api/${type}/delete`, {\r\n    method: \"POST\",\r\n    headers: headers,\r\n    body: data,\r\n  });\r\n  fetch(request);\r\n}\r\n\r\nexport async function addUser(newUsername, newEmail, newPassword) {\r\n\r\n  let response = await fetch(serverURL + \"/api/user/create\", {\r\n    method: \"post\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      username: newUsername,\r\n      email: newEmail,\r\n      password: newPassword,\r\n    }),\r\n  });\r\n\r\n  let data = await response.json();\r\n  let message = JSON.stringify(data)\r\n\r\n  if (response.status === 200) {\r\n  \r\n    //let data = await response.json()\r\n    return message\r\n  } else {\r\n    //throw new Error(error)\r\n    throw new Error(message)\r\n  } \r\n}\r\nexport async function checkAdmin(token) {\r\n  const headers = new Headers({\r\n    \"Authorization\": `Bearer ${token}`,\r\n    \"Content-Type\": \"application/json\"\r\n  });\r\n  const request = new Request(serverURL + `/api/user/isadmin`, {\r\n    method: \"POST\",\r\n    headers: headers,\r\n  });\r\n  let response = await fetch(request)\r\n  let isAdmin = await response.text()\r\n\r\n  return isAdmin===\"true\"\r\n}\r\nexport async function updateUser(curUsername, newEmail, newPassword, token) {\r\n  try {\r\n    let response = await fetch(serverURL + \"/api/user/update\", {\r\n      method: \"post\",\r\n      headers: { \"Authorization\": `Bearer ${token}`, \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email: newEmail,\r\n        password: newPassword,\r\n      }),\r\n    });\r\n\r\n    let data = await response.json();\r\n    let message = JSON.stringify(data)\r\n\r\n    if (response.status === 200) {\r\n      return message\r\n    } else {\r\n      //throw new Error(error)\r\n      throw new Error(message)\r\n    }\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nexport async function removeUser(username, token) {\r\n  try {\r\n    const headers = new Headers({\r\n      \"Authorization\": `Bearer ${token}`,\r\n      \"Content-Type\": \"application/json\"\r\n    });\r\n    const request = new Request(serverURL + `/api/user/delete`, {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      body: JSON.stringify({\r\n        username: username,\r\n      }),\r\n    });\r\n    let response = await fetch(request);\r\n    let data = response.json();\r\n    return data;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n}\r\nexport async function addMovie(tmdbID, movieName) {\r\n  // check if movie is in database already\r\n  try {\r\n    const res = await getMovie(tmdbID);\r\n    return res._id;\r\n  } catch {\r\n    const response = fetch(serverURL + \"/api/movie/create\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ title: movieName, tmdb: tmdbID }),\r\n    });\r\n    const data = await response;\r\n    const addedMovie = await data.json();\r\n\r\n    return addedMovie._id;\r\n  }\r\n}\r\nexport function userLogout(token) {\r\n  fetch(serverURL + \"/api/user/logout\", {\r\n    method: \"post\",\r\n    headers: {\"Content-Type\":\"application/json\", \"Authorization\":\"Bearer \"+token}\r\n  })\r\n}\r\nexport async function userLogin(username, password) {\r\n    \r\n    let response = await fetch(serverURL + \"/api/user/login\", {\r\n        method: \"post\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            username: username,\r\n            password: password,\r\n        }),\r\n    });\r\n    if (response.status === 200) {\r\n        let data = await response.json()\r\n        return data\r\n    } else {\r\n        let error = await response.text()\r\n        throw new Error(error)\r\n    }\r\n        \r\n        \r\n    \r\n\r\n}","import React from \"react\";\r\nimport \"../css/App.css\";\r\nimport { useState } from \"react\";\r\nimport { searchTMDB } from \"../requests/gets\";\r\nimport { addMovie } from \"../requests/posts\";\r\n\r\nexport default function SearchMovie({ setPage, setMovie }) {\r\n   \r\n    const [results, setResults] = useState([]);\r\n\r\n    async function getResults(text) {\r\n        let suggestions = await searchTMDB(text);\r\n        console.log(suggestions)\r\n        setResults(suggestions);\r\n    }\r\n    return (\r\n        <div id=\"search-bar\">\r\n            <input\r\n                id=\"query\"\r\n                type=\"text\"\r\n                onChange={(event) => {\r\n                    getResults(event.target.value);\r\n                }}\r\n                placeholder=\"Search\"\r\n            />\r\n            {results.map((result) => (\r\n                <li key={result.id} onClick={async () => {\r\n                    const id = await addMovie(result.id, result.title)\r\n                    setMovie({ tmdb: result.id, title: result.title, id: id , posterPath:result.poster_path})\r\n                    setPage(\"MovieInfo\")\r\n                }\r\n                }>{result.title} {result.release_date ? \"(\" + result.release_date.split('-')[0] + \")\" : \"\"}</li>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../css/App.css\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { getPopular } from \"../requests/gets\";\r\nimport { addMovie } from \"../requests/posts\";\r\n\r\nfunction MovieList({ setMovie, setPage }) {\r\n  useEffect(() => {\r\n    fetchItems();\r\n  }, []);\r\n  // useEffect ==> it only going to run when the component mounts\r\n\r\n  const [items, setItems] = useState([]);\r\n\r\n  const fetchItems = async () => {\r\n    let popularMovies = await getPopular();\r\n    setItems(popularMovies);\r\n  };\r\n  return (\r\n    <Box flexWrap=\"wrap\" display=\"flex\">\r\n      <div className=\"MovList\">\r\n        {items.map((results) => (\r\n          <Box  key={results.title} id=\"BoxStyle\">\r\n            <div>\r\n              <div className=\"container\">\r\n                <div className=\"vertical-center\">\r\n                  <h4>\r\n                    <div onClick={() => setMovie(results.title)}>\r\n                      {results.title.length < 50 ? results.title : results.title.substr(0,50)+'...'}\r\n                    </div>\r\n                  </h4>\r\n                </div>\r\n              </div>\r\n              <img\r\n                onClick={async () => {\r\n                  const id = await addMovie(results.id, results.title);\r\n                  setMovie({ tmdb: results.id, title: results.title, id: id, posterPath:results.poster_path })\r\n                  setPage(\"MovieInfo\");\r\n                }}\r\n                src={\r\n                  \" https://image.tmdb.org/t/p/w220_and_h330_face\" +\r\n                  results.poster_path\r\n                }\r\n                alt=\"no \"\r\n                style={{cursor:\"pointer\"}}\r\n              />\r\n            </div>\r\n          </Box>\r\n        ))}\r\n      </div>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default MovieList;\r\n","import React from \"react\";\r\n\r\nexport default function Comments({\r\n  setShowComments,\r\n  warnings,\r\n  commentCategory,\r\n}) {\r\n  console.log(warnings);\r\n  return (\r\n    <div\r\n      style={{\r\n              position: \"absolute\",\r\n       overflowY:\"auto\",\r\n        zIndex: \"2\",\r\n        backgroundColor: \"#002b36\",\r\n        width: \"60%\",\r\n        left: \"20%\",\r\n        top: \"30%\",\r\n        height: \"40%\",\r\n        borderWidth: \"3px\",\r\n        borderStyle: \"solid\",\r\n        borderColor: \"mauve\",\r\n        borderRadius: \"8px\",\r\n      }}\r\n    >\r\n      <div\r\n        onClick={() => {\r\n          setShowComments(false);\r\n        }}\r\n        style={{\r\n          float: \"right\",\r\n          margin: \"4px 5px\",\r\n          width: \"max-content\",\r\n          position: \"relative\",\r\n          fontSize: \"large\",\r\n          color: \"white\",\r\n          fontWeight: \"700\",\r\n          cursor: \"pointer\",\r\n        }}\r\n      >\r\n        X\r\n      </div>\r\n          <h2 style={{ margin: \"10px\" }}>Comments on {commentCategory}</h2>\r\n          <div>\r\n      <ul style={{maxHeight: \"65%\"}}>\r\n        \r\n          {warnings\r\n            .filter((warning) => {\r\n              return warning.category === commentCategory;\r\n            })\r\n            .map((warning) => {\r\n                return <li> {warning.comment}</li>;\r\n            })}\r\n        \r\n              </ul>\r\n              </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../css/App.css\";\r\nimport { getWarnings, getTMDB } from \"../requests/gets\";\r\nimport Comments from \"./Comments\";\r\nimport { getAllResource } from \"../requests/gets\";\r\nfunction average(nums) {\r\n  return nums.reduce((a, b) => a + b) / nums.length;\r\n}\r\nexport default function ViewMovieInfo({\r\n  setCurrentPage,\r\n  tmdb,\r\n  movieID,\r\n  movieTitle,\r\n  posterPath,\r\n}) {\r\n  const [warnings, setWarnings] = useState([]);\r\n  const [warningModelData, setWarningModelData] = useState();\r\n  const [movieDesc, setMovieDesc] = useState();\r\n  const [showComments, setShowComments] = useState(false);\r\n  const [commentCategory, setCommentCategory] = useState(\"\");\r\n\r\n  const findInfoFromID = (type, id, attr) => {\r\n    for (let item of warningModelData[type]) {\r\n      if (item._id === id) {\r\n        return item[attr];\r\n      }\r\n    }\r\n  };\r\n  // Get all categories,freq,etc from database\r\n  const getWarningModelData = async () => {\r\n    const categories = await getAllResource(\"categories\");\r\n    const frequencies = await getAllResource(\"frequencies\");\r\n    const types = await getAllResource(\"types\");\r\n    const severities = await getAllResource(\"severities\");\r\n    setWarningModelData({\r\n      categories: categories,\r\n      frequencies: frequencies,\r\n      types: types,\r\n      severities: severities,\r\n    });\r\n  };\r\n\r\n  //    const category = findInfoFromID('categories', warning.categoryID, 'title')\r\n\r\n  useEffect(() => {\r\n    const getDescription = async () => {\r\n      const desc = await getTMDB(tmdb);\r\n      setMovieDesc(desc.overview);\r\n    };\r\n    const getWarningData = async () => {\r\n      const warningData = await getWarnings(movieID);\r\n      setWarnings(warningData);\r\n    };\r\n    const getData = async () => {\r\n      await getWarningData();\r\n      await getWarningModelData();\r\n      await getDescription();\r\n    };\r\n    getData();\r\n  }, [movieID, tmdb]);\r\n\r\n  if (!warningModelData) {\r\n    return <h1>Loading...</h1>;\r\n  }\r\n  // lookup table of sorts, to convert a value into a title\r\n  // possibly change to just be a function\r\n  const warningLabelsfromValues = {\r\n    frequencies: {},\r\n    types: {},\r\n    severities: {},\r\n  };\r\n  warningModelData.frequencies.forEach((frequency) => {\r\n    warningLabelsfromValues.frequencies[frequency.value] = frequency.title;\r\n  });\r\n  warningModelData.types.forEach((type) => {\r\n    warningLabelsfromValues.types[type.value] = type.title;\r\n  });\r\n  warningModelData.severities.forEach((severity) => {\r\n    warningLabelsfromValues.severities[severity.value] = severity.title;\r\n  });\r\n  const warningTotals = {};\r\n\r\n  /* Will create an object with all of the warnings accumulated together: eg:\r\n  {violence: {frequencies: [1,1,2,3,2], sev: [1,2,4,5,2], type: [1,2,3,4,5]},\r\n  blood: etc.....}\r\n  */\r\n\r\n  warnings.forEach((warning) => {\r\n    const freq = findInfoFromID(\"frequencies\", warning.frequencyID, \"value\");\r\n    const sev = findInfoFromID(\"severities\", warning.severityID, \"value\");\r\n    const type = findInfoFromID(\"types\", warning.typeID, \"value\");\r\n\r\n    if (Object.keys(warningTotals).includes(warning.categoryID)) {\r\n      warningTotals[warning.categoryID][\"frequencies\"].push(freq);\r\n      warningTotals[warning.categoryID][\"severities\"].push(sev);\r\n      warningTotals[warning.categoryID][\"types\"].push(type);\r\n    } else {\r\n      warningTotals[warning.categoryID] = {\r\n        frequencies: [freq],\r\n        severities: [sev],\r\n        types: [type],\r\n      };\r\n    }\r\n    if (warning.comment) {\r\n      warningTotals[warning.categoryID].hasComments = true;\r\n    }\r\n  });\r\n  /*turning those lists of freq,types,sevs into a single number from the average */\r\n  const warningAverages = [];\r\n  Object.keys(warningTotals).forEach((category) => {\r\n    warningAverages.push({\r\n      hasComments: warningTotals[category].hasComments ? true : false,\r\n      category: findInfoFromID(\"categories\", category, \"title\"),\r\n      frequency: Math.round(average(warningTotals[category].frequencies)),\r\n      type: Math.round(average(warningTotals[category].types)),\r\n      severity: Math.round(average(warningTotals[category].severities)),\r\n    });\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {showComments ? (\r\n        <Comments\r\n          warnings={warnings.map((warning) => {\r\n            return {\r\n              category: findInfoFromID(\r\n                \"categories\",\r\n                warning.categoryID,\r\n                \"title\"\r\n              ),\r\n              comment: warning.comment,\r\n            };\r\n          })}\r\n          commentCategory={commentCategory}\r\n          setShowComments={setShowComments}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      <div className=\"collapsible-tables pageContainer threeQuartersPageContainer\">\r\n        <h2>{movieTitle}</h2>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexWrap: \"wrap\",\r\n            alignItems: \"center\",\r\n            right: \"60%\",\r\n            top: \"20%\",\r\n            marginBottom: \"10px\",\r\n          }}\r\n          id=\"movieDesc\"\r\n        >\r\n          <div style={{ maxWidth: \"600px\", minWidth: \"200px\" }}>\r\n            {movieDesc}\r\n          </div>\r\n          <img\r\n            className=\"movieImage\"\r\n            style={{ width: \"220px\" }}\r\n            src={\" https://image.tmdb.org/t/p/w220_and_h330_face\" + posterPath}\r\n            alt=\"no \"\r\n          />\r\n        </div>\r\n        <div>\r\n          {warningAverages.length !== 0 ? (\r\n            <div>\r\n              <h3>Warnings:</h3>\r\n              <table border=\"2\" style={{ borderColor: \"#002b36\" }}>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Category</th>\r\n                    <th>Severity</th>\r\n                    <th>Frequency</th>\r\n                    <th>Type</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {warningAverages.map((warning) => (\r\n                    <tr key={warningAverages.indexOf(warning)}>\r\n                      <td data-title=\"Category\">\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                            flexWrap: \"wrap\",\r\n                          }}\r\n                        >\r\n                          {warning.category}\r\n                          {warning.hasComments ? (\r\n                            <button\r\n                              className=\"btn btn-sm btn-danger\"\r\n                              style={{\r\n                                margin: \"2px 0\",\r\n                                display: \"flex\",\r\n                                justifyContent: \"space-between\",\r\n                                flexWrap: \"wrap\",\r\n                              }}\r\n                              onClick={() => {\r\n                                setCommentCategory(warning.category);\r\n                                setShowComments(true);\r\n                              }}\r\n                            >\r\n                              comments\r\n                            </button>\r\n                          ) : (\r\n                            <></>\r\n                          )}\r\n                        </div>\r\n                      </td>\r\n                      <td data-title=\"Severity\">\r\n                        {warningLabelsfromValues.severities[warning.severity]}\r\n                      </td>\r\n                      <td data-title=\"Frequency\">\r\n                        {warningLabelsfromValues.frequencies[warning.frequency]}\r\n                      </td>\r\n                      <td data-title=\"Type\">\r\n                        {warningLabelsfromValues.types[warning.type]}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <h2 style={{ marginTop: \"30px\" }}>\r\n                Be the first to add a warning!!\r\n              </h2>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"pageContainer warningPageContainer-Bottom\">\r\n        {window.sessionStorage.getItem(\"token\") ? (\r\n          <button\r\n            className=\"btn btn-success\"\r\n            onClick={() => {\r\n              setCurrentPage(\"AddWarning\");\r\n            }}\r\n          >\r\n            Add warning\r\n          </button>\r\n        ) : (\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            onClick={() => {\r\n              setCurrentPage(\"SignIn\");\r\n            }}\r\n          >\r\n            Log In To Contribute\r\n          </button>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../css/App.css\";\r\nimport { getAllResource } from \"../requests/gets\";\r\nimport { createNewWarning } from \"../requests/posts\";\r\n\r\n// Example of an adding warning using different categories\r\n\r\nexport default function AddWarning({\r\n    setCurrentPage,\r\n    movieID,\r\n    movieTitle,\r\n}) {\r\n    const findValueFromID = (type, id) => {\r\n        console.log(\"type\", type, \"id\", id);\r\n        for (let item of pageData[type]) {\r\n            if (item._id === id) {\r\n                return item.title;\r\n            }\r\n        }\r\n    };\r\n\r\n    const getPageData = async () => {\r\n        const categories = await getAllResource(\"categories\");\r\n        const frequencies = await getAllResource(\"frequencies\");\r\n        const types = await getAllResource(\"types\");\r\n        const severities = await getAllResource(\"severities\");\r\n        setPageData({\r\n            categories: categories,\r\n            frequencies: frequencies,\r\n            types: types,\r\n            severities: severities,\r\n        });\r\n    };\r\n    const [unchosenError, setUnchosenError] = useState(false);\r\n    const [pageData, setPageData] = useState();\r\n    const [warnings, setWarnings] = useState([]);\r\n    const [category, setCategory] = useState(\"\");\r\n    const [frequency, setFrequency] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n    const [severity, setSeverity] = useState(\"\");\r\n    const [comment, setComment] = useState(\"\");\r\n    useEffect(() => {\r\n        const getData = async () => {\r\n            await getPageData();\r\n        };\r\n        getData();\r\n    }, []);\r\n    if (!pageData) {\r\n        return <div>Loading...</div>;\r\n    }\r\n    return (\r\n        <div className=\"pageContainer fullPageContainer\">\r\n            <div><h2>Add a warning to {movieTitle}</h2></div>\r\n            <br></br>\r\n            <div className=\"ptther\">\r\n                <select\r\n                    className=\"add-warning-dropdown\"\r\n                    onChange={(event) => {\r\n                        setCategory(event.target.value);\r\n                    }}\r\n                >\r\n                    <option>Choose a category</option>\r\n                    {pageData.categories.map((category) => (\r\n                        <option key={category._id} value={category._id}>\r\n                            {category.title}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n                <select\r\n                    className=\"add-warning-dropdown\"\r\n                    onChange={(event) => {\r\n                        setFrequency(event.target.value);\r\n                    }}\r\n                >\r\n                    <option>Choose a frequency</option>\r\n                    {pageData.frequencies.map((frequency) => (\r\n                        <option key={frequency._id} value={frequency._id}>\r\n                            {frequency.title}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n\r\n                <select\r\n                    className=\"add-warning-dropdown\"\r\n                    onChange={(event) => {\r\n                        setType(event.target.value);\r\n                    }}\r\n                >\r\n                    <option>Choose a Type</option>\r\n                    {pageData.types.map((type) => (\r\n                        <option key={type._id} value={type._id}>\r\n                            {type.title}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n\r\n                <select\r\n                    className=\"add-warning-dropdown\"\r\n                    onChange={(event) => {\r\n                        setSeverity(event.target.value);\r\n                    }}\r\n                >\r\n                    <option>Choose a Severity</option>\r\n                    {pageData.severities.map((severity) => (\r\n                        <option key={severity._id} value={severity._id}>\r\n                            {severity.title}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n                \r\n                <textarea\r\n                    id=\"commentBox\"\r\n                    placeholder=\"Additional comments\"\r\n                    onChange={(event) => {\r\n                        setComment(event.target.value);\r\n                    }}\r\n                />\r\n\r\n                <br />\r\n\r\n                <button className=\"btn btn-success\"\r\n                    onClick={() => {\r\n                        if (category && frequency && type && severity) {\r\n                            setUnchosenError(false);\r\n                            setWarnings(\r\n                                warnings.concat([\r\n                                    {\r\n                                        movieID: movieID,\r\n                                        categoryID: category,\r\n                                        frequencyID: frequency,\r\n                                        typeID: type,\r\n                                        severityID: severity,\r\n                                        comment: comment,\r\n                                    },\r\n                                ])\r\n                            );\r\n                            document.getElementById('commentBox').value = ''\r\n                        } else {\r\n                            setUnchosenError(true);\r\n                        }\r\n                    }}\r\n                >\r\n                    Add this warning\r\n                </button>\r\n            </div>\r\n            {unchosenError ? (\r\n                <div style={{ color: \"red\" }}>\r\n                    Please choose a value from each dropdown\r\n                </div>\r\n            ) : null}\r\n\r\n            <br />\r\n            <div className=\"part\">\r\n                <button className = \"btn btn-warning\"\r\n                    onClick={() => {\r\n                        createNewWarning(warnings, window.sessionStorage.getItem('token'));\r\n                        setCurrentPage(\"Thanks\");\r\n                    }}\r\n                >\r\n                    Send All Warnings\r\n                </button>\r\n            </div>\r\n            <br />\r\n            <div className=\"collapsible-tables\">\r\n                <table className=\"center\" border=\"2\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Category</th>\r\n                            <th>Frequency</th>\r\n                            <th>Type</th>\r\n                            <th>Severity</th>\r\n                            <th>Comment</th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    {warnings.length > 0 ? (\r\n                        <tbody>\r\n                            {warnings.map((item) => (\r\n                                <tr key={\"row\" + warnings.indexOf(item)}>\r\n                                    <td\r\n                                        data-title=\"Category\"\r\n                                        key={\"c\" + warnings.indexOf(item)}\r\n                                    >\r\n                                        {findValueFromID(\r\n                                            \"categories\",\r\n                                            item.categoryID\r\n                                        )}\r\n                                    </td>\r\n                                    <td\r\n                                        data-title=\"Frequency\"\r\n                                        key={\"f\" + warnings.indexOf(item)}\r\n                                    >\r\n                                        {findValueFromID(\r\n                                            \"frequencies\",\r\n                                            item.frequencyID\r\n                                        )}\r\n                                    </td>\r\n                                    <td\r\n                                        data-title=\"Type\"\r\n                                        key={\"t\" + warnings.indexOf(item)}\r\n                                    >\r\n                                        {findValueFromID(\"types\", item.typeID)}\r\n                                    </td>\r\n                                    <td\r\n                                        data-title=\"Severity\"\r\n                                        key={\"s\" + warnings.indexOf(item)}\r\n                                    >\r\n                                        {findValueFromID(\r\n                                            \"severities\",\r\n                                            item.severityID\r\n                                        )}\r\n                                    </td>\r\n                                    <td\r\n                                        data-title=\"Comment\"\r\n                                        key={\"co\" + warnings.indexOf(item)}\r\n                                    >\r\n                                        {item.comment}\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    ) : null}\r\n                </table>\r\n\r\n                <br></br>\r\n                <br></br>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"../css/App.css\";\r\nimport {Button, Card, CardBody, CardGroup, Col, Container, Form, Input, InputGroup, Row} from \"reactstrap\";\r\nimport { userLogin } from \"../requests/posts\";\r\nexport default function Login({setCurrentPage}) {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [loginFail, setLoginFail]= useState(false)\r\n  const changeUsername = (username) => {\r\n    setUsername(username);\r\n  }\r\n  const changePassword = (password) => {\r\n    setPassword(password);\r\n  }\r\n  const login = async ()=> {\r\n      // debugger;\r\n      try {\r\n          let response = await userLogin(username, password)\r\n        if (response.token) {\r\n              console.log(response)\r\n              window.sessionStorage.setItem(\"token\", response.token)\r\n              window.sessionStorage.setItem(\"username\", response.user.username)\r\n          }\r\n          setCurrentPage('Navigation')\r\n      } catch (error) {\r\n          setLoginFail(error.message)\r\n      }\r\n  }\r\n\r\n \r\n    return (\r\n      <div className=\"app flex-row align-items-center\">\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col md=\"9\" lg=\"7\" xl=\"6\">\r\n              <CardGroup>\r\n                <Card className=\"p-2\">\r\n                  <CardBody>\r\n                    <Form>\r\n                      \r\n                      <div\r\n                        className=\"totheRight\"\r\n                        style={{  }}\r\n                      >\r\n                        <InputGroup className=\"mb-3\">\r\n                          <Input\r\n                            type=\"text\"\r\n                            onChange={(e)=>{changeUsername(e.target.value)}}\r\n                            placeholder=\"Enter Username\"\r\n                          />\r\n                        </InputGroup>\r\n                        <InputGroup className=\"mb-4\">\r\n                          <Input\r\n                            type=\"password\"\r\n                            onChange={(e)=>{changePassword(e.target.value)}}\r\n                            placeholder=\"Enter Password\"\r\n                                                /><br /><br />\r\n                                                {loginFail ? <span style={{ color: \"red\" }}>{loginFail}</span> : <span></span>}\r\n                        </InputGroup>\r\n                        <Button onClick={login} color=\"success\" block>\r\n                          Login\r\n                        </Button>\r\n                      </div>\r\n                    </Form>\r\n                    <br />\r\n                    <button className=\"btn btn-warning\" onClick={()=>{setCurrentPage('SignUp')}}>Create an Account</button>\r\n                    \r\n                  </CardBody>\r\n                </Card>\r\n              </CardGroup>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n","import React, { useState } from \"react\";\r\nimport \"../css/App.css\";\r\nimport {Button, Card, CardBody, CardGroup, Col, Container, Form, Input, InputGroup, Row} from \"reactstrap\";\r\nimport { addUser } from \"../requests/posts\";\r\n\r\nexport default function SignUp({setCurrentPage}) {\r\n\r\n  const [username, setUsername] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [registerFail, setRegisterFail]= useState(false)\r\n\r\n  const changeUsername = (username) => {\r\n    setUsername( username );\r\n  }\r\n  const changeEmail = (email) => {\r\n    setEmail( email );\r\n  }\r\n  const changePassword = (password) => {\r\n    setPassword( password );\r\n  }\r\n\r\n  const register = async () => {\r\n    \r\n    // debugger;\r\n    try {\r\n      let response = await addUser(username, email, password)\r\n      setCurrentPage('SignIn')\r\n    } catch (error) {\r\n      let errMsg = JSON.parse(error.message).message\r\n      setRegisterFail(errMsg)\r\n    }\r\n  }\r\n\r\n\r\n    return (\r\n      <div className=\"app flex-row align-items-center\">\r\n          <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col md=\"9\" lg=\"7\" xl=\"6\">\r\n              <CardGroup>\r\n                <Card className=\"p-2\">\r\n                  <CardBody>\r\n                    <Form>\r\n                      \r\n                      <div\r\n                        className=\"totheRight\"\r\n                        style={{  }}\r\n                      >\r\n                        <InputGroup className=\"mb-3\">\r\n                          <Input\r\n                            type=\"text\"\r\n                            onChange={(e)=>{changeUsername(e.target.value)}}\r\n                            placeholder=\"Enter username\"\r\n                          />\r\n                        </InputGroup>\r\n                        <InputGroup className=\"mb-3\">\r\n                          <Input\r\n                            type=\"text\"\r\n                            onChange={(e)=>{changeEmail(e.target.value)}}\r\n                            placeholder=\"Enter email\"\r\n                          />\r\n                        </InputGroup>\r\n                        <InputGroup className=\"mb-4\">\r\n                          <Input\r\n                            type=\"password\"\r\n                            onChange={(e)=>{changePassword(e.target.value)}}\r\n                            placeholder=\"Enter password\"\r\n                          />\r\n                          <br /><br />\r\n                        </InputGroup>\r\n                        {registerFail ? <div style={{ color: \"red\", fontSize: \"1.5em\", fontStyle: \"italic\" }}>{registerFail}<br /><br /></div> : <div></div>}\r\n                        \r\n                        <Button onClick={register} color=\"success\" block>\r\n                          Create account\r\n                        </Button>\r\n                      </div>\r\n                    </Form>\r\n                    <br />\r\n                  </CardBody>\r\n                </Card>\r\n              </CardGroup>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n  ","import React, { useEffect } from \"react\";\r\nimport \"../css/App.css\";\r\n\r\nexport default function Thanks({ setCurrentPage }) {\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setCurrentPage(\"Navigation\");\r\n    }, 1500);\r\n  });\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"100px 10px\",\r\n        textAlign: \"center\",\r\n      }}\r\n    >\r\n          <h1>Thank you for your contribution</h1>\r\n          <h2>Loading...</h2>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { addResource, removeResource, removeUser } from \"../requests/posts\";\r\nimport { getAllResource } from \"../requests/gets\";\r\n\r\nexport default () => {\r\n  const [adminType, setAdminType] = useState(\r\n    \"Category\",\r\n    \"Frequency\",\r\n    \"Type\",\r\n    \"Severity\"\r\n  );\r\n  let pageToShow;\r\n  const token = window.sessionStorage.getItem('token')\r\n  if (adminType === \"Category\") {\r\n    pageToShow = <Category token={token}/>;\r\n  } else if (adminType === \"Frequency\") {\r\n    pageToShow = <Frequency token={token}/>;\r\n  } else if (adminType === \"Type\") {\r\n    pageToShow = <Type token={token}/>;\r\n  } else if (adminType === \"Severity\") {\r\n    pageToShow = <Severity token={token}/>;\r\n  } else {\r\n    pageToShow = <User token={token} />;\r\n  }\r\n  return (\r\n    <div>\r\n      <select\r\n        onChange={(e) => {\r\n          setAdminType(e.target.value);\r\n        }}\r\n      >\r\n        <option>Category</option>\r\n        <option>Frequency</option>\r\n        <option>Type</option>\r\n        <option>Severity</option>\r\n        <option>User</option>\r\n      </select>\r\n      {pageToShow}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Category = ({ token }) => {\r\n  const [categories, setCategories] = useState();\r\n  const [newCategory, setNewCategory] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      await getPageData();\r\n    };\r\n    getData();\r\n  }, []);\r\n\r\n  const getPageData = async () => {\r\n    const currentCategories = await getAllResource(\"categories\");\r\n    setCategories(currentCategories);\r\n  };\r\n\r\n  const createNewCategory = async () => {\r\n    setLoading(true);\r\n    await addResource(\"category\", { title: newCategory }, token);\r\n    setTimeout(() => {\r\n      getPageData();\r\n      setLoading(false);\r\n    }, 2000);\r\n  };\r\n\r\n  const deleteCategory = async (deleteTitle) => {\r\n    setLoading(true);\r\n    await removeResource(\"category\", { title: deleteTitle }, token);\r\n    setTimeout(() => {\r\n      getPageData();\r\n      setLoading(false);\r\n    }, 2000);\r\n  };\r\n  if (loading) {\r\n    return (\r\n      <img alt=\"loading\" src=\"https://gifimage.net/wp-content/uploads/2017/08/spinner-gif-13.gif\" />\r\n    );\r\n  }\r\n  if (!categories) {\r\n    return <h1>Loading, please wait....</h1>;\r\n  }\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <ul>\r\n        <div className=\"adminList\">\r\n          {categories.map((category) => (\r\n            <li>\r\n              {category.title}{\" \"}\r\n              <button\r\n                onClick={() => deleteCategory(category.title)}\r\n                className=\"deletebtn\"\r\n              >\r\n                {\" \"}\r\n                Remove{\" \"}\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </div>\r\n      </ul>\r\n      <div className=\"adminSubmit\">\r\n        <h1>Category</h1>\r\n        <h2>Add</h2>\r\n        <input\r\n          onChange={(e) => {\r\n            setNewCategory(e.target.value);\r\n          }}\r\n          placeholder=\"New Category Title\"\r\n        />\r\n        <button onClick={createNewCategory} className=\"submitbtn\">\r\n          Submit\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Adding Frequencies\r\n\r\nconst Frequency = ({ token }) => {\r\n  const [frequencies, setFrequencies] = useState();\r\n  const [newFrequency, setNewFrequency] = useState();\r\n  const [newValue, setNewValue] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      await getPageData();\r\n    };\r\n    getData();\r\n  }, []);\r\n\r\n  const getPageData = async () => {\r\n    const currentFrequencies = await getAllResource(\"frequencies\");\r\n    setFrequencies(currentFrequencies);\r\n  };\r\n\r\n  const createNewFrequency = async () => {\r\n    setLoading(true);\r\n    await addResource(\"frequency\", { title: newFrequency, value: newValue },token);\r\n    setTimeout(() => {\r\n      getPageData();\r\n      setLoading(false);\r\n    }, 2000);\r\n  };\r\n\r\n  const deleteFrequency = async (deleteTitle) => {\r\n    setLoading(true);\r\n    await removeResource(\"frequency\", { title: deleteTitle }, token);\r\n    setTimeout(() => {\r\n      getPageData();\r\n      setLoading(false);\r\n    }, 2000);\r\n  };\r\n  if (loading) {\r\n    return (\r\n      <img alt=\"loading\" src=\"https://gifimage.net/wp-content/uploads/2017/08/spinner-gif-13.gif\" />\r\n    );\r\n  }\r\n  if (!frequencies) {\r\n    return <h1>Loading, please wait....</h1>;\r\n  }\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <ul>\r\n        <div className=\"adminList\">\r\n          {frequencies.map((frequency) => (\r\n            <li>\r\n              {frequency.title}{\" \"}\r\n              <button\r\n                onClick={() => deleteFrequency(frequency.title)}\r\n                className=\"deletebtn\"\r\n              >\r\n                {\" \"}\r\n                Remove{\" \"}\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </div>\r\n      </ul>\r\n      <div className=\"adminSubmit\">\r\n        <h1>Frequency</h1>\r\n        <h2>Add</h2>\r\n        <input\r\n          onChange={(e) => {\r\n            setNewFrequency(e.target.value);\r\n          }}\r\n          placeholder=\"New Frequency Title\"\r\n        />\r\n        <input\r\n          onChange={(e) => {\r\n            setNewValue(e.target.value);\r\n          }}\r\n          placeholder=\"New Frequency Value\"\r\n        />\r\n\r\n        <button onClick={createNewFrequency} className=\"submitbtn\">\r\n          Submit\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Adding Type\r\n\r\nconst Type = ({token}) => {\r\n  const [types, setTypes] = useState();\r\n  const [newType, setNewType] = useState();\r\n  const [newValue, setNewValue] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      await getPageData();\r\n    };\r\n    getData();\r\n  }, []);\r\n\r\n  const getPageData = async () => {\r\n    const currentTypes = await getAllResource(\"types\");\r\n    setTypes(currentTypes);\r\n  };\r\n\r\n  const createNewType = async () => {\r\n    setLoading(true);\r\n    await addResource(\"type\", { title: newType, value: newValue },token);\r\n    setTimeout(() => {\r\n      getPageData();\r\n      setLoading(false);\r\n    }, 2000);\r\n  };\r\n\r\n  const deleteType = async (deleteTitle) => {\r\n    setLoading(true);\r\n    await removeResource(\"type\", { title: deleteTitle }, token);\r\n    setTimeout(() => {\r\n      getPageData();\r\n      setLoading(false);\r\n    }, 2000);\r\n  };\r\n  if (loading) {\r\n    return (\r\n      <img alt=\"loading\" src=\"https://gifimage.net/wp-content/uploads/2017/08/spinner-gif-13.gif\" />\r\n    );\r\n  }\r\n  if (!types) {\r\n    return <h1>Loading, please wait....</h1>;\r\n  }\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <ul>\r\n        <div className=\"adminList\">\r\n          {types.map((type) => (\r\n            <li>\r\n              {type.title}{\" \"}\r\n              <button\r\n                onClick={() => deleteType(type.title)}\r\n                className=\"deletebtn\"\r\n              >\r\n                {\" \"}\r\n                Remove{\" \"}\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </div>\r\n      </ul>\r\n      <div className=\"adminSubmit\">\r\n        <h1>Type</h1>\r\n        <h2>Add</h2>\r\n        <input\r\n          onChange={(e) => {\r\n            setNewType(e.target.value);\r\n          }}\r\n          placeholder=\"New Type Title\"\r\n        />\r\n        <input\r\n          onChange={(e) => {\r\n            setNewValue(e.target.value);\r\n          }}\r\n          placeholder=\"New Type Value\"\r\n        />\r\n\r\n        <button onClick={createNewType} className=\"submitbtn\">\r\n          Submit\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Adding Severity\r\nconst User = ({ token }) => {\r\n  const [selectedUser, setSelectedUser] = useState();\r\n  const [deleted, setDeleted] = useState();\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        placeholder=\"username\"\r\n        onChange={(e) => {\r\n          setSelectedUser(e.target.value);\r\n        }}\r\n      />\r\n      <button\r\n        onClick={async () => {\r\n          try {\r\n            let response = await removeUser(selectedUser);\r\n            if (response.deletedCount) {\r\n              setDeleted(`Successful deletion of ${selectedUser}`);\r\n            } else {\r\n              setDeleted(\r\n                \"Sorry, could not find user, check the name\"\r\n                \r\n              );\r\n            }\r\n          } catch (e) {\r\n            setDeleted(e)\r\n          }\r\n        }}\r\n        className=\"btn btn-danger\"\r\n      >\r\n        Delete\r\n      </button>\r\n      <div>{deleted}</div>\r\n    </div>\r\n  );\r\n};\r\nconst Severity = ({ token }) => {\r\n  const [severities, setSeverities] = useState();\r\n  const [newSeverity, setNewSeverity] = useState();\r\n  const [newValue, setNewValue] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      await getPageData();\r\n    };\r\n    getData();\r\n  }, []);\r\n\r\n  const getPageData = async () => {\r\n    const currentSeverities = await getAllResource(\"severities\");\r\n    setSeverities(currentSeverities);\r\n  };\r\n\r\n  const createNewSeverity = async () => {\r\n    setLoading(true);\r\n    await addResource(\"severity\", { title: newSeverity, value: newValue }, token);\r\n    setTimeout(() => {\r\n      getPageData();\r\n      setLoading(false);\r\n    }, 2000);\r\n  };\r\n\r\n  const deleteSeverity = async (deleteTitle) => {\r\n    setLoading(true);\r\n    await removeResource(\"severity\", { title: deleteTitle }, token);\r\n    setTimeout(() => {\r\n      getPageData();\r\n      setLoading(false);\r\n    }, 2000);\r\n  };\r\n  if (loading) {\r\n    return (\r\n      <img alt=\"loading\" src=\"https://gifimage.net/wp-content/uploads/2017/08/spinner-gif-13.gif\" />\r\n    );\r\n  }\r\n  if (!severities) {\r\n    return <h1>Loading, please wait....</h1>;\r\n  }\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <ul>\r\n        <div className=\"adminList\">\r\n          {severities.map((severity) => (\r\n            <li>\r\n              {severity.title}{\" \"}\r\n              <button\r\n                onClick={() => deleteSeverity(severity.title)}\r\n                className=\"deletebtn\"\r\n              >\r\n                {\" \"}\r\n                Remove{\" \"}\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </div>\r\n      </ul>\r\n      <div className=\"adminSubmit\">\r\n        <h1>Severity</h1>\r\n        <h2>Add</h2>\r\n        <input\r\n          onChange={(e) => {\r\n            setNewSeverity(e.target.value);\r\n          }}\r\n          placeholder=\"New Severity Title\"\r\n        />\r\n        <input\r\n          onChange={(e) => {\r\n            setNewValue(e.target.value);\r\n          }}\r\n          placeholder=\"New Severity Value\"\r\n        />\r\n\r\n        <button onClick={createNewSeverity} className=\"submitbtn\">\r\n          Submit\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../css/App.css\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardGroup,\r\n  Col,\r\n  Container,\r\n  Form,\r\n  Input,\r\n  InputGroup,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport { UncontrolledAlert } from \"reactstrap\";\r\nimport { checkAdmin, updateUser, userLogout } from \"../requests/posts\";\r\n\r\nexport default function UserProfile({ setCurrentPage }) {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [updateFail, setUpdateFail] = useState(false);\r\n  const [logoutFail, setLogoutFail] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false)\r\n  useEffect(() => {\r\n    //check if user is admin to show button\r\n    const check = async () => {\r\n    \r\n     setIsAdmin(await checkAdmin(window.sessionStorage.getItem(\"token\")))\r\n    \r\n  }\r\n   check()\r\n  \r\n },[])\r\n  // is the user logged in?\r\n  if (!window.sessionStorage.getItem(\"token\")) {\r\n    return (\r\n      <div style={{ width: \"40%\", margin: \"auto\" }}>\r\n        <UncontrolledAlert color=\"danger\">\r\n          You must be logged in to change your User Profile\r\n        </UncontrolledAlert>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const changeUsername = (username) => {\r\n    setUsername(username);\r\n  };\r\n  const changeEmail = (email) => {\r\n    setEmail(email);\r\n  };\r\n  const changePassword = (password) => {\r\n    setPassword(password);\r\n  };\r\n\r\n  const changeUser = async () => {\r\n    // debugger;\r\n    try {\r\n      let response = updateUser(\r\n        username,\r\n        email,\r\n        password,\r\n        window.sessionStorage.getItem(\"token\")\r\n      );\r\n      setCurrentPage(\"Navigation\");\r\n    } catch (error) {\r\n      let errMsg = JSON.parse(error.message).message;\r\n      setUpdateFail(errMsg);\r\n    }\r\n  };\r\n\r\n  const logoutUser = async () => {\r\n    try {\r\n      userLogout(sessionStorage.getItem(\"token\"));\r\n      window.sessionStorage.removeItem(\"token\");\r\n      setCurrentPage(\"Navigation\");\r\n    } catch (error) {\r\n      let errMsg = JSON.parse(error.message);\r\n      setLogoutFail(errMsg);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app flex-row align-items-center\">\r\n      <Container>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"9\" lg=\"7\" xl=\"6\">\r\n            <CardGroup>\r\n              <Card className=\"p-2\">\r\n                <CardBody>\r\n                  <Form>\r\n                    <div className=\"totheRight\" style={{}}>\r\n                      {/* <InputGroup className=\"mb-3\">\r\n                          <Input\r\n                            type=\"text\"\r\n                            onChange={(e)=>{changeUsername(e.target.value)}}\r\n                            placeholder=\"Enter username\"\r\n                          />\r\n                        </InputGroup> */}\r\n                      <InputGroup className=\"mb-3\">\r\n                        <Input\r\n                          type=\"text\"\r\n                          onChange={(e) => {\r\n                            changeEmail(e.target.value);\r\n                          }}\r\n                          placeholder=\"Enter new email\"\r\n                        />\r\n                      </InputGroup>\r\n                      <InputGroup className=\"mb-4\">\r\n                        <Input\r\n                          type=\"password\"\r\n                          onChange={(e) => {\r\n                            changePassword(e.target.value);\r\n                          }}\r\n                          placeholder=\"Enter new password\"\r\n                        />\r\n                        <br />\r\n                        <br />\r\n                      </InputGroup>\r\n                      {updateFail ? (\r\n                        <div\r\n                          style={{\r\n                            color: \"red\",\r\n                            fontSize: \"1.5em\",\r\n                            fontStyle: \"italic\",\r\n                          }}\r\n                        >\r\n                          {updateFail}\r\n                          <br />\r\n                          <br />\r\n                        </div>\r\n                      ) : (\r\n                        <div></div>\r\n                      )}\r\n\r\n                      <Button onClick={changeUser} color=\"success\" block>\r\n                        Update account\r\n                      </Button>\r\n                      {isAdmin? <Button\r\n          onClick={() => {\r\n            setCurrentPage(\"Admin\");\r\n          }}\r\n          color=\"success\"\r\n          block\r\n        >\r\n          Admin\r\n        </Button>:''}\r\n\r\n                      <Button onClick={logoutUser} color=\"success\" block>\r\n                        Logout\r\n                      </Button>\r\n                    </div>\r\n                  </Form>\r\n                  <br />\r\n                </CardBody>\r\n              </Card>\r\n            </CardGroup>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"./css/App.css\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport SearchBar from \"./components/SearchMovie\";\r\nimport Movielist from \"./components/Movielist\";\r\nimport ViewMovieInfo from \"./components/MovieInfo\";\r\nimport AddWarning from \"./components/AddWarning\";\r\nimport Login from \"./components/Login\";\r\nimport SignUp from \"./components/SignUp\";\r\nimport Thanks from \"./components/Thanks\";\r\nimport Admin from './components/Admin'\r\nimport UserProfile from './components/UserProfile'\r\nexport default function App() {\r\n    let [currentPage, setCurrentPage] = useState(\"Navigation\");\r\n    let [selectedMovie, setSelectedMovie] = useState({title: 'The Lion King', id:'5fc1e881f7d9654d5c99ad9d', tmdb:\"\"});\r\n    const Home = () => {\r\n        console.log(selectedMovie.length);\r\n\r\n        switch (currentPage) {\r\n            case \"Thanks\":\r\n                return (\r\n                    <>\r\n                        <Thanks setCurrentPage={setCurrentPage} />\r\n                    </>\r\n                );\r\n            case \"Unused\":\r\n                return (\r\n                    <div>\r\n                        <button\r\n                            onClick={() => {\r\n                                setCurrentPage(\"AddWarning\");\r\n                            }}\r\n                        >\r\n                            Go to AddWarning Component\r\n                        </button>\r\n                        <br />\r\n                        <button\r\n                            onClick={() => {\r\n                                setCurrentPage(\"SearchMovie\");\r\n                            }}\r\n                        >\r\n                            Go to Main Page Component\r\n                        </button>\r\n                        <br />\r\n                        <button\r\n                            onClick={() => {\r\n                                setCurrentPage(\"MovieInfo\");\r\n                            }}\r\n                        >\r\n                            Go to Movie Info Component\r\n                        </button>\r\n                        <br />\r\n                        <button\r\n                            onClick={() => {\r\n                                setCurrentPage(\"SignIn\");\r\n                            }}\r\n                        >\r\n                            Go to Sign In Component\r\n                        </button>\r\n                        <br />\r\n                        <button\r\n                            onClick={() => {\r\n                                setCurrentPage(\"SignUp\");\r\n                            }}\r\n                        >\r\n                            Go to Sign Up Component\r\n                        </button>\r\n                        <br />\r\n                        <button\r\n                            onClick={() => {\r\n                                setCurrentPage(\"Admin\");\r\n                            }}\r\n                        >\r\n                            Go to Admin Component\r\n                        </button>\r\n                        <br />\r\n                    </div>\r\n                );\r\n\r\n            case \"AddWarning\":\r\n                return (\r\n                    <AddWarning\r\n                        setCurrentPage={setCurrentPage}\r\n                        \r\n                        movieTitle={selectedMovie.title}\r\n                        movieID={selectedMovie.id}\r\n                    />\r\n                );\r\n\r\n            case \"Navigation\":\r\n                return (\r\n                    <div className=\"App\">\r\n                        <SearchBar setPage={setCurrentPage} setMovie={setSelectedMovie} />\r\n\r\n                        <Movielist setPage={setCurrentPage} setMovie={setSelectedMovie} />\r\n                    </div>\r\n                );\r\n\r\n            case \"MovieInfo\":\r\n                return (\r\n                    <div>\r\n                        <ViewMovieInfo tmdb={selectedMovie.tmdb} setCurrentPage={setCurrentPage} movieTitle={selectedMovie.title} movieID={selectedMovie.id} posterPath={selectedMovie.posterPath} />\r\n                    </div>\r\n                );\r\n\r\n            case \"SignIn\":\r\n                return <Login setCurrentPage={setCurrentPage}/>\r\n                \r\n            case \"SignUp\":\r\n                return <SignUp setCurrentPage={setCurrentPage}/>;\r\n\r\n            case \"Admin\":\r\n                return <Admin />;\r\n            case \"UserProfile\":\r\n                return <UserProfile setCurrentPage={setCurrentPage} />\r\n            default:\r\n                return <h1>Error</h1>;\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            \r\n            <NavBar setCurrentPage={setCurrentPage} />\r\n            <Home />\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}