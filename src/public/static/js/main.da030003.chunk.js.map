{"version":3,"sources":["components/NavBar.js","requests/gets.js","requests/posts.js","components/SearchMovie.js","components/Movielist.js","components/Comments.js","components/MovieInfo.js","components/AddWarning.js","components/Login.js","components/SignUp.js","components/Thanks.js","components/Admin.js","components/UserProfile.js","App.js","index.js"],"names":["NavBar","currentPage","setCurrentPage","token","window","sessionStorage","getItem","className","Box","display","p","style","cursor","onClick","width","alignItems","height","viewBox","class","fill","xmlns","fillRule","d","fontSize","marginLeft","justifyContent","flexDirection","margin","fontFamily","padding","serverURL","getWarnings","movieID","a","fetch","response","json","result","console","log","searchTMDB","searchValue","suggestions","method","results","forEach","movie","length","push","release_date","title","original_title","id","poster_path","getTMDB","tmdb","data","getPopular","items","getAllResource","type","resource","getMovie","tmdbID","warnings","warning","headers","Headers","request","Request","body","JSON","stringify","userID","categoryID","frequencyID","typeID","severityID","comment","addResource","newResource","value","removeResource","addUser","newUsername","newEmail","newPassword","username","email","password","message","status","Error","removeUser","addMovie","movieName","res","_id","addedMovie","userLogin","text","error","SearchMovie","setPage","setMovie","useState","setResults","onChange","event","getResults","target","placeholder","map","key","posterPath","split","MovieList","useEffect","fetchItems","setItems","popularMovies","flexWrap","src","alt","Comments","setShowComments","commentCategory","position","overflowY","zIndex","backgroundColor","left","top","borderWidth","borderStyle","borderColor","borderRadius","float","color","fontWeight","maxHeight","filter","category","average","nums","reduce","b","ViewMovieInfo","movieTitle","setWarnings","warningModelData","setWarningModelData","movieDesc","setMovieDesc","showComments","setCommentCategory","findInfoFromID","attr","item","getWarningModelData","categories","frequencies","types","severities","getDescription","desc","overview","getWarningData","warningData","getData","warningLabelsfromValues","frequency","severity","warningTotals","freq","sev","Object","keys","includes","hasComments","warningAverages","Math","round","right","marginBottom","maxWidth","minWidth","border","indexOf","data-title","marginTop","AddWarning","findValueFromID","pageData","getPageData","setPageData","unchosenError","setUnchosenError","setCategory","setFrequency","setType","setSeverity","setComment","concat","createNewWarning","Login","setUsername","setPassword","loginFail","setLoginFail","login","setItem","Container","Row","Col","md","lg","xl","CardGroup","Card","CardBody","Form","InputGroup","Input","e","changeUsername","changePassword","Button","block","SignUp","setEmail","registerFail","setRegisterFail","register","errMsg","parse","changeEmail","fontStyle","Thanks","setTimeout","pageToShow","adminType","setAdminType","Category","setCategories","newCategory","setNewCategory","loading","setLoading","currentCategories","createNewCategory","deleteCategory","deleteTitle","Frequency","setFrequencies","newFrequency","setNewFrequency","newValue","setNewValue","currentFrequencies","createNewFrequency","deleteFrequency","Type","setTypes","newType","setNewType","currentTypes","createNewType","deleteType","User","selectedUser","setSelectedUser","deleted","setDeleted","deletedCount","Severity","setSeverities","newSeverity","setNewSeverity","currentSeverities","createNewSeverity","deleteSeverity","UserProfile","updateFail","setUpdateFail","UncontrolledAlert","changeUser","disabled","App","selectedMovie","setSelectedMovie","Home","Movielist","Admin","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da030003.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../css/App.css\";\r\nimport Box from \"@material-ui/core/Box\";\r\nexport default function NavBar({ currentPage, setCurrentPage }) {\r\n  const token = window.sessionStorage.getItem(\"token\");\r\n  return (\r\n    <>\r\n      <div className=\"navBar\">\r\n        <Box display=\"flex\" p={1}>\r\n          <div style={{cursor:\"pointer\"}} onClick={() => {\r\n                setCurrentPage(\"Navigation\");\r\n              }} style={{width:\"15%\", alignItems:\"center\", display:\"flex\"}}>\r\n            {/* <img\r\n              alt=\"Home\"\r\n              style={{\r\n                cursor: \"pointer\",\r\n                width: \"90%\",\r\n                margin: \"0px 5%\",\r\n                maxHeight: \"35px\",\r\n                maxWidth: \"35px\",\r\n              }}\r\n              width=\"20px\"\r\n              src={logo}\r\n              p={1}\r\n              onClick={() => {\r\n                setCurrentPage(\"Navigation\");\r\n              }}\r\n            ></img> */}\r\n            <svg style={{cursor:\"pointer\"}}  width=\"3vw\" height=\"3vw\" viewBox=\"0 0 16 16\" class=\"bi bi-house\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n  <path fillRule=\"evenodd\" d=\"M2 13.5V7h1v6.5a.5.5 0 0 0 .5.5h9a.5.5 0 0 0 .5-.5V7h1v6.5a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 13.5zm11-11V6l-2-2V2.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5z\"/>\r\n  <path fillRule=\"evenodd\" d=\"M7.293 1.5a1 1 0 0 1 1.414 0l6.647 6.646a.5.5 0 0 1-.708.708L8 2.207 1.354 8.854a.5.5 0 1 1-.708-.708L7.293 1.5z\"/>\r\n</svg> <div style={{cursor:\"pointer\",fontSize:\"2vw\", marginLeft:\"2vw\"}}>Home</div>\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              flexDirection:\"column\",\r\n              width: \"70%\",\r\n              margin: \"auto\",\r\n              fontFamily: \"raleway\",\r\n    fontSize: \"4vw\"\r\n            }}\r\n          >\r\n            {/* <img\r\n              alt=\"The Movie Warning Database\"\r\n              src={titleImage}\r\n              style={{\r\n                width: \"90%\",\r\n                height: \"auto\",\r\n                margin: \"0 5%\",\r\n                maxHeight: \"35\",\r\n                maxWidth: \"400px\",\r\n              }}\r\n            ></img> */}\r\n            The Movie Warning Database\r\n            <sub style={{fontSize:\"2vw\"}}>-Crowdsourced content warnings-</sub>\r\n          </div>\r\n          <div\r\n            style={{\r\n              alignItems: \"center\",\r\n              width: \"15%\",\r\n\r\n              display: \"flex\",\r\n              justifyContent: \"flex-end\",\r\n            }}\r\n          >\r\n            <span\r\n              className=\"\"\r\n              style={{\r\n                cursor: \"pointer\",\r\n                fontSize: \"2.0vw\",\r\n                padding: \" 0px 5px\",\r\n              }}\r\n              onClick={() => {\r\n                if (token) {\r\n                  setCurrentPage('UserProfile')\r\n                } else {\r\n                  setCurrentPage(\"SignIn\");\r\n                }\r\n              }}\r\n            >\r\n              {token ? \"My Account\" : \"Log In\"}\r\n            </span>\r\n            <span\r\n              className=\"\"\r\n              style={{\r\n                cursor: \"pointer\",\r\n                fontSize: \"2.0vw\",\r\n                padding: \" 0px 5px\",\r\n              }}\r\n              onClick={() => {\r\n                setCurrentPage(\"SignUp\");\r\n              }}\r\n            >\r\n              {token ? \"\" : \"Sign Up\"}\r\n            </span>\r\n          </div>\r\n        </Box>\r\n        <div>{currentPage}</div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","const serverURL = \"http://localhost:8000\"; //commment this line out for npm run build\r\n//  const serverURL = '' //comment this line out for npm run start\r\n// Warnings\r\n\r\n//get by movie ID\r\nexport async function getWarnings(movieID) {\r\n    try {\r\n        const response = await fetch(\r\n            serverURL + \"/api/warnings?movieID=\" + movieID\r\n        );\r\n        const result = await response.json();\r\n\r\n        return result;\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\n// Search TMDB\r\nexport async function searchTMDB(searchValue) {\r\n    console.log(\"searchvalue\", searchValue);\r\n    let suggestions = [];\r\n    try {\r\n        const response = await fetch(\r\n            serverURL + \"/tmdb/findMovie?searchValue=\" + searchValue,\r\n            {\r\n                method: \"GET\",\r\n            }\r\n        );\r\n        const result = await response.json();\r\n\r\n        if (result.results) {\r\n            result.results.forEach((movie) => {\r\n                console.log(movie)\r\n                if (suggestions.length < 6) {\r\n                    suggestions.push({ release_date: movie.release_date, title: movie.original_title, id: movie.id, poster_path:movie.poster_path });\r\n                }\r\n            });\r\n        }\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n    return suggestions;\r\n}\r\nexport async function getTMDB(tmdb) {\r\n    console.log(tmdb)\r\n    const data = await fetch(serverURL + \"/tmdb/getMovie?tmdb=\" + tmdb)\r\n    const movie = await data.json();\r\n    return movie\r\n}\r\nexport async function getPopular() {\r\n    const data = await fetch(serverURL + \"/tmdb/popularMovies\");\r\n\r\n    const items = await data.json();\r\n    return items.results;\r\n}\r\n\r\nexport async function getAllResource(type) {\r\n    const response = await fetch(serverURL + `/api/${type}`)\r\n    const resource = await response.json();\r\n    return resource\r\n}\r\n\r\nexport async function getOneResourceByID(type, id) {\r\n    const response = await fetch(serverURL + `/api/${type}/${id}`)\r\n    const resource = await response.json();\r\n    return resource\r\n}\r\n\r\nexport async function getUser(userName) {\r\n    const response = await fetch(serverURL + `/api/user/${userName}`)\r\n    const resource = await response.json();\r\n    return resource\r\n}\r\n\r\nexport async function getMovie(tmdbID) {\r\n    const response = await fetch(serverURL + `/api/movie/${tmdbID}`)\r\n    const resource = await response.json();\r\n    return resource\r\n}","import { getMovie } from \"./gets\";\r\n\r\nconst serverURL = \"http://localhost:8000\"; // comment this line for npm run build\r\n// const serverURL = '' // comment this line for npm run start\r\nexport async function createNewWarning(warnings, token) {\r\n  for (let warning of warnings) {\r\n    const headers = new Headers({\r\n      \"Authorization\": `Bearer ${token}`,\r\n      \"Content-Type\": \"application/json\"\r\n    });\r\n    const request = new Request(serverURL+\"/api/warning/create\", {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      body: JSON.stringify({\r\n        warning: {\r\n          userID: warning.userID,\r\n          movieID: warning.movieID,\r\n          categoryID: warning.categoryID,\r\n          frequencyID: warning.frequencyID,\r\n          typeID: warning.typeID,\r\n          severityID: warning.severityID,\r\n          comment:warning.comment\r\n        },\r\n      }),\r\n    });\r\n    fetch(request);\r\n  }\r\n}\r\n\r\nexport async function addResource(type, newResource, token) {\r\n  let data;\r\n  if (type === \"category\") {\r\n    data = JSON.stringify({ title: newResource.title });\r\n  } else {\r\n    data = JSON.stringify({\r\n      title: newResource.title,\r\n      value: newResource.value,\r\n    });\r\n  }\r\n  const headers = new Headers({\r\n    \"Authorization\": `Bearer ${token}`,\r\n    \"Content-Type\": \"application/json\"\r\n  });\r\n  const request = new Request(serverURL+`/api/${type}/create`, {\r\n    method: \"POST\",\r\n    headers: headers,\r\n    body: data,\r\n  });\r\n  fetch(request);\r\n}\r\n\r\nexport async function removeResource(type, newResource, token) {\r\n  let data;\r\n\r\n  data = JSON.stringify({ title: newResource.title });\r\n  const headers = new Headers({\r\n    \"Authorization\": `Bearer ${token}`,\r\n    \"Content-Type\": \"application/json\"\r\n  });\r\n  const request = new Request(serverURL + `/api/${type}/delete`, {\r\n    method: \"POST\",\r\n    headers: headers,\r\n    body: data,\r\n  });\r\n  fetch(request);\r\n}\r\n\r\nexport async function addUser(newUsername, newEmail, newPassword) {\r\n\r\n  let response = await fetch(serverURL + \"/api/user/create\", {\r\n    method: \"post\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      username: newUsername,\r\n      email: newEmail,\r\n      password: newPassword,\r\n    }),\r\n  });\r\n\r\n  let data = await response.json();\r\n  let message = JSON.stringify(data)\r\n\r\n  if (response.status === 200) {\r\n  \r\n    //let data = await response.json()\r\n    return message\r\n  } else {\r\n    //throw new Error(error)\r\n    throw new Error(message)\r\n  } \r\n}\r\n\r\nexport async function removeUser(username, token) {\r\n  try {\r\n    const headers = new Headers({\r\n      \"Authorization\": `Bearer ${token}`,\r\n      \"Content-Type\": \"application/json\"\r\n    });\r\n    const request = new Request(serverURL + `/api/user/delete`, {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      body: JSON.stringify({\r\n        username: username,\r\n      }),\r\n    });\r\n    let response = await fetch(request);\r\n    let data = response.json();\r\n    return data;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n}\r\nexport async function addMovie(tmdbID, movieName) {\r\n  // check if movie is in database already\r\n  try {\r\n    const res = await getMovie(tmdbID);\r\n    return res._id;\r\n  } catch {\r\n    const response = fetch(serverURL + \"/api/movie/create\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ title: movieName, tmdb: tmdbID }),\r\n    });\r\n    const data = await response;\r\n    const addedMovie = await data.json();\r\n\r\n    return addedMovie._id;\r\n  }\r\n}\r\nexport function userLogout(token) {\r\n  fetch(serverURL + \"/api/user/logout\", {\r\n    method: \"post\",\r\n    headers: {\"Content-Type\":\"application/json\", \"Authorization\":\"Bearer \"+token}\r\n  })\r\n}\r\nexport async function userLogin(username, password) {\r\n    \r\n    let response = await fetch(serverURL + \"/api/user/login\", {\r\n        method: \"post\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            username: username,\r\n            password: password,\r\n        }),\r\n    });\r\n    if (response.status === 200) {\r\n        let data = await response.json()\r\n        return data\r\n    } else {\r\n        let error = await response.text()\r\n        throw new Error(error)\r\n    }\r\n        \r\n        \r\n    \r\n\r\n}","import React from \"react\";\r\nimport \"../css/App.css\";\r\nimport { useState } from \"react\";\r\nimport { searchTMDB } from \"../requests/gets\";\r\nimport { addMovie } from \"../requests/posts\";\r\n\r\nexport default function SearchMovie({ setPage, setMovie }) {\r\n   \r\n    const [results, setResults] = useState([]);\r\n\r\n    async function getResults(text) {\r\n        let suggestions = await searchTMDB(text);\r\n        console.log(suggestions)\r\n        setResults(suggestions);\r\n    }\r\n    return (\r\n        <div id=\"notebooks\">\r\n            <input\r\n                id=\"query\"\r\n                type=\"text\"\r\n                onChange={(event) => {\r\n                    getResults(event.target.value);\r\n                }}\r\n                placeholder=\"Search\"\r\n            />\r\n            {results.map((result) => (\r\n                <li key={result.id} onClick={async () => {\r\n                    const id = await addMovie(result.id, result.title)\r\n                    setMovie({ tmdb: result.id, title: result.title, id: id , posterPath:result.poster_path})\r\n                    setPage(\"MovieInfo\")\r\n                }\r\n                }>{result.title} ({result.release_date.split('-')[0]})</li>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../css/App.css\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { getPopular } from \"../requests/gets\";\r\nimport { addMovie } from \"../requests/posts\";\r\n\r\nfunction MovieList({ setMovie, setPage }) {\r\n  useEffect(() => {\r\n    fetchItems();\r\n  }, []);\r\n  // useEffect ==> it only going to run when the component mounts\r\n\r\n  const [items, setItems] = useState([]);\r\n\r\n  const fetchItems = async () => {\r\n    let popularMovies = await getPopular();\r\n    setItems(popularMovies);\r\n  };\r\n  return (\r\n    <Box flexWrap=\"wrap\" display=\"flex\">\r\n      <div className=\"MovList\">\r\n        {items.map((results) => (\r\n          <Box  key={results.title} id=\"BoxStyle\">\r\n            <div>\r\n              <div className=\"container\">\r\n                <div className=\"vertical-center\">\r\n                  <h4>\r\n                    <div onClick={() => setMovie(results.title)}>\r\n                      {results.title}\r\n                    </div>\r\n                  </h4>\r\n                </div>\r\n              </div>\r\n              <img\r\n                onClick={async () => {\r\n                  const id = await addMovie(results.id, results.title);\r\n                  setMovie({ tmdb: results.id, title: results.title, id: id, posterPath:results.poster_path })\r\n                  setPage(\"MovieInfo\");\r\n                }}\r\n                src={\r\n                  \" https://image.tmdb.org/t/p/w220_and_h330_face\" +\r\n                  results.poster_path\r\n                }\r\n                alt=\"no \"\r\n              />\r\n            </div>\r\n          </Box>\r\n        ))}\r\n      </div>\r\n      <div onClick={()=> {\r\n        setPage('Admin')\r\n      }}>Admin</div>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default MovieList;\r\n","import React from \"react\";\r\n\r\nexport default function Comments({\r\n  setShowComments,\r\n  warnings,\r\n  commentCategory,\r\n}) {\r\n  console.log(warnings);\r\n  return (\r\n    <div\r\n      style={{\r\n              position: \"absolute\",\r\n       overflowY:\"auto\",\r\n        zIndex: \"2\",\r\n        backgroundColor: \"#002b36\",\r\n        width: \"60%\",\r\n        left: \"20%\",\r\n        top: \"30%\",\r\n        height: \"40%\",\r\n        borderWidth: \"3px\",\r\n        borderStyle: \"solid\",\r\n        borderColor: \"mauve\",\r\n        borderRadius: \"8px\",\r\n      }}\r\n    >\r\n      <div\r\n        onClick={() => {\r\n          setShowComments(false);\r\n        }}\r\n        style={{\r\n          float: \"right\",\r\n          margin: \"4px 5px\",\r\n          width: \"max-content\",\r\n          position: \"relative\",\r\n          fontSize: \"large\",\r\n          color: \"white\",\r\n          fontWeight: \"700\",\r\n          cursor: \"pointer\",\r\n        }}\r\n      >\r\n        X\r\n      </div>\r\n          <h2 style={{ margin: \"10px\" }}>Comments on {commentCategory}</h2>\r\n          <div>\r\n      <ul style={{maxHeight: \"65%\"}}>\r\n        \r\n          {warnings\r\n            .filter((warning) => {\r\n              return warning.category === commentCategory;\r\n            })\r\n            .map((warning) => {\r\n                return <li> {warning.comment}</li>;\r\n            })}\r\n        \r\n              </ul>\r\n              </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../css/App.css\";\r\nimport { getWarnings, getTMDB } from \"../requests/gets\";\r\nimport Comments from \"./Comments\";\r\nimport { getAllResource } from \"../requests/gets\";\r\nfunction average(nums) {\r\n  return nums.reduce((a, b) => a + b) / nums.length;\r\n}\r\nexport default function ViewMovieInfo({\r\n  setCurrentPage,\r\n  tmdb,\r\n  movieID,\r\n  movieTitle,\r\n  posterPath\r\n}) {\r\n  const [warnings, setWarnings] = useState([]);\r\n  const [warningModelData, setWarningModelData] = useState();\r\n  const [movieDesc, setMovieDesc] = useState();\r\n  const [showComments, setShowComments] = useState(false);\r\n  const [commentCategory, setCommentCategory] = useState(\"\");\r\n\r\n  const findInfoFromID = (type, id, attr) => {\r\n    for (let item of warningModelData[type]) {\r\n      if (item._id === id) {\r\n        return item[attr];\r\n      }\r\n    }\r\n  };\r\n  // Get all categories,freq,etc from database\r\n  const getWarningModelData = async () => {\r\n    const categories = await getAllResource(\"categories\");\r\n    const frequencies = await getAllResource(\"frequencies\");\r\n    const types = await getAllResource(\"types\");\r\n    const severities = await getAllResource(\"severities\");\r\n    setWarningModelData({\r\n      categories: categories,\r\n      frequencies: frequencies,\r\n      types: types,\r\n      severities: severities,\r\n    });\r\n  };\r\n\r\n  //    const category = findInfoFromID('categories', warning.categoryID, 'title')\r\n\r\n  useEffect(() => {\r\n    const getDescription = async () => {\r\n      const desc = await getTMDB(tmdb);\r\n      setMovieDesc(desc.overview);\r\n    };\r\n    const getWarningData = async () => {\r\n      const warningData = await getWarnings(movieID);\r\n      setWarnings(warningData);\r\n    };\r\n    const getData = async () => {\r\n      await getWarningData();\r\n      await getWarningModelData();\r\n      await getDescription();\r\n    };\r\n    getData();\r\n  }, [movieID, tmdb]);\r\n\r\n  if (!warningModelData) {\r\n    return <h1>Loading...</h1>;\r\n  }\r\n  // lookup table of sorts, to convert a value into a title\r\n  // possibly change to just be a function\r\n  const warningLabelsfromValues = {\r\n    frequencies: {},\r\n    types: {},\r\n    severities: {},\r\n  };\r\n  warningModelData.frequencies.forEach((frequency) => {\r\n    warningLabelsfromValues.frequencies[frequency.value] = frequency.title;\r\n  });\r\n  warningModelData.types.forEach((type) => {\r\n    warningLabelsfromValues.types[type.value] = type.title;\r\n  });\r\n  warningModelData.severities.forEach((severity) => {\r\n    warningLabelsfromValues.severities[severity.value] = severity.title;\r\n  });\r\n  const warningTotals = {};\r\n\r\n  /* Will create an object with all of the warnings accumulated together: eg:\r\n  {violence: {frequencies: [1,1,2,3,2], sev: [1,2,4,5,2], type: [1,2,3,4,5]},\r\n  blood: etc.....}\r\n  */\r\n\r\n  warnings.forEach((warning) => {\r\n    const freq = findInfoFromID(\"frequencies\", warning.frequencyID, \"value\");\r\n    const sev = findInfoFromID(\"severities\", warning.severityID, \"value\");\r\n    const type = findInfoFromID(\"types\", warning.typeID, \"value\");\r\n    \r\n    if (Object.keys(warningTotals).includes(warning.categoryID)) {\r\n      warningTotals[warning.categoryID][\"frequencies\"].push(freq);\r\n      warningTotals[warning.categoryID][\"severities\"].push(sev);\r\n      warningTotals[warning.categoryID][\"types\"].push(type);\r\n    } else {\r\n      warningTotals[warning.categoryID] = {\r\n        frequencies: [freq],\r\n        severities: [sev],\r\n        types: [type],\r\n      };\r\n    }\r\n    if (warning.comment) {\r\n      warningTotals[warning.categoryID].hasComments = true\r\n    }\r\n  });\r\n  /*turning those lists of freq,types,sevs into a single number from the average */\r\n  const warningAverages = [];\r\n  Object.keys(warningTotals).forEach((category) => {\r\n    warningAverages.push({\r\n      hasComments: warningTotals[category].hasComments? true : false,\r\n      category: findInfoFromID(\"categories\", category, \"title\"),\r\n      frequency: Math.round(average(warningTotals[category].frequencies)),\r\n      type: Math.round(average(warningTotals[category].types)),\r\n      severity: Math.round(average(warningTotals[category].severities)),\r\n    });\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {showComments ? (\r\n        <Comments\r\n          warnings={warnings.map((warning) => {\r\n            return {\r\n              category: findInfoFromID(\r\n                \"categories\",\r\n                warning.categoryID,\r\n                \"title\"\r\n              ),\r\n              comment: warning.comment,\r\n            };\r\n          })}\r\n          commentCategory={commentCategory}\r\n          setShowComments={setShowComments}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      <div className=\"collapsible-tables pageContainer threeQuartersPageContainer\">\r\n        <h2>{movieTitle}</h2>\r\n        <div\r\n          style={{ display:\"flex\", flexWrap:\"wrap\", alignItems:\"center\", right: \"60%\", top: \"20%\", marginBottom: \"10px\" }}\r\n          id=\"movieDesc\"\r\n        >\r\n           \r\n          <div style={{maxWidth:\"600px\", minWidth:\"200px\"}}>{movieDesc}</div>\r\n          <img className=\"movieImage\" style={{width:\"220px\"}}\r\n                \r\n                src={\r\n                  \" https://image.tmdb.org/t/p/w220_and_h330_face\" +\r\n                  posterPath\r\n                }\r\n                alt=\"no \"\r\n              />\r\n        </div>\r\n        <div>\r\n        \r\n          {warningAverages.length !== 0 ? (\r\n            <div>\r\n              <h3>Warnings:</h3>\r\n              <table border=\"2\" style={{ borderColor: \"#002b36\" }}>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Category</th>\r\n                    <th>Severity</th>\r\n                    <th>Frequency</th>\r\n                    <th>Type</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {warningAverages.map((warning) => (\r\n                    <tr key={warningAverages.indexOf(warning)}>\r\n                      <td\r\n                        \r\n                        data-title=\"Category\"\r\n                      ><div style={{display: \"flex\",\r\n                        justifyContent: \"space-between\"}}>\r\n                        {warning.category}\r\n                        {warning.hasComments ?\r\n                          <button\r\n                            className=\"btn btn-sm btn-danger\"\r\n                            style={{\r\n                              margin: \"2px 0\",\r\n                              display: \"flex\",\r\n                              justifyContent: \"right\",\r\n                            }}\r\n                            onClick={() => {\r\n                              setCommentCategory(warning.category);\r\n                              setShowComments(true);\r\n                            }}\r\n                          >\r\n                              comments\r\n                        </button> : <></>}\r\n                        </div>\r\n                      </td>\r\n                      <td data-title=\"Severity\">\r\n                        {warningLabelsfromValues.severities[warning.severity]}\r\n                      </td>\r\n                      <td data-title=\"Frequency\">\r\n                        {warningLabelsfromValues.frequencies[warning.frequency]}\r\n                      </td>\r\n                      <td data-title=\"Type\">\r\n                        {warningLabelsfromValues.types[warning.type]}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <h2 style={{marginTop:\"30px\"}}>Be the first to add a warning!!</h2>\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n      </div>\r\n\r\n      <div className=\"pageContainer warningPageContainer-Bottom\">\r\n        {window.sessionStorage.getItem(\"token\") ? (\r\n          <button\r\n            className=\"btn btn-success\"\r\n            onClick={() => {\r\n              setCurrentPage(\"AddWarning\");\r\n            }}\r\n          >\r\n            Add warning\r\n          </button>\r\n        ) : (\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            onClick={() => {\r\n              setCurrentPage(\"SignIn\");\r\n            }}\r\n          >\r\n            Log In To Contribute\r\n          </button>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../css/App.css\";\r\nimport { getAllResource } from \"../requests/gets\";\r\nimport { createNewWarning } from \"../requests/posts\";\r\n\r\n// Example of an adding warning using different categories\r\n\r\nexport default function AddWarning({\r\n    setCurrentPage,\r\n    movieID,\r\n    movieTitle,\r\n}) {\r\n    const findValueFromID = (type, id) => {\r\n        console.log(\"type\", type, \"id\", id);\r\n        for (let item of pageData[type]) {\r\n            if (item._id === id) {\r\n                return item.title;\r\n            }\r\n        }\r\n    };\r\n\r\n    const getPageData = async () => {\r\n        const categories = await getAllResource(\"categories\");\r\n        const frequencies = await getAllResource(\"frequencies\");\r\n        const types = await getAllResource(\"types\");\r\n        const severities = await getAllResource(\"severities\");\r\n        setPageData({\r\n            categories: categories,\r\n            frequencies: frequencies,\r\n            types: types,\r\n            severities: severities,\r\n        });\r\n    };\r\n    const [unchosenError, setUnchosenError] = useState(false);\r\n    const [pageData, setPageData] = useState();\r\n    const [warnings, setWarnings] = useState([]);\r\n    const [category, setCategory] = useState(\"\");\r\n    const [frequency, setFrequency] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n    const [severity, setSeverity] = useState(\"\");\r\n    const [comment, setComment] = useState(\"\");\r\n    useEffect(() => {\r\n        const getData = async () => {\r\n            await getPageData();\r\n        };\r\n        getData();\r\n    }, []);\r\n    if (!pageData) {\r\n        return <div>Loading...</div>;\r\n    }\r\n    return (\r\n        <div className=\"pageContainer fullPageContainer\">\r\n            <div><h2>Add a warning to {movieTitle}</h2></div>\r\n            <br></br>\r\n            <div className=\"ptther\">\r\n                <select\r\n                    className=\"add-warning-dropdown\"\r\n                    onChange={(event) => {\r\n                        setCategory(event.target.value);\r\n                    }}\r\n                >\r\n                    <option>Choose a category</option>\r\n                    {pageData.categories.map((category) => (\r\n                        <option key={category._id} value={category._id}>\r\n                            {category.title}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n                <select\r\n                    className=\"add-warning-dropdown\"\r\n                    onChange={(event) => {\r\n                        setFrequency(event.target.value);\r\n                    }}\r\n                >\r\n                    <option>Choose a frequency</option>\r\n                    {pageData.frequencies.map((frequency) => (\r\n                        <option key={frequency._id} value={frequency._id}>\r\n                            {frequency.title}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n\r\n                <select\r\n                    className=\"add-warning-dropdown\"\r\n                    onChange={(event) => {\r\n                        setType(event.target.value);\r\n                    }}\r\n                >\r\n                    <option>Choose a Type</option>\r\n                    {pageData.types.map((type) => (\r\n                        <option key={type._id} value={type._id}>\r\n                            {type.title}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n\r\n                <select\r\n                    className=\"add-warning-dropdown\"\r\n                    onChange={(event) => {\r\n                        setSeverity(event.target.value);\r\n                    }}\r\n                >\r\n                    <option>Choose a Severity</option>\r\n                    {pageData.severities.map((severity) => (\r\n                        <option key={severity._id} value={severity._id}>\r\n                            {severity.title}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n                \r\n                <textarea\r\n                    id=\"commentBox\"\r\n                    placeholder=\"Additional comments\"\r\n                    onChange={(event) => {\r\n                        setComment(event.target.value);\r\n                    }}\r\n                />\r\n\r\n                <br />\r\n\r\n                <button className=\"btn btn-success\"\r\n                    onClick={() => {\r\n                        if (category && frequency && type && severity) {\r\n                            setUnchosenError(false);\r\n                            setWarnings(\r\n                                warnings.concat([\r\n                                    {\r\n                                        movieID: movieID,\r\n                                        categoryID: category,\r\n                                        frequencyID: frequency,\r\n                                        typeID: type,\r\n                                        severityID: severity,\r\n                                        comment: comment,\r\n                                    },\r\n                                ])\r\n                            );\r\n                        } else {\r\n                            setUnchosenError(true);\r\n                        }\r\n                    }}\r\n                >\r\n                    Add this warning\r\n                </button>\r\n            </div>\r\n            {unchosenError ? (\r\n                <div style={{ color: \"red\" }}>\r\n                    Please choose a value from each dropdown\r\n                </div>\r\n            ) : null}\r\n\r\n            <br />\r\n            <div className=\"part\">\r\n                <button className = \"btn btn-warning\"\r\n                    onClick={() => {\r\n                        createNewWarning(warnings, window.sessionStorage.getItem('token'));\r\n                        setCurrentPage(\"Thanks\");\r\n                    }}\r\n                >\r\n                    Send All Warnings\r\n                </button>\r\n            </div>\r\n            <br />\r\n            <div className=\"collapsible-tables\">\r\n                <table className=\"center\" border=\"2\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Category</th>\r\n                            <th>Frequency</th>\r\n                            <th>Type</th>\r\n                            <th>Severity</th>\r\n                            <th>Comment</th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    {warnings.length > 0 ? (\r\n                        <tbody>\r\n                            {warnings.map((item) => (\r\n                                <tr key={\"row\" + warnings.indexOf(item)}>\r\n                                    <td\r\n                                        data-title=\"Category\"\r\n                                        key={\"c\" + warnings.indexOf(item)}\r\n                                    >\r\n                                        {findValueFromID(\r\n                                            \"categories\",\r\n                                            item.categoryID\r\n                                        )}\r\n                                    </td>\r\n                                    <td\r\n                                        data-title=\"Frequency\"\r\n                                        key={\"f\" + warnings.indexOf(item)}\r\n                                    >\r\n                                        {findValueFromID(\r\n                                            \"frequencies\",\r\n                                            item.frequencyID\r\n                                        )}\r\n                                    </td>\r\n                                    <td\r\n                                        data-title=\"Type\"\r\n                                        key={\"t\" + warnings.indexOf(item)}\r\n                                    >\r\n                                        {findValueFromID(\"types\", item.typeID)}\r\n                                    </td>\r\n                                    <td\r\n                                        data-title=\"Severity\"\r\n                                        key={\"s\" + warnings.indexOf(item)}\r\n                                    >\r\n                                        {findValueFromID(\r\n                                            \"severities\",\r\n                                            item.severityID\r\n                                        )}\r\n                                    </td>\r\n                                    <td\r\n                                        data-title=\"Comment\"\r\n                                        key={\"co\" + warnings.indexOf(item)}\r\n                                    >\r\n                                        {item.comment}\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    ) : null}\r\n                </table>\r\n\r\n                <br></br>\r\n                <br></br>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"../css/App.css\";\r\nimport {Button, Card, CardBody, CardGroup, Col, Container, Form, Input, InputGroup, Row} from \"reactstrap\";\r\nimport { userLogin } from \"../requests/posts\";\r\nexport default function Login({setCurrentPage}) {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [loginFail, setLoginFail]= useState(false)\r\n  const changeUsername = (username) => {\r\n    setUsername(username);\r\n  }\r\n  const changePassword = (password) => {\r\n    setPassword(password);\r\n  }\r\n  const login = async ()=> {\r\n      // debugger;\r\n      try {\r\n          let response = await userLogin(username, password)\r\n          if (response.token) {\r\n              window.sessionStorage.setItem(\"token\", response.token)\r\n              \r\n          }\r\n          setCurrentPage('Navigation')\r\n      } catch (error) {\r\n          setLoginFail(error.message)\r\n      }\r\n  }\r\n\r\n \r\n    return (\r\n      <div className=\"app flex-row align-items-center\">\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col md=\"9\" lg=\"7\" xl=\"6\">\r\n              <CardGroup>\r\n                <Card className=\"p-2\">\r\n                  <CardBody>\r\n                    <Form>\r\n                      \r\n                      <div\r\n                        className=\"totheRight\"\r\n                        style={{  }}\r\n                      >\r\n                        <InputGroup className=\"mb-3\">\r\n                          <Input\r\n                            type=\"text\"\r\n                            onChange={(e)=>{changeUsername(e.target.value)}}\r\n                            placeholder=\"Enter Email\"\r\n                          />\r\n                        </InputGroup>\r\n                        <InputGroup className=\"mb-4\">\r\n                          <Input\r\n                            type=\"password\"\r\n                            onChange={(e)=>{changePassword(e.target.value)}}\r\n                            placeholder=\"Enter Password\"\r\n                                                /><br /><br />\r\n                                                {loginFail ? <span style={{ color: \"red\" }}>{loginFail}</span> : <span></span>}\r\n                        </InputGroup>\r\n                        <Button onClick={login} color=\"success\" block>\r\n                          Login\r\n                        </Button>\r\n                      </div>\r\n                    </Form>\r\n                    <br />\r\n                    <button className=\"btn btn-warning\" onClick={()=>{setCurrentPage('SignUp')}}>Create an Account</button>\r\n                    \r\n                  </CardBody>\r\n                </Card>\r\n              </CardGroup>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n","import React, { useState } from \"react\";\r\nimport \"../css/App.css\";\r\nimport {Button, Card, CardBody, CardGroup, Col, Container, Form, Input, InputGroup, Row} from \"reactstrap\";\r\nimport { addUser } from \"../requests/posts\";\r\n\r\nexport default function SignUp({setCurrentPage}) {\r\n\r\n  const [username, setUsername] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [registerFail, setRegisterFail]= useState(false)\r\n\r\n  const changeUsername = (username) => {\r\n    setUsername( username );\r\n  }\r\n  const changeEmail = (email) => {\r\n    setEmail( email );\r\n  }\r\n  const changePassword = (password) => {\r\n    setPassword( password );\r\n  }\r\n\r\n  const register = async () => {\r\n    \r\n    // debugger;\r\n    try {\r\n      let response = await addUser(username, email, password)\r\n      setCurrentPage('SignIn')\r\n    } catch (error) {\r\n      let errMsg = JSON.parse(error.message).message\r\n      setRegisterFail(errMsg)\r\n    }\r\n  }\r\n\r\n\r\n    return (\r\n      <div className=\"app flex-row align-items-center\">\r\n          <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col md=\"9\" lg=\"7\" xl=\"6\">\r\n              <CardGroup>\r\n                <Card className=\"p-2\">\r\n                  <CardBody>\r\n                    <Form>\r\n                      \r\n                      <div\r\n                        className=\"totheRight\"\r\n                        style={{  }}\r\n                      >\r\n                        <InputGroup className=\"mb-3\">\r\n                          <Input\r\n                            type=\"text\"\r\n                            onChange={(e)=>{changeUsername(e.target.value)}}\r\n                            placeholder=\"Enter username\"\r\n                          />\r\n                        </InputGroup>\r\n                        <InputGroup className=\"mb-3\">\r\n                          <Input\r\n                            type=\"text\"\r\n                            onChange={(e)=>{changeEmail(e.target.value)}}\r\n                            placeholder=\"Enter email\"\r\n                          />\r\n                        </InputGroup>\r\n                        <InputGroup className=\"mb-4\">\r\n                          <Input\r\n                            type=\"password\"\r\n                            onChange={(e)=>{changePassword(e.target.value)}}\r\n                            placeholder=\"Enter password\"\r\n                          />\r\n                          <br /><br />\r\n                        </InputGroup>\r\n                        {registerFail ? <div style={{ color: \"red\", fontSize: \"1.5em\", fontStyle: \"italic\" }}>{registerFail}<br /><br /></div> : <div></div>}\r\n                        \r\n                        <Button onClick={register} color=\"success\" block>\r\n                          Create account\r\n                        </Button>\r\n                      </div>\r\n                    </Form>\r\n                    <br />\r\n                  </CardBody>\r\n                </Card>\r\n              </CardGroup>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n  ","import React, { useEffect } from \"react\";\r\nimport \"../css/App.css\";\r\n\r\nexport default function Thanks({ setCurrentPage }) {\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setCurrentPage(\"Navigation\");\r\n        }, 2000);\r\n    });\r\n    return <div><h1>Thank you for your contribution</h1></div>;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { addResource, removeResource, removeUser } from \"../requests/posts\";\r\nimport { getAllResource } from \"../requests/gets\";\r\n\r\nexport default () => {\r\n  const [adminType, setAdminType] = useState(\r\n    \"Category\",\r\n    \"Frequency\",\r\n    \"Type\",\r\n    \"Severity\"\r\n  );\r\n  let pageToShow;\r\n  const token = window.sessionStorage.getItem('token')\r\n  if (adminType === \"Category\") {\r\n    pageToShow = <Category token={token}/>;\r\n  } else if (adminType === \"Frequency\") {\r\n    pageToShow = <Frequency token={token}/>;\r\n  } else if (adminType === \"Type\") {\r\n    pageToShow = <Type token={token}/>;\r\n  } else if (adminType === \"Severity\") {\r\n    pageToShow = <Severity token={token}/>;\r\n  } else {\r\n    pageToShow = <User token={token} />;\r\n  }\r\n  return (\r\n    <div>\r\n      <select\r\n        onChange={(e) => {\r\n          setAdminType(e.target.value);\r\n        }}\r\n      >\r\n        <option>Category</option>\r\n        <option>Frequency</option>\r\n        <option>Type</option>\r\n        <option>Severity</option>\r\n        <option>User</option>\r\n      </select>\r\n      {pageToShow}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Category = ({ token }) => {\r\n  const [categories, setCategories] = useState();\r\n  const [newCategory, setNewCategory] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      await getPageData();\r\n    };\r\n    getData();\r\n  }, []);\r\n\r\n  const getPageData = async () => {\r\n    const currentCategories = await getAllResource(\"categories\");\r\n    setCategories(currentCategories);\r\n  };\r\n\r\n  const createNewCategory = async () => {\r\n    setLoading(true);\r\n    await addResource(\"category\", { title: newCategory }, token);\r\n    setTimeout(() => {\r\n      getPageData();\r\n      setLoading(false);\r\n    }, 2000);\r\n  };\r\n\r\n  const deleteCategory = async (deleteTitle) => {\r\n    setLoading(true);\r\n    await removeResource(\"category\", { title: deleteTitle }, token);\r\n    setTimeout(() => {\r\n      getPageData();\r\n      setLoading(false);\r\n    }, 2000);\r\n  };\r\n  if (loading) {\r\n    return (\r\n      <img alt=\"loading\" src=\"https://gifimage.net/wp-content/uploads/2017/08/spinner-gif-13.gif\" />\r\n    );\r\n  }\r\n  if (!categories) {\r\n    return <h1>Loading, please wait....</h1>;\r\n  }\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <ul>\r\n        <div className=\"adminList\">\r\n          {categories.map((category) => (\r\n            <li>\r\n              {category.title}{\" \"}\r\n              <button\r\n                onClick={() => deleteCategory(category.title)}\r\n                className=\"deletebtn\"\r\n              >\r\n                {\" \"}\r\n                Remove{\" \"}\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </div>\r\n      </ul>\r\n      <div className=\"adminSubmit\">\r\n        <h1>Category</h1>\r\n        <h2>Add</h2>\r\n        <input\r\n          onChange={(e) => {\r\n            setNewCategory(e.target.value);\r\n          }}\r\n          placeholder=\"New Category Title\"\r\n        />\r\n        <button onClick={createNewCategory} className=\"submitbtn\">\r\n          Submit\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Adding Frequencies\r\n\r\nconst Frequency = ({ token }) => {\r\n  const [frequencies, setFrequencies] = useState();\r\n  const [newFrequency, setNewFrequency] = useState();\r\n  const [newValue, setNewValue] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      await getPageData();\r\n    };\r\n    getData();\r\n  }, []);\r\n\r\n  const getPageData = async () => {\r\n    const currentFrequencies = await getAllResource(\"frequencies\");\r\n    setFrequencies(currentFrequencies);\r\n  };\r\n\r\n  const createNewFrequency = async () => {\r\n    setLoading(true);\r\n    await addResource(\"frequency\", { title: newFrequency, value: newValue },token);\r\n    setTimeout(() => {\r\n      getPageData();\r\n      setLoading(false);\r\n    }, 2000);\r\n  };\r\n\r\n  const deleteFrequency = async (deleteTitle) => {\r\n    setLoading(true);\r\n    await removeResource(\"frequency\", { title: deleteTitle }, token);\r\n    setTimeout(() => {\r\n      getPageData();\r\n      setLoading(false);\r\n    }, 2000);\r\n  };\r\n  if (loading) {\r\n    return (\r\n      <img alt=\"loading\" src=\"https://gifimage.net/wp-content/uploads/2017/08/spinner-gif-13.gif\" />\r\n    );\r\n  }\r\n  if (!frequencies) {\r\n    return <h1>Loading, please wait....</h1>;\r\n  }\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <ul>\r\n        <div className=\"adminList\">\r\n          {frequencies.map((frequency) => (\r\n            <li>\r\n              {frequency.title}{\" \"}\r\n              <button\r\n                onClick={() => deleteFrequency(frequency.title)}\r\n                className=\"deletebtn\"\r\n              >\r\n                {\" \"}\r\n                Remove{\" \"}\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </div>\r\n      </ul>\r\n      <div className=\"adminSubmit\">\r\n        <h1>Frequency</h1>\r\n        <h2>Add</h2>\r\n        <input\r\n          onChange={(e) => {\r\n            setNewFrequency(e.target.value);\r\n          }}\r\n          placeholder=\"New Frequency Title\"\r\n        />\r\n        <input\r\n          onChange={(e) => {\r\n            setNewValue(e.target.value);\r\n          }}\r\n          placeholder=\"New Frequency Value\"\r\n        />\r\n\r\n        <button onClick={createNewFrequency} className=\"submitbtn\">\r\n          Submit\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Adding Type\r\n\r\nconst Type = ({token}) => {\r\n  const [types, setTypes] = useState();\r\n  const [newType, setNewType] = useState();\r\n  const [newValue, setNewValue] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      await getPageData();\r\n    };\r\n    getData();\r\n  }, []);\r\n\r\n  const getPageData = async () => {\r\n    const currentTypes = await getAllResource(\"types\");\r\n    setTypes(currentTypes);\r\n  };\r\n\r\n  const createNewType = async () => {\r\n    setLoading(true);\r\n    await addResource(\"type\", { title: newType, value: newValue },token);\r\n    setTimeout(() => {\r\n      getPageData();\r\n      setLoading(false);\r\n    }, 2000);\r\n  };\r\n\r\n  const deleteType = async (deleteTitle) => {\r\n    setLoading(true);\r\n    await removeResource(\"type\", { title: deleteTitle }, token);\r\n    setTimeout(() => {\r\n      getPageData();\r\n      setLoading(false);\r\n    }, 2000);\r\n  };\r\n  if (loading) {\r\n    return (\r\n      <img alt=\"loading\" src=\"https://gifimage.net/wp-content/uploads/2017/08/spinner-gif-13.gif\" />\r\n    );\r\n  }\r\n  if (!types) {\r\n    return <h1>Loading, please wait....</h1>;\r\n  }\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <ul>\r\n        <div className=\"adminList\">\r\n          {types.map((type) => (\r\n            <li>\r\n              {type.title}{\" \"}\r\n              <button\r\n                onClick={() => deleteType(type.title)}\r\n                className=\"deletebtn\"\r\n              >\r\n                {\" \"}\r\n                Remove{\" \"}\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </div>\r\n      </ul>\r\n      <div className=\"adminSubmit\">\r\n        <h1>Type</h1>\r\n        <h2>Add</h2>\r\n        <input\r\n          onChange={(e) => {\r\n            setNewType(e.target.value);\r\n          }}\r\n          placeholder=\"New Type Title\"\r\n        />\r\n        <input\r\n          onChange={(e) => {\r\n            setNewValue(e.target.value);\r\n          }}\r\n          placeholder=\"New Type Value\"\r\n        />\r\n\r\n        <button onClick={createNewType} className=\"submitbtn\">\r\n          Submit\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Adding Severity\r\nconst User = ({ token }) => {\r\n  const [selectedUser, setSelectedUser] = useState();\r\n  const [deleted, setDeleted] = useState();\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        placeholder=\"username\"\r\n        onChange={(e) => {\r\n          setSelectedUser(e.target.value);\r\n        }}\r\n      />\r\n      <button\r\n        onClick={async () => {\r\n          try {\r\n            let response = await removeUser(selectedUser);\r\n            if (response.deletedCount) {\r\n              setDeleted(`Successful deletion of ${selectedUser}`);\r\n            } else {\r\n              setDeleted(\r\n                \"Sorry, could not find user, check the name\"\r\n                \r\n              );\r\n            }\r\n          } catch (e) {\r\n            setDeleted(e)\r\n          }\r\n        }}\r\n        className=\"btn btn-danger\"\r\n      >\r\n        Delete\r\n      </button>\r\n      <div>{deleted}</div>\r\n    </div>\r\n  );\r\n};\r\nconst Severity = ({ token }) => {\r\n  const [severities, setSeverities] = useState();\r\n  const [newSeverity, setNewSeverity] = useState();\r\n  const [newValue, setNewValue] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      await getPageData();\r\n    };\r\n    getData();\r\n  }, []);\r\n\r\n  const getPageData = async () => {\r\n    const currentSeverities = await getAllResource(\"severities\");\r\n    setSeverities(currentSeverities);\r\n  };\r\n\r\n  const createNewSeverity = async () => {\r\n    setLoading(true);\r\n    await addResource(\"severity\", { title: newSeverity, value: newValue }, token);\r\n    setTimeout(() => {\r\n      getPageData();\r\n      setLoading(false);\r\n    }, 2000);\r\n  };\r\n\r\n  const deleteSeverity = async (deleteTitle) => {\r\n    setLoading(true);\r\n    await removeResource(\"severity\", { title: deleteTitle }, token);\r\n    setTimeout(() => {\r\n      getPageData();\r\n      setLoading(false);\r\n    }, 2000);\r\n  };\r\n  if (loading) {\r\n    return (\r\n      <img alt=\"loading\" src=\"https://gifimage.net/wp-content/uploads/2017/08/spinner-gif-13.gif\" />\r\n    );\r\n  }\r\n  if (!severities) {\r\n    return <h1>Loading, please wait....</h1>;\r\n  }\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <ul>\r\n        <div className=\"adminList\">\r\n          {severities.map((severity) => (\r\n            <li>\r\n              {severity.title}{\" \"}\r\n              <button\r\n                onClick={() => deleteSeverity(severity.title)}\r\n                className=\"deletebtn\"\r\n              >\r\n                {\" \"}\r\n                Remove{\" \"}\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </div>\r\n      </ul>\r\n      <div className=\"adminSubmit\">\r\n        <h1>Severity</h1>\r\n        <h2>Add</h2>\r\n        <input\r\n          onChange={(e) => {\r\n            setNewSeverity(e.target.value);\r\n          }}\r\n          placeholder=\"New Severity Title\"\r\n        />\r\n        <input\r\n          onChange={(e) => {\r\n            setNewValue(e.target.value);\r\n          }}\r\n          placeholder=\"New Severity Value\"\r\n        />\r\n\r\n        <button onClick={createNewSeverity} className=\"submitbtn\">\r\n          Submit\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport \"../css/App.css\";\r\nimport { Button, Card, CardBody, CardGroup, Col, Container, Form, Input, InputGroup, Row} from \"reactstrap\";\r\nimport { UncontrolledAlert } from 'reactstrap';\r\nimport { updateUser } from \"../requests/posts\";\r\n\r\n\r\nexport default function UserProfile({setCurrentPage}) {\r\n\r\n  const [username, setUsername] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [updateFail, setUpdateFail]= useState(false)\r\n\r\n\r\n  // is the user logged in?\r\n  //if (window.sessionStorage.getItem('token')) {\r\n  if (!window.sessionStorage.getItem('token')) {\r\n    console.log('user IS NOT logged in')\r\n    return (\r\n      <div style={{ width: \"40%\", margin: \"auto\" }}>\r\n      <UncontrolledAlert color=\"danger\">\r\n        You must be logged in to change your User Profile\r\n      </UncontrolledAlert>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\n  const changeUsername = (username) => {\r\n    setUsername( username );\r\n  }\r\n  const changeEmail = (email) => {\r\n    setEmail( email );\r\n  }\r\n  const changePassword = (password) => {\r\n    setPassword( password );\r\n  }\r\n\r\n  const changeUser = async () => {\r\n    console.log('in changeUser')\r\n    // debugger;\r\n    try {\r\n      console.log('calling updateUser')\r\n      // let response = await updateUser(username, email, password)\r\n      setCurrentPage('Navigation')\r\n    } catch (error) {\r\n      let errMsg = JSON.parse(error.message).message\r\n      setUpdateFail(errMsg)\r\n    }\r\n  }\r\n\r\n\r\n    return (\r\n      <div className=\"app flex-row align-items-center\">\r\n        \r\n          <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col md=\"9\" lg=\"7\" xl=\"6\">\r\n              <CardGroup>\r\n                <Card className=\"p-2\">\r\n                  <CardBody>\r\n                    <Form>\r\n                      <div\r\n                        className=\"totheRight\"\r\n                        style={{  }}\r\n                      >\r\n                        <InputGroup className=\"mb-3\">\r\n                          <Input\r\n                            type=\"text\"\r\n                            onChange={(e)=>{changeUsername(e.target.value)}}\r\n                            placeholder=\"Enter username\"\r\n                          />\r\n                        </InputGroup>\r\n                        <InputGroup className=\"mb-3\">\r\n                          <Input\r\n                            type=\"text\"\r\n                            onChange={(e)=>{changeEmail(e.target.value)}}\r\n                            placeholder=\"Enter new email\"\r\n                          />\r\n                        </InputGroup>\r\n                        <InputGroup className=\"mb-4\">\r\n                          <Input\r\n                            type=\"password\"\r\n                            onChange={(e)=>{changePassword(e.target.value)}}\r\n                            placeholder=\"Enter new password\"\r\n                          />\r\n                          <br /><br />\r\n                        </InputGroup>\r\n                        {updateFail ? <div style={{ color: \"red\", fontSize: \"1.5em\", fontStyle: \"italic\" }}>{updateFail}<br /><br /></div> : <div></div>}\r\n                        \r\n                        <Button disabled=\"true\" onClick={changeUser} color=\"success\" block>\r\n                          Update account\r\n                        </Button>\r\n                        <Button disabled=\"true\" onClick={() => {setCurrentPage('Admin');}} color=\"success\" block>\r\n                          Admin\r\n                        </Button>\r\n                      </div>\r\n                    </Form>\r\n                    <br />\r\n                  </CardBody>\r\n                </Card>\r\n              </CardGroup>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n  ","import React, { useState } from \"react\";\r\nimport \"./css/App.css\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport SearchBar from \"./components/SearchMovie\";\r\nimport Movielist from \"./components/Movielist\";\r\nimport ViewMovieInfo from \"./components/MovieInfo\";\r\nimport AddWarning from \"./components/AddWarning\";\r\nimport Login from \"./components/Login\";\r\nimport SignUp from \"./components/SignUp\";\r\nimport Thanks from \"./components/Thanks\";\r\nimport Admin from './components/Admin'\r\nimport UserProfile from './components/UserProfile'\r\nexport default function App() {\r\n    let [currentPage, setCurrentPage] = useState(\"Navigation\");\r\n    let [selectedMovie, setSelectedMovie] = useState({title: 'The Lion King', id:'5fc1e881f7d9654d5c99ad9d', tmdb:\"\"});\r\n    const Home = () => {\r\n        console.log(selectedMovie.length);\r\n\r\n        switch (currentPage) {\r\n            case \"Thanks\":\r\n                return (\r\n                    <>\r\n                        <Thanks setCurrentPage={setCurrentPage} />\r\n                    </>\r\n                );\r\n            case \"Unused\":\r\n                return (\r\n                    <div>\r\n                        <button\r\n                            onClick={() => {\r\n                                setCurrentPage(\"AddWarning\");\r\n                            }}\r\n                        >\r\n                            Go to AddWarning Component\r\n                        </button>\r\n                        <br />\r\n                        <button\r\n                            onClick={() => {\r\n                                setCurrentPage(\"SearchMovie\");\r\n                            }}\r\n                        >\r\n                            Go to Main Page Component\r\n                        </button>\r\n                        <br />\r\n                        <button\r\n                            onClick={() => {\r\n                                setCurrentPage(\"MovieInfo\");\r\n                            }}\r\n                        >\r\n                            Go to Movie Info Component\r\n                        </button>\r\n                        <br />\r\n                        <button\r\n                            onClick={() => {\r\n                                setCurrentPage(\"SignIn\");\r\n                            }}\r\n                        >\r\n                            Go to Sign In Component\r\n                        </button>\r\n                        <br />\r\n                        <button\r\n                            onClick={() => {\r\n                                setCurrentPage(\"SignUp\");\r\n                            }}\r\n                        >\r\n                            Go to Sign Up Component\r\n                        </button>\r\n                        <br />\r\n                        <button\r\n                            onClick={() => {\r\n                                setCurrentPage(\"Admin\");\r\n                            }}\r\n                        >\r\n                            Go to Admin Component\r\n                        </button>\r\n                        <br />\r\n                    </div>\r\n                );\r\n\r\n            case \"AddWarning\":\r\n                return (\r\n                    <AddWarning\r\n                        setCurrentPage={setCurrentPage}\r\n                        \r\n                        movieTitle={selectedMovie.title}\r\n                        movieID={selectedMovie.id}\r\n                    />\r\n                );\r\n\r\n            case \"Navigation\":\r\n                return (\r\n                    <div className=\"App\">\r\n                        <SearchBar setPage={setCurrentPage} setMovie={setSelectedMovie} />\r\n\r\n                        <Movielist setPage={setCurrentPage} setMovie={setSelectedMovie} />\r\n                    </div>\r\n                );\r\n\r\n            case \"MovieInfo\":\r\n                return (\r\n                    <div>\r\n                        <ViewMovieInfo tmdb={selectedMovie.tmdb} setCurrentPage={setCurrentPage} movieTitle={selectedMovie.title} movieID={selectedMovie.id} posterPath={selectedMovie.posterPath} />\r\n                    </div>\r\n                );\r\n\r\n            case \"SignIn\":\r\n                return <Login setCurrentPage={setCurrentPage}/>\r\n                \r\n            case \"SignUp\":\r\n                return <SignUp setCurrentPage={setCurrentPage}/>;\r\n\r\n            case \"Admin\":\r\n                return <Admin />;\r\n            case \"UserProfile\":\r\n                return <UserProfile setCurrentPage={setCurrentPage} />\r\n            default:\r\n                return <h1>Error</h1>;\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            \r\n            <NavBar setCurrentPage={setCurrentPage} />\r\n            <Home />\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}